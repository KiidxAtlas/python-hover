{"version":3,"file":"extension.js","mappings":"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AU,CACN,sCACA,gCACA,4CAEJtE,YAAa,kCAGjB,QAAW,CACPsE,SAAU,CACN,0BACA,4BACA,4BAEJtE,YAAa,0BAGjB,UAAa,CACTsE,SAAU,CACN,kDACA,wDACA,kCAEJtE,YAAa,yBAGjB,SAAY,CACRsE,SAAU,CACN,gDACA,sCACA,+CAEJtE,YAAa,gCAGjB,aAAgB,CACZsE,SAAU,CACN,8CACA,yCACA,sDAEJtE,YAAa,yBAGjB,YAAe,CACXsE,SAAU,CACN,wDACA,gDACA,mEAEJtE,YAAa,wBAGjB,MAAS,CACLsE,SAAU,CACN,yBACA,8BACA,+DAEJtE,YAAa,mDAIjB,GAAM,CACFsE,SAAU,CACN,8BACA,gDACA,iDAEJtE,YAAa,yBAGjB,KAAQ,CACJsE,SAAU,CACN,sBACA,gBACA,qBACA,QACA,qBACA,GACA,wBACA,kBACA,kBACA,oBACA,kBACA,QACA,kBACA,GACA,kBACA,2BACA,yBACA,0BACA,gBACA,QACA,yBACA,GACA,oBACA,iCACA,0BACA,4BACA,gBACA,oBACA,QACA,yCACA,GACA,4BACA,OACA,iCACA,qBACA,8BACA,QACA,6CACA,GACA,+BACA,6CACA,+BAEJtE,YAAa,4DAGjB,IAAO,CACHsE,SAAU,CACN,oBACA,+CACA,qCACA,mCACA,GACA,yBACA,iCACA,uDACA,8CACA,GACA,yBACA,oDACA,gEACA,GACA,uBACA,6CACA,yDACA,GACA,wBACA,qCACA,+CACA,uDACA,GACA,iBACA,qBACA,yBACA,+BACA,GACA,qBACA,uBACA,gCACA,QACA,6BACA,GACA,sBACA,oDACA,gEACA,8CAEJtE,YAAa,4DAGjB,MAAS,CACLsE,SAAU,CACN,qBACA,QACA,eACA,eACA,aACA,GACA,6BACA,cACA,4CACA,+BACA,gBACA,kCACA,GACA,2BACA,mBACA,6BACA,gBACA,qBACA,QACA,4CACA,GACA,oBACA,0CACA,yBACA,oBACA,GACA,oDACA,0BAEJtE,YAAa,0CAGjB,IAAO,CACHsE,SAAU,CACN,mBACA,mBACA,+BACA,GACA,oCACA,+BACA,8BACA,GACA,qCACA,sCACA,+CACA,GACA,eACA,0CACA,mBACA,GACA,qBACA,qBACA,yBACA,uBACA,wBACA,GACA,eACA,gBACA,sBACA,oCACA,GACA,qBACA,4BACA,sCACA,GACA,wBACA,oBACA,mBACA,kBACA,kBAEJtE,YAAa,mDAGjB,MAAS,CACLsE,SAAU,CACN,gBACA,gBACA,qCACA,2BACA,yBACA,GACA,uBACA,yCACA,GACA,2BACA,yBACA,iDACA,sCACA,uCACA,GACA,0BACA,gBACA,kCACA,gCACA,GACA,gBACA,sBACA,6CACA,GACA,6BACA,mBACA,mBACA,GACA,mBACA,wCACA,mCACA,GACA,oBACA,uCACA,8CACA,GACA,wBACA,sCACA,GACA,oBACA,sBACA,sBACA,eACA,GACA,+BACA,oCACA,GACA,aACA,eACA,eACA,eACA,GACA,iCACA,uEAEJtE,YAAa,gDAGjB,IAAO,CACHsE,SAAU,CACN,0DACA,2CACA,0CAEJtE,YAAa,sBAGjB,OAAU,CACNsE,SAAU,CACN,4CACA,iDACA,+CAEJtE,YAAa,qBAGjB,QAAW,CACPsE,SAAU,CACN,oCACA,wBACA,oDAEJtE,YAAa,gCAGjB,KAAQ,CACJsE,SAAU,CACN,iDACA,gCACA,uCAEJtE,YAAa,6BAGjB,OAAU,CACNsE,SAAU,CACN,YACA,oBACA,sBAEJtE,YAAa,2BAGjB,KAAQ,CACJsE,SAAU,CACN,sBACA,gCACA,2CAEJtE,YAAa,8BAGjB,OAAU,CACNsE,SAAU,CACN,wBACA,eACA,0BAEJtE,YAAa,6BAGjB,MAAS,CACLsE,SAAU,CACN,8BACA,sBACA,oDAEJtE,YAAa,6BAGjB,OAAU,CACNsE,SAAU,CACN,4BACA,sCACA,mCAEJtE,YAAa,iCAGjB,KAAQ,CACJsE,SAAU,CACN,oCACA,0CACA,0BAEJtE,YAAa,4BAGjB,MAAS,CACLsE,SAAU,CACN,uCACA,6BACA,6CAEJtE,YAAa,kBAGjB,SAAY,CACRsE,SAAU,CACN,mDACA,0CACA,mDAEJtE,YAAa,+BAGjB,MAAS,CACLsE,SAAU,CACN,oCACA,sCACA,oDAEJtE,YAAa,sBAGjB,OAAU,CACNsE,SAAU,CACN,qCACA,yBACA,kDAEJtE,YAAa,6BAGjB,IAAO,CACHsE,SAAU,CACN,yCACA,gDACA,mCAEJtE,YAAa,oBAGjB,OAAU,CACNsE,SAAU,CACN,+BACA,+BACA,uCAEJtE,YAAa,2BAGjB,SAAY,CACRsE,SAAU,CACN,qDACA,iCACA,oDAEJtE,YAAa,6BAIjB,KAAQ,CACJsE,SAAU,CACN,WACA,gCACA,2BAEJtE,YAAa,sBAGjB,MAAS,CACLsE,SAAU,CACN,YACA,8BACA,4BAEJtE,YAAa,uBAGjB,KAAQ,CACJsE,SAAU,CACN,WACA,mCACA,uCAEJtE,YAAa,cAIjB,UAAa,CACTsE,SAAU,CACN,0CACA,mCACA,sCAEJtE,YAAa,wBAGjB,WAAc,CACVsE,SAAU,CACN,uDACA,6CACA,wDAEJtE,YAAa,2BAGjB,UAAa,CACTsE,SAAU,CACN,+CACA,8CACA,kEAEJtE,YAAa,0BAGjB,SAAY,CACRsE,SAAU,CACN,wDACA,kCACA,gEAEJtE,YAAa,sCAGjB,WAAc,CACVsE,SAAU,CACN,gDACA,8CACA,6DAEJtE,YAAa,yCAGjB,eAAkB,CACdsE,SAAU,CACN,wDACA,wDACA,qEAEJtE,YAAa,iCAGjB,kBAAqB,CACjBsE,SAAU,CACN,8DACA,iDACA,8DAEJtE,YAAa,4BAGjB,YAAe,CACXsE,SAAU,CACN,0DACA,qDACA,gEAEJtE,YAAa,kCAGjB,kBAAqB,CACjBsE,SAAU,CACN,gDACA,8CACA,qEAEJtE,YAAa,8BAGjB,cAAiB,CACbsE,SAAU,CACN,qDACA,4CACA,oDAEJtE,YAAa,gCAIjB,kBAAmB,CACfsE,SAAU,CACN,kBACA,sDACA,2EACA,wDACA,GACA,kBACA,sDACA,uDACA,0DACA,GACA,iBACA,qDACA,0DACA,GACA,mBACA,+CACA,oDAEJtE,YAAa,yCAIjB,WAAY,CACRsE,SAAU,CACN,uDACA,qDACA,kDACA,6DACA,GACA,6BACA,oBACA,6BACA,oCACA,GACA,sBACA,uCACA,iDACA,mCACA,uDAEJtE,YAAa,qDAIjB,qBAAsB,CAClBsE,SAAU,CACN,8BACA,+CACA,0DACA,uDACA,GACA,0BACA,8CACA,uDACA,GACA,mBACA,mCACA,+CACA,GACA,uBACA,qDACA,kEAEJtE,YAAa,gDAGjB,qBAAsB,CAClBsE,SAAU,CACN,8BACA,iEACA,mDACA,6CACA,GACA,oBACA,6CACA,sDACA,GACA,mBACA,6DACA,gEAEJtE,YAAa,6DAGjB,oBAAqB,CACjBsE,SAAU,CACN,6BACA,+CACA,gCACA,0CACA,GACA,oBACA,uCACA,qDAEJtE,YAAa,8CAIjB,uBAAwB,CACpBsE,SAAU,CACN,gCACA,iCACA,2CACA,kCACA,GACA,qBACA,+DACA,uDACA,sDACA,GACA,aACA,0CACA,0CACA,0BAEJtE,YAAa,uDAIjB,iBAAkB,CACdsE,SAAU,CACN,qDACA,sCACA,mEACA,GACA,wBACA,yDACA,kEAEJtE,YAAa,uCAGjB,gBAAiB,CACbsE,SAAU,CACN,wEACA,4DACA,4BACA,gDAEJtE,YAAa,mDAGjB,iBAAkB,CACdsE,SAAU,CACN,yEACA,+BACA,mDAEJtE,YAAa,wDAGjB,iBAAkB,CACdsE,SAAU,CACN,6DACA,8DACA,mCACA,mDAEJtE,YAAa,0BAGjB,gBAAiB,CACbsE,SAAU,CACN,6BACA,0CACA,kDACA,GACA,sBACA,yCACA,+CACA,GACA,wBACA,sCACA,uCAEJtE,YAAa,iDAIjB,gBAAiB,CACbsE,SAAU,CACN,iBACA,4BACA,yBACA,qCACA,+CACA,GACA,wBACA,mCACA,4CACA,GACA,sCACA,cACA,uCAEJtE,YAAa,wCAIjB,gBAAiB,CACbsE,SAAU,CACN,gCACA,gEACA,4DACA,uDACA,GACA,+CACA,oCACA,qDACA,GACA,sCACA,yDAEJtE,YAAa,wDAIjB,kBAAmB,CACfsE,SAAU,CACN,mBACA,oBACA,oBACA,4DACA,GACA,6BACA,sEACA,GACA,qCACA,mCACA,oEAEJtE,YAAa,sCAGjB,yBAA0B,CACtBsE,SAAU,CACN,mBACA,+BACA,yCACA,6EACA,GACA,uBACA,mDACA,8DACA,GACA,sCACA,sEAEJtE,YAAa,oCAGjB,yBAA0B,CACtBsE,SAAU,CACN,mBACA,0BACA,sCACA,+FACA,GACA,oCACA,yCACA,uEACA,GACA,8BACA,gDACA,mBAEJtE,YAAa,oCAGjB,oBAAqB,CACjBsE,SAAU,CACN,mBACA,2BACA,0BACA,yCACA,sFACA,GACA,kCACA,0FACA,GACA,uBACA,yDAEJtE,YAAa,kCAIjB,QAAW,CACPsE,SAAU,CACN,4BACA,gCACA,0BACA,GACA,8BACA,6BACA,2CACA,GACA,wBACA,uCACA,yCAEJtE,YAAa,4BAGjB,QAAW,CACPsE,SAAU,CACN,iCACA,uBACA,GACA,yBACA,gCACA,gCACA,GACA,+BACA,mCACA,gCAEJtE,YAAa,iCAIjB,gBAAiB,CACbsE,SAAU,CACN,wBACA,8BACA,mCACA,sCACA,GACA,mBACA,0DACA,mEACA,GACA,sBACA,qBACA,0BACA,iBACA,mDACA,mDAEJtE,YAAa,+CAGjB,WAAc,CACVsE,SAAU,CACN,sBACA,qBACA,0BACA,kCACA,mCACA,GACA,4BACA,yDACA,+DACA,GACA,mBACA,qEACA,yCAEJtE,YAAa,gDAIjB,4BAA6B,CACzBsE,SAAU,CACN,wCACA,GACA,kBACA,oBACA,gCACA,WACA,2BACA,eACA,mCACA,GACA,UACA,iCACA,iCACA,GACA,2BACA,kBACA,8BACA,WACA,qBACA,mBACA,sBACA,wBACA,wBACA,iBAEJtE,YAAa,wDAIjB,kBAAmB,CACfsE,SAAU,CACN,8BACA,GACA,0BACA,mBACA,oCACA,4CACA,uCACA,qBACA,GACA,gBACA,mBACA,4BACA,+BACA,GACA,yCACA,mDACA,8CAEJtE,YAAa,+CAGjB,sBAAuB,CACnBsE,SAAU,CACN,kCACA,GACA,0BACA,oBACA,gBACA,mBACA,6CACA,GACA,0CACA,wBACA,GACA,eACA,mEACA,0CAEJtE,YAAa,6CAIjB,MAAS,CACLsE,SAAU,CACN,2BACA,eACA,cACA,uBACA,cACA,uBACA,cACA,yBACA,GACA,4BACA,eACA,6BACA,4BACA,mBACA,6BACA,mBACA,6BACA,GACA,mBACA,eACA,6BACA,2CACA,yCACA,uCAEJtE,YAAa,8CAIjB,IAAO,CACHsE,SAAU,CACN,gBACA,gCACA,yBACA,GACA,wBACA,uCACA,6CACA,GACA,6BACA,gCACA,2BACA,GACA,mBACA,oDACA,uCAEJtE,YAAa,wBAGjB,GAAM,CACFsE,SAAU,CACN,eACA,+BACA,uCACA,GACA,mBACA,kCACA,2CACA,GACA,wBACA,qEACA,qBACA,GACA,wBACA,wBACA,6BACA,gCAEJtE,YAAa,uBAGjB,IAAO,CACHsE,SAAU,CACN,gBACA,yBACA,oBACA,GACA,wBACA,iCACA,2BACA,GACA,qBACA,wBACA,uBACA,GACA,uBACA,kCACA,uBACA,GACA,qBACA,2BACA,kCAEJtE,YAAa,wBAGjB,GAAM,CACFsE,SAAU,CACN,oBACA,4BACA,+BACA,GACA,uBACA,6BACA,qBACA,GACA,oBACA,0BACA,+BACA,GACA,mBACA,8BACA,kBACA,GACA,wBACA,+CACA,yCACA,sBAEJtE,YAAa,+BAGjB,GAAM,CACFsE,SAAU,CACN,wBACA,oBACA,iCACA,GACA,qBACA,mBACA,yBACA,sBACA,mBACA,GACA,sBACA,iCACA,+BACA,GACA,kBACA,wBACA,wBACA,GACA,yBACA,yBACA,qBAEJtE,YAAa,gCAIjB,MAAS,CACLsE,SAAU,CACN,8BACA,0BACA,4CACA,6BACA,GACA,0BACA,4BACA,iDACA,mCACA,yBACA,GACA,oBACA,4BACA,yBACA,mCACA,kBACA,GACA,wBACA,wDAEJtE,YAAa,2CAGjB,MAAS,CACLsE,SAAU,CACN,oBACA,oBACA,kCACA,oBACA,GACA,8BACA,8BACA,WACA,iDACA,wBACA,6BACA,+BACA,sBACA,GACA,oBACA,8BACA,gDACA,kDACA,4BACA,4BACA,+BAEJtE,YAAa,mC,WCrlErBuE,EAAOC,QAAUC,QAAQ,O,8FCUzB,MAAaisD,EAKF,0BAAOC,CAAoBriC,GAC9B,MAAMsiC,EAAetiC,EAAMiH,OAG3B,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","sources":["webpack://python-hover/./src/documentation/customDocumentation.ts","webpack://python-hover/./src/documentation/exampleEnricher.ts","webpack://python-hover/external commonjs \"vscode\"","webpack://python-hover/./node_modules/pako/lib/zlib/inflate.js","webpack://python-hover/./node_modules/pako/index.js","webpack://python-hover/./src/data/enhancedExamples.ts","webpack://python-hover/./src/data/typingConstructs.ts","webpack://python-hover/external node-commonjs \"fs/promises\"","webpack://python-hover/./node_modules/pako/lib/utils/strings.js","webpack://python-hover/./node_modules/pako/lib/zlib/inftrees.js","webpack://python-hover/./src/data/documentationUrls.ts","webpack://python-hover/./src/ui/versionComparison.ts","webpack://python-hover/./src/resolvers/methodResolver.ts","webpack://python-hover/./src/services/errorNotifier.ts","webpack://python-hover/./src/services/config.ts","webpack://python-hover/./node_modules/pako/lib/zlib/adler32.js","webpack://python-hover/./node_modules/pako/lib/deflate.js","webpack://python-hover/./node_modules/whatwg-url/lib/public-api.js","webpack://python-hover/./node_modules/pako/lib/zlib/trees.js","webpack://python-hover/./src/services/inventory.ts","webpack://python-hover/./src/resolvers/symbolResolver.ts","webpack://python-hover/./src/services/logger.ts","webpack://python-hover/./node_modules/pako/lib/zlib/zstream.js","webpack://python-hover/./node_modules/pako/lib/zlib/messages.js","webpack://python-hover/./src/ui/versionDetector.ts","webpack://python-hover/./src/ui/hoverProvider.ts","webpack://python-hover/./node_modules/pako/lib/zlib/crc32.js","webpack://python-hover/external node-commonjs \"punycode\"","webpack://python-hover/./src/services/packageDetector.ts","webpack://python-hover/external node-commonjs \"child_process\"","webpack://python-hover/./node_modules/whatwg-url/lib/url-state-machine.js","webpack://python-hover/./src/ui/smartSuggestions.ts","webpack://python-hover/./node_modules/webidl-conversions/lib/index.js","webpack://python-hover/./node_modules/whatwg-url/lib/URL.js","webpack://python-hover/./node_modules/tr46/index.js","webpack://python-hover/./src/documentation/thirdPartyLibraries.ts","webpack://python-hover/./node_modules/whatwg-url/lib/utils.js","webpack://python-hover/external node-commonjs \"path\"","webpack://python-hover/external node-commonjs \"crypto\"","webpack://python-hover/./node_modules/whatwg-url/lib/URL-impl.js","webpack://python-hover/./node_modules/pako/lib/inflate.js","webpack://python-hover/./node_modules/pako/lib/zlib/inffast.js","webpack://python-hover/./node_modules/pako/lib/zlib/gzheader.js","webpack://python-hover/external node-commonjs \"stream\"","webpack://python-hover/external node-commonjs \"http\"","webpack://python-hover/external node-commonjs \"url\"","webpack://python-hover/external node-commonjs \"https\"","webpack://python-hover/external node-commonjs \"zlib\"","webpack://python-hover/./node_modules/node-fetch/lib/index.mjs","webpack://python-hover/./src/data/specialMethods.ts","webpack://python-hover/./src/services/cache.ts","webpack://python-hover/./node_modules/pako/lib/zlib/deflate.js","webpack://python-hover/./src/utils/urlValidator.ts","webpack://python-hover/./src/data/staticExamples.ts","webpack://python-hover/external node-commonjs \"util\"","webpack://python-hover/./src/services/typeDetectionService.ts","webpack://python-hover/./src/resolvers/contextDetector.ts","webpack://python-hover/./src/ui/hoverTheme.ts","webpack://python-hover/./src/documentation/documentationFetcher.ts","webpack://python-hover/./src/utils/fetchWithTimeout.ts","webpack://python-hover/./node_modules/pako/lib/zlib/constants.js","webpack://python-hover/./node_modules/pako/lib/utils/common.js","webpack://python-hover/external node-commonjs \"fs\"","webpack://python-hover/webpack/bootstrap","webpack://python-hover/webpack/runtime/define property getters","webpack://python-hover/webpack/runtime/hasOwnProperty shorthand","webpack://python-hover/webpack/runtime/make namespace object","webpack://python-hover/./src/extension.ts"],"sourcesContent":["/**\n * Custom Documentation Loader\n * Allows teams to add project-specific documentation\n */\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as vscode from 'vscode';\nimport { Logger } from '../services/logger';\n\nexport interface CustomDoc {\n    symbol: string;\n    description: string;\n    example?: string;\n    category?: string;\n    tags?: string[];\n    url?: string;\n}\n\nexport interface CustomDocsConfig {\n    version: string;\n    docs: CustomDoc[];\n}\n\nexport class CustomDocumentationLoader {\n    private customDocs: Map<string, CustomDoc> = new Map();\n    private configFiles = ['.python-hover.json', 'python-hover.json', '.vscode/python-hover.json'];\n\n    /**\n     * Load custom documentation from workspace\n     */\n    async loadCustomDocs(workspaceFolder?: vscode.WorkspaceFolder): Promise<void> {\n        this.customDocs.clear();\n\n        if (!workspaceFolder) {\n            const folders = vscode.workspace.workspaceFolders;\n            if (!folders || folders.length === 0) {\n                return;\n            }\n            workspaceFolder = folders[0];\n        }\n\n        for (const configFile of this.configFiles) {\n            const configPath = path.join(workspaceFolder.uri.fsPath, configFile);\n\n            try {\n                if (fs.existsSync(configPath)) {\n                    const content = fs.readFileSync(configPath, 'utf-8');\n                    const config: CustomDocsConfig = JSON.parse(content);\n\n                    if (config.docs && Array.isArray(config.docs)) {\n                        for (const doc of config.docs) {\n                            this.customDocs.set(doc.symbol.toLowerCase(), doc);\n                        }\n                        Logger.getInstance().debug(`Loaded ${config.docs.length} custom docs from ${configFile}`);\n                        return; // Found config, stop searching\n                    }\n                }\n            } catch (error) {\n                Logger.getInstance().error(`Error loading custom docs from ${configFile}:`, error as Error);\n            }\n        }\n    }\n\n    /**\n     * Get custom documentation for a symbol\n     */\n    getCustomDoc(symbol: string): CustomDoc | null {\n        return this.customDocs.get(symbol.toLowerCase()) || null;\n    }\n\n    /**\n     * Check if custom docs are loaded\n     */\n    hasCustomDocs(): boolean {\n        return this.customDocs.size > 0;\n    }\n\n    /**\n     * Get all custom docs\n     */\n    getAllCustomDocs(): CustomDoc[] {\n        return Array.from(this.customDocs.values());\n    }\n\n    /**\n     * Create a sample configuration file\n     */\n    static createSampleConfig(): CustomDocsConfig {\n        return {\n            version: \"1.0\",\n            docs: [\n                {\n                    symbol: \"our_custom_decorator\",\n                    description: \"Custom decorator used in our project for timing functions.\",\n                    example: `@our_custom_decorator\ndef my_function():\n    # Your code here\n    pass\n\n# The decorator will automatically log execution time`,\n                    category: \"decorators\",\n                    tags: [\"custom\", \"timing\", \"performance\"]\n                },\n                {\n                    symbol: \"DatabaseConnection\",\n                    description: \"Our custom database connection class with automatic retry logic.\",\n                    example: `from myproject import DatabaseConnection\n\n# Create connection\ndb = DatabaseConnection(\n    host='localhost',\n    database='mydb',\n    retry_count=3\n)\n\n# Use connection\nwith db.connection() as conn:\n    cursor = conn.cursor()\n    cursor.execute(\"SELECT * FROM users\")\n    results = cursor.fetchall()`,\n                    category: \"database\",\n                    tags: [\"custom\", \"database\", \"connection\"],\n                    url: \"https://internal-docs.company.com/database\"\n                }\n            ]\n        };\n    }\n\n    /**\n     * Create a sample config file in workspace\n     */\n    static async createSampleConfigFile(workspaceFolder: vscode.WorkspaceFolder): Promise<void> {\n        const configPath = path.join(workspaceFolder.uri.fsPath, '.python-hover.json');\n        const sampleConfig = CustomDocumentationLoader.createSampleConfig();\n\n        fs.writeFileSync(configPath, JSON.stringify(sampleConfig, null, 2), 'utf-8');\n\n        const doc = await vscode.workspace.openTextDocument(configPath);\n        await vscode.window.showTextDocument(doc);\n    }\n}\n\n/**\n * Format custom documentation for display\n */\nexport function formatCustomDoc(doc: CustomDoc): string {\n    const parts: string[] = [];\n\n    parts.push(`### 📝 ${doc.symbol}`);\n\n    if (doc.category) {\n        parts.push(`**Category:** ${doc.category}`);\n    }\n\n    parts.push(`\\n${doc.description}`);\n\n    if (doc.example) {\n        parts.push(`\\n**Example:**\\n\\`\\`\\`python\\n${doc.example}\\n\\`\\`\\``);\n    }\n\n    if (doc.tags && doc.tags.length > 0) {\n        parts.push(`\\n**Tags:** ${doc.tags.map(t => `\\`${t}\\``).join(', ')}`);\n    }\n\n    if (doc.url) {\n        parts.push(`\\n📚 [Documentation](${doc.url})`);\n    }\n\n    parts.push(`\\n---\\n*Custom documentation from project*`);\n\n    return parts.join('\\n');\n}\n","import { DocumentationSnippet } from './documentationFetcher';\nimport { ENHANCED_EXAMPLES } from '../data/enhancedExamples';\nimport { STATIC_EXAMPLES } from '../data/staticExamples';\n\n/**\n * Enriches documentation snippets with examples from staticExamples and enhancedExamples\n */\nexport class ExampleEnricher {\n    /**\n     * Adds examples to a documentation snippet if they exist\n     * @param docSnippet The original documentation snippet\n     * @param symbol The symbol to find examples for\n     * @param context Optional context (like 'str' for str.upper)\n     */\n    public enrichWithExamples(\n        docSnippet: DocumentationSnippet,\n        symbol: string,\n        context?: string\n    ): DocumentationSnippet {\n        // Make a copy to avoid modifying the original\n        const enrichedSnippet: DocumentationSnippet = {\n            ...docSnippet,\n            content: docSnippet.content\n        };\n\n        // Try to find examples for this symbol\n        const bareSymbol = symbol.split('.').pop() || symbol;\n        let exampleContent = '';\n        let exampleFound = false;\n\n        // First check enhanced examples\n        if (context && ENHANCED_EXAMPLES[`${context}.${bareSymbol}`]) {\n            // Method with context (e.g., \"str.upper\")\n            exampleContent = this.formatEnhancedExample(ENHANCED_EXAMPLES[`${context}.${bareSymbol}`].content);\n            exampleFound = true;\n        } else if (ENHANCED_EXAMPLES[bareSymbol]) {\n            // Direct symbol match (e.g., \"for\", \"class\", \"__init__\")\n            exampleContent = this.formatEnhancedExample(ENHANCED_EXAMPLES[bareSymbol].content);\n            exampleFound = true;\n        } else if (STATIC_EXAMPLES[bareSymbol]) {\n            // Fall back to static examples\n            exampleContent = this.formatStaticExample(STATIC_EXAMPLES[bareSymbol].examples);\n            exampleFound = true;\n        }\n\n        // Add examples if found\n        if (exampleFound) {\n            enrichedSnippet.content += '\\n\\n## Examples\\n\\n' + exampleContent;\n        }\n\n        return enrichedSnippet;\n    }\n\n    /**\n     * Format an enhanced example for display\n     */\n    private formatEnhancedExample(content: string): string {\n        // Enhanced examples are already properly formatted\n        return content;\n    }\n\n    /**\n     * Format static examples for display\n     */\n    private formatStaticExample(examples: string[]): string {\n        return '```python\\n' + examples.join('\\n') + '\\n```';\n    }\n}\n","module.exports = require(\"vscode\");","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32       = require('./adler32');\nconst crc32         = require('./crc32');\nconst inflate_fast  = require('./inffast');\nconst inflate_table = require('./inftrees');\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH, Z_BLOCK, Z_TREES,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,\n  Z_DEFLATED\n} = require('./constants');\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n};\n\n\nmodule.exports.inflateReset = inflateReset;\nmodule.exports.inflateReset2 = inflateReset2;\nmodule.exports.inflateResetKeep = inflateResetKeep;\nmodule.exports.inflateInit = inflateInit;\nmodule.exports.inflateInit2 = inflateInit2;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateEnd = inflateEnd;\nmodule.exports.inflateGetHeader = inflateGetHeader;\nmodule.exports.inflateSetDictionary = inflateSetDictionary;\nmodule.exports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nconst { Deflate, deflate, deflateRaw, gzip } = require('./lib/deflate');\n\nconst { Inflate, inflate, inflateRaw, ungzip } = require('./lib/inflate');\n\nconst constants = require('./lib/zlib/constants');\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = ungzip;\nmodule.exports.constants = constants;\n","/**\n * Enhanced examples with practical code snippets and type hints\n * Imported from the deprecated version of python-hover\n */\n\nexport interface EnhancedExampleEntry {\n    content: string;\n    description?: string;\n}\n\nexport const ENHANCED_EXAMPLES: Record<string, EnhancedExampleEntry> = {\n    // Language constructs\n    'class': {\n        content: '```python\\n# Basic class definition\\nclass Person:\\n    def __init__(self, name: str, age: int):\\n        self.name = name\\n        self.age = age\\n    \\n    def __repr__(self) -> str:\\n        return f\"Person(\\'{self.name}\\', {self.age})\"\\n    \\n    def greet(self) -> str:\\n        return f\"Hello, I\\'m {self.name}\"\\n\\n# Inheritance\\nclass Student(Person):\\n    def __init__(self, name: str, age: int, student_id: str):\\n        super().__init__(name, age)\\n        self.student_id = student_id\\n\\n# Usage\\nperson = Person(\"Alice\", 30)\\nstudent = Student(\"Bob\", 20, \"S123\")\\n```',\n        description: 'Define a new class'\n    },\n\n    'def': {\n        content: '```python\\n# Function with type hints\\ndef calculate_area(length: float, width: float) -> float:\\n    \"\"\"Calculate the area of a rectangle.\"\"\"\\n    return length * width\\n\\n# Function with default parameters\\ndef greet(name: str, greeting: str = \"Hello\") -> str:\\n    return f\"{greeting}, {name}!\"\\n\\n# Function with *args and **kwargs\\ndef flexible_function(*args, **kwargs):\\n    print(f\"Args: {args}\")\\n    print(f\"Kwargs: {kwargs}\")\\n\\n# Async function\\nasync def fetch_data(url: str) -> dict:\\n    # Simulated async operation\\n    return {\"data\": \"example\"}\\n```',\n        description: 'Define a function'\n    },\n\n    'import': {\n        content: '```python\\n# Basic imports\\nimport os\\nimport sys\\nimport math\\n\\n# Import with alias\\nimport numpy as np\\nimport pandas as pd\\n\\n# Import specific items\\nfrom datetime import datetime, timedelta\\nfrom collections import defaultdict, Counter\\n\\n# Import all (use sparingly)\\nfrom math import *\\n\\n# Conditional imports\\ntry:\\n    import ujson as json\\nexcept ImportError:\\n    import json\\n\\n# Relative imports (in packages)\\nfrom . import utils\\nfrom ..models import User\\n```',\n        description: 'Import modules'\n    },\n\n    'try': {\n        content: '```python\\n# Basic exception handling\\ntry:\\n    result = 10 / 0\\nexcept ZeroDivisionError as e:\\n    print(f\"Error: {e}\")\\nexcept Exception as e:\\n    print(f\"Unexpected error: {e}\")\\nelse:\\n    print(\"No exceptions occurred\")\\nfinally:\\n    print(\"Cleanup code\")\\n\\n# Multiple exception types\\ntry:\\n    data = json.loads(user_input)\\n    value = data[\\'key\\']\\nexcept (json.JSONDecodeError, KeyError) as e:\\n    print(f\"Data processing error: {e}\")\\n\\n# Re-raising exceptions\\ntry:\\n    risky_operation()\\nexcept ValueError:\\n    log_error(\"ValueError occurred\")\\n    raise  # Re-raise the same exception\\n```',\n        description: 'Handle exceptions'\n    },\n\n    'with': {\n        content: '```python\\n# File handling\\nwith open(\\'file.txt\\', \\'r\\') as f:\\n    content = f.read()\\n\\n# Multiple context managers\\nwith open(\\'input.txt\\', \\'r\\') as infile, open(\\'output.txt\\', \\'w\\') as outfile:\\n    data = infile.read()\\n    outfile.write(data.upper())\\n\\n# Custom context manager\\nfrom contextlib import contextmanager\\n\\n@contextmanager\\ndef timer():\\n    start = time.time()\\n    try:\\n        yield\\n    finally:\\n        print(f\"Elapsed: {time.time() - start:.2f}s\")\\n\\nwith timer():\\n    time.sleep(1)\\n\\n# Async context manager\\nasync with aiohttp.ClientSession() as session:\\n    async with session.get(\\'https://api.example.com\\') as response:\\n        data = await response.json()\\n```',\n        description: 'Context manager'\n    },\n\n    'for': {\n        content: '```python\\n# Iterating over sequences\\nfruits = [\\'apple\\', \\'banana\\', \\'cherry\\']\\nfor fruit in fruits:\\n    print(fruit)\\n\\n# With enumerate for indices\\nfor i, fruit in enumerate(fruits):\\n    print(f\"{i}: {fruit}\")\\n\\n# Dictionary iteration\\nuser = {\\'name\\': \\'Alice\\', \\'age\\': 30, \\'city\\': \\'New York\\'}\\nfor key, value in user.items():\\n    print(f\"{key}: {value}\")\\n\\n# Range iterations\\nfor i in range(5):        # 0, 1, 2, 3, 4\\n    print(i)\\n\\nfor i in range(2, 8, 2):  # 2, 4, 6\\n    print(i)\\n\\n# List comprehensions (alternative to loops)\\nsquares = [x**2 for x in range(10)]\\neven_squares = [x**2 for x in range(10) if x % 2 == 0]\\n```',\n        description: 'Loop over a sequence'\n    },\n\n    'lambda': {\n        content: '```python\\n# Basic lambda functions\\nsquare = lambda x: x**2\\nadd = lambda x, y: x + y\\n\\n# Using with built-in functions\\nnumbers = [1, 2, 3, 4, 5]\\nsquared = list(map(lambda x: x**2, numbers))\\nevens = list(filter(lambda x: x % 2 == 0, numbers))\\n\\n# Sorting with lambda\\nstudents = [(\\'Alice\\', 85), (\\'Bob\\', 90), (\\'Charlie\\', 78)]\\nstudents.sort(key=lambda x: x[1])  # Sort by grade\\n\\n# Conditional lambda\\nmax_val = lambda a, b: a if a > b else b\\n```',\n        description: 'Create anonymous function'\n    },\n\n    // String methods\n    'str.upper': {\n        content: '```python\\n# Convert string to uppercase\\n\"hello\".upper()  # Returns \"HELLO\"\\n\\n# Useful for case-insensitive comparisons\\nuser_input = \"yes\"\\nif user_input.upper() == \"YES\":\\n    print(\"User agreed\")\\n\\n# Works with any string, including variables\\nname = \"alice\"\\ngreeting = f\"Hello, {name.upper()}!\"  # \"Hello, ALICE!\"\\n```',\n        description: 'Convert string to uppercase'\n    },\n\n    'str.lower': {\n        content: '```python\\n# Convert string to lowercase\\n\"HELLO\".lower()  # Returns \"hello\"\\n\\n# Case normalization for comparison\\nemail = \"User@Example.COM\"\\nnormalized = email.lower()  # \"user@example.com\"\\n\\n# Case-insensitive validation\\nresponse = \"YES\"\\nif response.lower() == \"yes\":\\n    print(\"Affirmative response\")\\n```',\n        description: 'Convert string to lowercase'\n    },\n\n    'str.split': {\n        content: '```python\\n# Split by whitespace (default)\\n\"hello world\".split()  # [\"hello\", \"world\"]\\n\\n# Split by specific delimiter\\n\"apple,banana,cherry\".split(\",\")  # [\"apple\", \"banana\", \"cherry\"]\\n\\n# Limit splits with maxsplit parameter\\n\"a-b-c-d\".split(\"-\", maxsplit=2)  # [\"a\", \"b\", \"c-d\"]\\n\\n# Practical example: parsing CSV data\\ndata = \"John,25,New York\"\\nname, age, city = data.split(\",\")\\n```',\n        description: 'Split string into list by delimiter'\n    },\n\n    'str.join': {\n        content: '```python\\n# Join list elements into string\\n\"-\".join([\"apple\", \"banana\", \"cherry\"])  # \"apple-banana-cherry\"\\n\\n# Empty separator for concatenation\\n\"\".join([\"a\", \"b\", \"c\"])  # \"abc\"\\n\\n# Newline separator for multi-line text\\nlines = [\"First line\", \"Second line\", \"Third line\"]\\ntext = \"\\\\n\".join(lines)\\n\\n# Joining path components\\npath = \"/\".join([\"home\", \"user\", \"documents\", \"file.txt\"])  # \"home/user/documents/file.txt\"\\n```',\n        description: 'Join iterable elements with string'\n    },\n\n    // List methods\n    'list.append': {\n        content: '```python\\n# Add single element to end of list\\nfruits = [\"apple\", \"banana\"]\\nfruits.append(\"cherry\")  # fruits becomes [\"apple\", \"banana\", \"cherry\"]\\n\\n# Append any type of object\\nnumbers = [1, 2, 3]\\nnumbers.append(4)  # [1, 2, 3, 4]\\n\\n# Note: Appending a list adds it as a single element\\nlist1 = [1, 2]\\nlist1.append([3, 4])  # list1 becomes [1, 2, [3, 4]]\\n\\n# To add multiple items individually, use extend() instead\\n```',\n        description: 'Add item to end of list'\n    },\n\n    'list.extend': {\n        content: '```python\\n# Add multiple items from iterable\\nfruits = [\"apple\", \"banana\"]\\nfruits.extend([\"cherry\", \"date\"])  # fruits becomes [\"apple\", \"banana\", \"cherry\", \"date\"]\\n\\n# Works with any iterable, not just lists\\nnumbers = [1, 2]\\nnumbers.extend(range(3, 6))  # numbers becomes [1, 2, 3, 4, 5]\\n\\n# Extend with string (adds each character)\\nchars = [\"A\", \"B\"]\\nchars.extend(\"CD\")  # chars becomes [\"A\", \"B\", \"C\", \"D\"]\\n\\n# Equivalent to: for item in iterable: list.append(item)\\n```',\n        description: 'Extend list with items from iterable'\n    },\n\n    // Dictionary methods\n    'dict.keys': {\n        content: '```python\\n# Get view of dictionary keys\\nuser = {\"name\": \"Alice\", \"age\": 30, \"city\": \"New York\"}\\nkeys = user.keys()  # dict_keys([\"name\", \"age\", \"city\"])\\n\\n# Convert to list if needed\\nkey_list = list(user.keys())  # [\"name\", \"age\", \"city\"]\\n\\n# Iterate over keys\\nfor key in user.keys():\\n    print(f\"Key: {key}, Value: {user[key]}\")\\n\\n# Views are dynamic - they reflect dictionary changes\\nuser[\"email\"] = \"alice@example.com\"\\n# Now keys contains \"email\" too\\n```',\n        description: 'Get view of dictionary keys'\n    },\n\n    'dict.values': {\n        content: '```python\\n# Get view of dictionary values\\nuser = {\"name\": \"Alice\", \"age\": 30, \"city\": \"New York\"}\\nvalues = user.values()  # dict_values([\"Alice\", 30, \"New York\"])\\n\\n# Convert to list if needed\\nvalue_list = list(user.values())  # [\"Alice\", 30, \"New York\"]\\n\\n# Iterate over values\\nfor value in user.values():\\n    print(f\"Value: {value}\")\\n\\n# Calculate statistics\\nnumbers = {\"a\": 10, \"b\": 20, \"c\": 30}\\ntotal = sum(numbers.values())  # 60\\naverage = total / len(numbers)  # 20.0\\n```',\n        description: 'Get view of dictionary values'\n    },\n\n    'dict.items': {\n        content: '```python\\n# Get view of (key, value) pairs\\nuser = {\"name\": \"Alice\", \"age\": 30, \"city\": \"New York\"}\\nitems = user.items()  # dict_items([(\"name\", \"Alice\"), (\"age\", 30), (\"city\", \"New York\")])\\n\\n# Iterate over key-value pairs\\nfor key, value in user.items():\\n    print(f\"{key}: {value}\")\\n\\n# Unpack in list comprehension\\nupper_items = {k.upper(): v for k, v in user.items()}\\n# {\"NAME\": \"Alice\", \"AGE\": 30, \"CITY\": \"New York\"}\\n\\n# Filter dictionary based on values\\nfiltered = {k: v for k, v in user.items() if isinstance(v, str)}\\n# {\"name\": \"Alice\", \"city\": \"New York\"}\\n```',\n        description: 'Get view of dictionary key-value pairs'\n    },\n\n    // Special dunder methods\n    '__init__': {\n        content: '```python\\n# Basic constructor\\nclass Person:\\n    def __init__(self, name, age):\\n        self.name = name\\n        self.age = age\\n\\n# Constructor with type hints\\nclass Rectangle:\\n    def __init__(self, width: float, height: float):\\n        self.width = width\\n        self.height = height\\n\\n# Constructor with default values\\nclass Config:\\n    def __init__(self, path=None, defaults=None, **kwargs):\\n        self.path = path or \"config.ini\"\\n        self.defaults = defaults or {}\\n        self.options = kwargs\\n\\n# Constructor with validation\\nclass Circle:\\n    def __init__(self, radius):\\n        if radius <= 0:\\n            raise ValueError(\"Radius must be positive\")\\n        self.radius = radius\\n```',\n        description: 'Initialize a new instance'\n    },\n\n    '__str__': {\n        content: '```python\\n# User-friendly string representation\\nclass Person:\\n    def __init__(self, name, age):\\n        self.name = name\\n        self.age = age\\n    \\n    def __str__(self) -> str:\\n        return f\"{self.name}, {self.age} years old\"\\n\\n# Usage:\\nperson = Person(\"Alice\", 30)\\nprint(person)  # \"Alice, 30 years old\"\\nstr(person)    # \"Alice, 30 years old\"\\n\\n# Called by print() and str()\\n```',\n        description: 'User-friendly string representation'\n    },\n\n    '__repr__': {\n        content: '```python\\n# Official string representation\\nclass Point:\\n    def __init__(self, x, y):\\n        self.x = x\\n        self.y = y\\n    \\n    def __repr__(self) -> str:\\n        return f\"Point({self.x}, {self.y})\"\\n\\n# Usage:\\npoint = Point(3, 4)\\nrepr(point)  # \"Point(3, 4)\"\\npoint        # Point(3, 4)  - in interactive console\\n\\n# Fallback for __str__ if not defined\\n# Good practice: output should be valid Python code\\n```',\n        description: 'Official string representation'\n    }\n};\n","/**\n * Python typing constructs and their descriptions\n * Primarily used for hover information\n */\n\nexport const TYPING_CONSTRUCTS: Record<string, string> = {\n    'List': 'Generic version of list. Subscriptable with the type of items: `List[int]`',\n    'Dict': 'Generic version of dict. Requires key and value types: `Dict[str, int]`',\n    'Tuple': 'Generic version of tuple. Fixed-length: `Tuple[int, str]` or variable: `Tuple[int, ...]`',\n    'Set': 'Generic version of set. Subscriptable with the type of items: `Set[int]`',\n    'FrozenSet': 'Immutable variant of Set: `FrozenSet[int]`',\n    'Optional': 'Type that is either the specified type or None: `Optional[str]` is `Union[str, None]`',\n    'Union': 'Type that could be any of several types: `Union[int, str, bool]`',\n    'Any': 'Special type indicating any type is acceptable. Disables type checking.',\n    'Callable': 'Function or callable object. Specify arg and return types: `Callable[[int, str], bool]`',\n    'Iterator': 'Iterator yielding items of the specified type: `Iterator[int]`',\n    'Iterable': 'Iterable of items of the specified type: `Iterable[str]`',\n    'Sequence': 'Sequence of items of the specified type: `Sequence[float]`',\n    'Mapping': 'Mapping with keys and values of specified types: `Mapping[str, Any]`',\n    'Type': 'A type itself. Used for class references: `Type[User]`',\n    'TypeVar': 'Type variable for generic functions/classes: `T = TypeVar(\"T\")`',\n    'Protocol': 'Define structural subtyping protocols (PEP 544)',\n    'Generic': 'Base for user-defined generic classes: `class Stack(Generic[T]): ...`',\n    'TypedDict': 'Dictionary with known keys and value types: `class Movie(TypedDict): title: str`',\n    'Final': 'Indicates a value cannot be reassigned: `x: Final = 1`',\n    'Literal': 'Type restricted to specific values: `Literal[\"red\", \"green\", \"blue\"]`',\n    'ClassVar': 'Class variable rather than instance variable: `count: ClassVar[int] = 0`',\n    'NewType': 'Create distinct types: `UserId = NewType(\"UserId\", int)`',\n    'cast': 'Cast a value to a type: `x = cast(List[int], y)`',\n    'overload': 'Decorator for defining multiple function signatures',\n    'Annotated': 'Type with additional metadata: `Annotated[int, \"positive\"]`'\n};\n","module.exports = require(\"fs/promises\");","// String encode/decode helpers\n'use strict';\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nmodule.exports.string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nmodule.exports.buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nmodule.exports.utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nmodule.exports = inflate_table;\n","/**\n * Python Documentation URLs and Mappings\n *\n * @author KiidxAtlas\n * @copyright 2025 KiidxAtlas. All rights reserved.\n * @license MIT\n *\n * This file contains comprehensive documentation URLs for Python keywords,\n * built-in functions, operators, and standard library modules.\n *\n * Original compilation and curation by KiidxAtlas - 2025\n */\n\nimport { Info } from '../types';\n\n// Documentation mapping signature - KiidxAtlas\nconst DOC_MAP_AUTHOR = 'KiidxAtlas-2025';\n\nexport const MAP: Record<string, Info> = {\n    class: { title: 'class — Class Definitions', url: 'reference/compound_stmts.html', anchor: 'class-definitions' },\n    def: { title: 'def — Function Definitions', url: 'reference/compound_stmts.html', anchor: 'function-definitions' },\n    return: { title: 'return — Return Statement', url: 'reference/simple_stmts.html', anchor: 'the-return-statement' },\n    with: { title: 'with — Context Managers', url: 'reference/compound_stmts.html', anchor: 'the-with-statement' },\n    yield: { title: 'yield — Yield Expressions', url: 'reference/expressions.html', anchor: 'yield-expressions' },\n    async: { title: 'async — Asynchronous Functions', url: 'reference/compound_stmts.html', anchor: 'the-async-for-statement' },\n    await: { title: 'await — Await Expressions', url: 'reference/expressions.html', anchor: 'await-expression' },\n    // 'import' and 'from' map to the import system documentation. See IMPORT_INFO below.\n    try: { title: 'try — Exception Handling', url: 'reference/compound_stmts.html', anchor: 'the-try-statement' },\n    if: { title: 'if — Conditional Statements', url: 'reference/compound_stmts.html', anchor: 'the-if-statement' },\n    for: { title: 'for — For Loops', url: 'reference/compound_stmts.html', anchor: 'the-for-statement' },\n    while: { title: 'while — While Loops', url: 'reference/compound_stmts.html', anchor: 'the-while-statement' },\n    except: { title: 'except — Exception Handlers', url: 'reference/executionmodel.html', anchor: 'exceptions' },\n    finally: { title: 'finally — Cleanup Code', url: 'reference/compound_stmts.html', anchor: 'finally-clause' },\n    else: { title: 'else — Alternative Execution', url: 'reference/compound_stmts.html', anchor: 'else-clause' },\n    elif: { title: 'elif — Else If', url: 'reference/compound_stmts.html', anchor: 'the-if-statement' },\n    break: { title: 'break — Loop Termination', url: 'reference/simple_stmts.html', anchor: 'the-break-statement' },\n    continue: { title: 'continue — Loop Continuation', url: 'reference/simple_stmts.html', anchor: 'the-continue-statement' },\n    pass: { title: 'pass — No Operation', url: 'reference/simple_stmts.html', anchor: 'the-pass-statement' },\n    lambda: { title: 'lambda — Anonymous Functions', url: 'reference/expressions.html', anchor: 'lambda' },\n    'f-string': { title: 'f-strings — Formatted String Literals', url: 'reference/lexical_analysis.html', anchor: 'formatted-string-literals' },\n    global: { title: 'global — Global Variables', url: 'reference/simple_stmts.html', anchor: 'the-global-statement' },\n    nonlocal: { title: 'nonlocal — Nonlocal Variables', url: 'reference/simple_stmts.html', anchor: 'the-nonlocal-statement' },\n    raise: { title: 'raise — Raise Exception', url: 'reference/simple_stmts.html', anchor: 'the-raise-statement' },\n    assert: { title: 'assert — Debug Assertion', url: 'reference/simple_stmts.html', anchor: 'the-assert-statement' },\n    del: { title: 'del — Delete Statement', url: 'reference/simple_stmts.html', anchor: 'the-del-statement' },\n    match: { title: 'match — Pattern Matching (Python 3.10+)', url: 'reference/compound_stmts.html', anchor: 'the-match-statement' },\n    case: { title: 'case — Match Case (Python 3.10+)', url: 'reference/compound_stmts.html', anchor: 'the-match-statement' },\n\n    // Logical operators and keywords\n    and: { title: 'and — Logical AND', url: 'reference/expressions.html', anchor: 'boolean-operations' },\n    or: { title: 'or — Logical OR', url: 'reference/expressions.html', anchor: 'boolean-operations' },\n    not: { title: 'not — Logical NOT', url: 'reference/expressions.html', anchor: 'unary-arithmetic-and-bitwise-operations' },\n    is: { title: 'is — Identity Comparison', url: 'reference/expressions.html', anchor: 'identity-comparisons' },\n    in: { title: 'in — Membership Test', url: 'reference/expressions.html', anchor: 'membership-test-operations' },\n\n    // Comparison operators (using string keys for special characters)\n    '==': { title: '== — Equality Comparison', url: 'reference/expressions.html', anchor: 'value-comparisons' },\n    '!=': { title: '!= — Inequality Comparison', url: 'reference/expressions.html', anchor: 'value-comparisons' },\n    '<': { title: '< — Less Than', url: 'reference/expressions.html', anchor: 'value-comparisons' },\n    '>': { title: '> — Greater Than', url: 'reference/expressions.html', anchor: 'value-comparisons' },\n    '<=': { title: '<= — Less Than or Equal', url: 'reference/expressions.html', anchor: 'value-comparisons' },\n    '>=': { title: '>= — Greater Than or Equal', url: 'reference/expressions.html', anchor: 'value-comparisons' },\n\n    // Arithmetic operators\n    '+': { title: '+ — Addition', url: 'reference/expressions.html', anchor: 'binary-arithmetic-operations' },\n    '-': { title: '- — Subtraction', url: 'reference/expressions.html', anchor: 'binary-arithmetic-operations' },\n    '*': { title: '* — Multiplication', url: 'reference/expressions.html', anchor: 'binary-arithmetic-operations' },\n    '/': { title: '/ — Division', url: 'reference/expressions.html', anchor: 'binary-arithmetic-operations' },\n    '//': { title: '// — Floor Division', url: 'reference/expressions.html', anchor: 'binary-arithmetic-operations' },\n    '%': { title: '% — Modulo', url: 'reference/expressions.html', anchor: 'binary-arithmetic-operations' },\n    '**': { title: '** — Exponentiation', url: 'reference/expressions.html', anchor: 'the-power-operator' },\n\n    // Bitwise operators\n    '&': { title: '& — Bitwise AND', url: 'reference/expressions.html', anchor: 'binary-bitwise-operations' },\n    '|': { title: '| — Bitwise OR', url: 'reference/expressions.html', anchor: 'binary-bitwise-operations' },\n    '^': { title: '^ — Bitwise XOR', url: 'reference/expressions.html', anchor: 'binary-bitwise-operations' },\n    '~': { title: '~ — Bitwise NOT', url: 'reference/expressions.html', anchor: 'unary-arithmetic-and-bitwise-operations' },\n    '<<': { title: '<< — Left Shift', url: 'reference/expressions.html', anchor: 'shifting-operations' },\n    '>>': { title: '>> — Right Shift', url: 'reference/expressions.html', anchor: 'shifting-operations' },\n\n    // Assignment operators\n    '=': { title: '= — Assignment', url: 'reference/simple_stmts.html', anchor: 'assignment-statements' },\n    '+=': { title: '+= — Addition Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '-=': { title: '-= — Subtraction Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '*=': { title: '*= — Multiplication Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '/=': { title: '/= — Division Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '//=': { title: '//= — Floor Division Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '%=': { title: '%= — Modulo Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '**=': { title: '**= — Exponentiation Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '&=': { title: '&= — Bitwise AND Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '|=': { title: '|= — Bitwise OR Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '^=': { title: '^= — Bitwise XOR Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '<<=': { title: '<<= — Left Shift Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n    '>>=': { title: '>>= — Right Shift Assignment', url: 'reference/simple_stmts.html', anchor: 'augmented-assignment-statements' },\n\n    // Built-ins\n    print: { title: 'print() — Print Objects', url: 'library/functions.html', anchor: 'print' },\n    len: { title: 'len() — Return Length', url: 'library/functions.html', anchor: 'len' },\n    range: { title: 'range() — Range Object', url: 'library/functions.html', anchor: 'range' },\n    enumerate: { title: 'enumerate() — Enumerate Object', url: 'library/functions.html', anchor: 'enumerate' },\n    zip: { title: 'zip() — Zip Iterator', url: 'library/functions.html', anchor: 'zip' },\n    map: { title: 'map() — Apply Function', url: 'library/functions.html', anchor: 'map' },\n    filter: { title: 'filter() — Filter Elements', url: 'library/functions.html', anchor: 'filter' },\n    sorted: { title: 'sorted() — Return Sorted List', url: 'library/functions.html', anchor: 'sorted' },\n    reversed: { title: 'reversed() — Reverse Iterator', url: 'library/functions.html', anchor: 'reversed' },\n    sum: { title: 'sum() — Sum Iterable', url: 'library/functions.html', anchor: 'sum' },\n    max: { title: 'max() — Maximum Value', url: 'library/functions.html', anchor: 'max' },\n    min: { title: 'min() — Minimum Value', url: 'library/functions.html', anchor: 'min' },\n    abs: { title: 'abs() — Absolute Value', url: 'library/functions.html', anchor: 'abs' },\n    round: { title: 'round() — Round Number', url: 'library/functions.html', anchor: 'round' },\n    any: { title: 'any() — Any True', url: 'library/functions.html', anchor: 'any' },\n    all: { title: 'all() — All True', url: 'library/functions.html', anchor: 'all' },\n    open: { title: 'open() — Open File', url: 'library/functions.html', anchor: 'open' },\n    isinstance: { title: 'isinstance() — Type Check', url: 'library/functions.html', anchor: 'isinstance' },\n    issubclass: { title: 'issubclass() — Subclass Check', url: 'library/functions.html', anchor: 'issubclass' },\n    getattr: { title: 'getattr() — Get Attribute', url: 'library/functions.html', anchor: 'getattr' },\n    setattr: { title: 'setattr() — Set Attribute', url: 'library/functions.html', anchor: 'setattr' },\n    hasattr: { title: 'hasattr() — Has Attribute', url: 'library/functions.html', anchor: 'hasattr' },\n    delattr: { title: 'delattr() — Delete Attribute', url: 'library/functions.html', anchor: 'delattr' },\n    id: { title: 'id() — Identity', url: 'library/functions.html', anchor: 'id' },\n    pow: { title: 'pow() — Exponentiation', url: 'library/functions.html', anchor: 'pow' },\n    iter: { title: 'iter() — Iterator', url: 'library/functions.html', anchor: 'iter' },\n    next: { title: 'next() — Next Item', url: 'library/functions.html', anchor: 'next' },\n    type: { title: 'type() — Return Type', url: 'library/functions.html', anchor: 'type' },\n    vars: { title: 'vars() — Object Variables', url: 'library/functions.html', anchor: 'vars' },\n    dir: { title: 'dir() — List Attributes', url: 'library/functions.html', anchor: 'dir' },\n    help: { title: 'help() — Interactive Help', url: 'library/functions.html', anchor: 'help' },\n    input: { title: 'input() — Read Input', url: 'library/functions.html', anchor: 'input' },\n    eval: { title: 'eval() — Evaluate Expression', url: 'library/functions.html', anchor: 'eval' },\n    exec: { title: 'exec() — Execute Code', url: 'library/functions.html', anchor: 'exec' },\n    compile: { title: 'compile() — Compile Source', url: 'library/functions.html', anchor: 'compile' },\n    hash: { title: 'hash() — Hash Value', url: 'library/functions.html', anchor: 'hash' },\n    hex: { title: 'hex() — Hexadecimal', url: 'library/functions.html', anchor: 'hex' },\n    oct: { title: 'oct() — Octal', url: 'library/functions.html', anchor: 'oct' },\n    bin: { title: 'bin() — Binary', url: 'library/functions.html', anchor: 'bin' },\n    ord: { title: 'ord() — Unicode Point', url: 'library/functions.html', anchor: 'ord' },\n    chr: { title: 'chr() — Character', url: 'library/functions.html', anchor: 'chr' },\n    ascii: { title: 'ascii() — ASCII Representation', url: 'library/functions.html', anchor: 'ascii' },\n    repr: { title: 'repr() — String Representation', url: 'library/functions.html', anchor: 'repr' },\n    format: { title: 'format() — Format Value', url: 'library/functions.html', anchor: 'format' },\n    divmod: { title: 'divmod() — Division & Modulo', url: 'library/functions.html', anchor: 'divmod' },\n    callable: { title: 'callable() — Check if Callable', url: 'library/functions.html', anchor: 'callable' },\n    super: { title: 'super() — Access Parent Class', url: 'library/functions.html', anchor: 'super' },\n    staticmethod: { title: 'staticmethod() — Static Method', url: 'library/functions.html', anchor: 'staticmethod' },\n    classmethod: { title: 'classmethod() — Class Method', url: 'library/functions.html', anchor: 'classmethod' },\n    property: { title: 'property() — Property Descriptor', url: 'library/functions.html', anchor: 'property' },\n    slice: { title: 'slice() — Slice Object', url: 'library/functions.html', anchor: 'slice' },\n    object: { title: 'object() — Base Object', url: 'library/functions.html', anchor: 'object' },\n    bytes: { title: 'bytes() — Bytes Type', url: 'library/functions.html', anchor: 'bytes' },\n    bytearray: { title: 'bytearray() — Mutable Bytes', url: 'library/functions.html', anchor: 'bytearray' },\n    memoryview: { title: 'memoryview() — Memory View', url: 'library/functions.html', anchor: 'memoryview' },\n    frozenset: { title: 'frozenset() — Immutable Set', url: 'library/functions.html', anchor: 'frozenset' },\n    complex: { title: 'complex() — Complex Number', url: 'library/functions.html', anchor: 'complex' },\n    locals: { title: 'locals() — Local Variables', url: 'library/functions.html', anchor: 'locals' },\n    globals: { title: 'globals() — Global Variables', url: 'library/functions.html', anchor: 'globals' },\n    breakpoint: { title: 'breakpoint() — Debug Breakpoint', url: 'library/functions.html', anchor: 'breakpoint' },\n    // Python 3.10+ additions\n    __import__: { title: '__import__() — Import Function', url: 'library/functions.html', anchor: 'import__' },\n    aiter: { title: 'aiter() — Async Iterator (3.10+)', url: 'library/functions.html', anchor: 'aiter' },\n    anext: { title: 'anext() — Async Next (3.10+)', url: 'library/functions.html', anchor: 'anext' },\n    // Data types\n    str: { title: 'str — String Type', url: 'library/stdtypes.html', anchor: 'text-sequence-type-str' },\n    int: { title: 'int — Integer Type', url: 'library/functions.html', anchor: 'int' },\n    float: { title: 'float — Floating Point', url: 'library/functions.html', anchor: 'float' },\n    bool: { title: 'bool — Boolean Type', url: 'library/functions.html', anchor: 'bool' },\n    list: { title: 'list — List Type', url: 'library/stdtypes.html', anchor: 'list' },\n    dict: { title: 'dict — Dictionary Type', url: 'library/stdtypes.html', anchor: 'dict' },\n    set: { title: 'set — Set Type', url: 'library/stdtypes.html', anchor: 'set' },\n    tuple: { title: 'tuple — Tuple Type', url: 'library/stdtypes.html', anchor: 'tuple' },\n    // Constants\n    None: { title: 'None — Null Value', url: 'library/constants.html', anchor: 'None' },\n    True: { title: 'True — Boolean True', url: 'library/constants.html', anchor: 'True' },\n    False: { title: 'False — Boolean False', url: 'library/constants.html', anchor: 'False' },\n    // Exceptions (partial list)\n    Exception: { title: 'Exception — Base Exception', url: 'library/exceptions.html', anchor: 'Exception' },\n    BaseException: { title: 'BaseException — Root of Exceptions', url: 'library/exceptions.html', anchor: 'BaseException' },\n    ValueError: { title: 'ValueError — Invalid Value', url: 'library/exceptions.html', anchor: 'ValueError' },\n    TypeError: { title: 'TypeError — Invalid Type', url: 'library/exceptions.html', anchor: 'TypeError' },\n    KeyError: { title: 'KeyError — Missing Mapping Key', url: 'library/exceptions.html', anchor: 'KeyError' },\n    IndexError: { title: 'IndexError — Sequence Index Out of Range', url: 'library/exceptions.html', anchor: 'IndexError' },\n    StopIteration: { title: 'StopIteration — Iterator Exhausted', url: 'library/exceptions.html', anchor: 'StopIteration' },\n    ImportError: { title: 'ImportError — Import Failed', url: 'library/exceptions.html', anchor: 'ImportError' },\n    AttributeError: { title: 'AttributeError — Attribute Error', url: 'library/exceptions.html', anchor: 'AttributeError' },\n    NameError: { title: 'NameError — Name Not Found', url: 'library/exceptions.html', anchor: 'NameError' },\n    RuntimeError: { title: 'RuntimeError — Runtime Error', url: 'library/exceptions.html', anchor: 'RuntimeError' },\n    NotImplementedError: { title: 'NotImplementedError — Not Implemented', url: 'library/exceptions.html', anchor: 'NotImplementedError' },\n    FileNotFoundError: { title: 'FileNotFoundError — File Not Found', url: 'library/exceptions.html', anchor: 'FileNotFoundError' },\n    PermissionError: { title: 'PermissionError — Permission Denied', url: 'library/exceptions.html', anchor: 'PermissionError' },\n\n    // String methods\n    strip: { title: 'str.strip() — Remove Whitespace', url: 'library/stdtypes.html', anchor: 'str.strip' },\n    lstrip: { title: 'str.lstrip() — Remove Left Whitespace', url: 'library/stdtypes.html', anchor: 'str.lstrip' },\n    rstrip: { title: 'str.rstrip() — Remove Right Whitespace', url: 'library/stdtypes.html', anchor: 'str.rstrip' },\n    split: { title: 'str.split() — Split String', url: 'library/stdtypes.html', anchor: 'str.split' },\n    rsplit: { title: 'str.rsplit() — Right Split String', url: 'library/stdtypes.html', anchor: 'str.rsplit' },\n    join: { title: 'str.join() — Join Iterable', url: 'library/stdtypes.html', anchor: 'str.join' },\n    replace: { title: 'str.replace() — Replace Substring', url: 'library/stdtypes.html', anchor: 'str.replace' },\n    find: { title: 'str.find() — Find Substring', url: 'library/stdtypes.html', anchor: 'str.find' },\n    rfind: { title: 'str.rfind() — Find Substring (Right)', url: 'library/stdtypes.html', anchor: 'str.rfind' },\n    index: { title: 'str.index() — Index of Substring', url: 'library/stdtypes.html', anchor: 'str.index' },\n    rindex: { title: 'str.rindex() — Index of Substring (Right)', url: 'library/stdtypes.html', anchor: 'str.rindex' },\n    startswith: { title: 'str.startswith() — Check Prefix', url: 'library/stdtypes.html', anchor: 'str.startswith' },\n    endswith: { title: 'str.endswith() — Check Suffix', url: 'library/stdtypes.html', anchor: 'str.endswith' },\n    upper: { title: 'str.upper() — Uppercase', url: 'library/stdtypes.html', anchor: 'str.upper' },\n    lower: { title: 'str.lower() — Lowercase', url: 'library/stdtypes.html', anchor: 'str.lower' },\n    capitalize: { title: 'str.capitalize() — Capitalize First', url: 'library/stdtypes.html', anchor: 'str.capitalize' },\n    title: { title: 'str.title() — Title Case', url: 'library/stdtypes.html', anchor: 'str.title' },\n    swapcase: { title: 'str.swapcase() — Swap Case', url: 'library/stdtypes.html', anchor: 'str.swapcase' },\n    casefold: { title: 'str.casefold() — Case Folding', url: 'library/stdtypes.html', anchor: 'str.casefold' },\n    isdigit: { title: 'str.isdigit() — Check Digits', url: 'library/stdtypes.html', anchor: 'str.isdigit' },\n    isalpha: { title: 'str.isalpha() — Check Letters', url: 'library/stdtypes.html', anchor: 'str.isalpha' },\n    isalnum: { title: 'str.isalnum() — Check Alphanumeric', url: 'library/stdtypes.html', anchor: 'str.isalnum' },\n    isspace: { title: 'str.isspace() — Check Whitespace', url: 'library/stdtypes.html', anchor: 'str.isspace' },\n    islower: { title: 'str.islower() — Check Lowercase', url: 'library/stdtypes.html', anchor: 'str.islower' },\n    isupper: { title: 'str.isupper() — Check Uppercase', url: 'library/stdtypes.html', anchor: 'str.isupper' },\n    istitle: { title: 'str.istitle() — Check Title Case', url: 'library/stdtypes.html', anchor: 'str.istitle' },\n    count: { title: 'str.count() — Count Occurrences', url: 'library/stdtypes.html', anchor: 'str.count' },\n    encode: { title: 'str.encode() — Encode to Bytes', url: 'library/stdtypes.html', anchor: 'str.encode' },\n    str_format: { title: 'str.format() — Format String', url: 'library/stdtypes.html', anchor: 'str.format' },\n    format_map: { title: 'str.format_map() — Format with Mapping', url: 'library/stdtypes.html', anchor: 'str.format_map' },\n    center: { title: 'str.center() — Center String', url: 'library/stdtypes.html', anchor: 'str.center' },\n    ljust: { title: 'str.ljust() — Left Justify', url: 'library/stdtypes.html', anchor: 'str.ljust' },\n    rjust: { title: 'str.rjust() — Right Justify', url: 'library/stdtypes.html', anchor: 'str.rjust' },\n    zfill: { title: 'str.zfill() — Zero Fill', url: 'library/stdtypes.html', anchor: 'str.zfill' },\n    partition: { title: 'str.partition() — Partition String', url: 'library/stdtypes.html', anchor: 'str.partition' },\n    rpartition: { title: 'str.rpartition() — Right Partition', url: 'library/stdtypes.html', anchor: 'str.rpartition' },\n    splitlines: { title: 'str.splitlines() — Split by Lines', url: 'library/stdtypes.html', anchor: 'str.splitlines' },\n    expandtabs: { title: 'str.expandtabs() — Expand Tabs', url: 'library/stdtypes.html', anchor: 'str.expandtabs' },\n    translate: { title: 'str.translate() — Translate Characters', url: 'library/stdtypes.html', anchor: 'str.translate' },\n    maketrans: { title: 'str.maketrans() — Make Translation Table', url: 'library/stdtypes.html', anchor: 'str.maketrans' },\n    removeprefix: { title: 'str.removeprefix() — Remove Prefix (Python 3.9+)', url: 'library/stdtypes.html', anchor: 'str.removeprefix' },\n    removesuffix: { title: 'str.removesuffix() — Remove Suffix (Python 3.9+)', url: 'library/stdtypes.html', anchor: 'str.removesuffix' },\n    isascii: { title: 'str.isascii() — Check ASCII (3.7+)', url: 'library/stdtypes.html', anchor: 'str.isascii' },\n    isprintable: { title: 'str.isprintable() — Check Printable', url: 'library/stdtypes.html', anchor: 'str.isprintable' },\n    isidentifier: { title: 'str.isidentifier() — Check Identifier', url: 'library/stdtypes.html', anchor: 'str.isidentifier' },\n    isnumeric: { title: 'str.isnumeric() — Check Numeric', url: 'library/stdtypes.html', anchor: 'str.isnumeric' },\n    isdecimal: { title: 'str.isdecimal() — Check Decimal', url: 'library/stdtypes.html', anchor: 'str.isdecimal' },\n\n    // List methods\n    append: { title: 'list.append() — Add Item', url: 'library/stdtypes.html', anchor: 'mutable-sequence-types' },\n    extend: { title: 'list.extend() — Extend List', url: 'library/stdtypes.html', anchor: 'mutable-sequence-types' },\n    insert: { title: 'list.insert() — Insert Item', url: 'library/stdtypes.html', anchor: 'mutable-sequence-types' },\n    remove: { title: 'list.remove() — Remove Item', url: 'library/stdtypes.html', anchor: 'mutable-sequence-types' },\n    pop: { title: 'list.pop() — Remove & Return', url: 'library/stdtypes.html', anchor: 'mutable-sequence-types' },\n    clear: { title: 'list.clear() — Remove All Items', url: 'library/stdtypes.html', anchor: 'mutable-sequence-types' },\n    copy: { title: 'list.copy() — Shallow Copy', url: 'library/stdtypes.html', anchor: 'mutable-sequence-types' },\n    reverse: { title: 'list.reverse() — Reverse In Place', url: 'library/stdtypes.html', anchor: 'mutable-sequence-types' },\n    sort: { title: 'list.sort() — Sort In Place', url: 'library/stdtypes.html', anchor: 'mutable-sequence-types' },\n\n    // Dictionary methods\n    keys: { title: 'dict.keys() — Dictionary Keys', url: 'library/stdtypes.html', anchor: 'dict.keys' },\n    values: { title: 'dict.values() — Dictionary Values', url: 'library/stdtypes.html', anchor: 'dict.values' },\n    items: { title: 'dict.items() — Dictionary Items', url: 'library/stdtypes.html', anchor: 'dict.items' },\n    get: { title: 'dict.get() — Get Value', url: 'library/stdtypes.html', anchor: 'dict.get' },\n    setdefault: { title: 'dict.setdefault() — Get or Set Default', url: 'library/stdtypes.html', anchor: 'dict.setdefault' },\n    update: { title: 'dict.update() — Update Dictionary', url: 'library/stdtypes.html', anchor: 'dict.update' },\n    popitem: { title: 'dict.popitem() — Remove & Return Item', url: 'library/stdtypes.html', anchor: 'dict.popitem' },\n    fromkeys: { title: 'dict.fromkeys() — Create from Keys', url: 'library/stdtypes.html', anchor: 'dict.fromkeys' },\n\n    // Set methods\n    add: { title: 'set.add() — Add Element', url: 'library/stdtypes.html', anchor: 'frozenset.add' },\n    discard: { title: 'set.discard() — Remove Element', url: 'library/stdtypes.html', anchor: 'frozenset.discard' },\n    union: { title: 'set.union() — Union of Sets', url: 'library/stdtypes.html', anchor: 'frozenset.union' },\n    intersection: { title: 'set.intersection() — Intersection', url: 'library/stdtypes.html', anchor: 'frozenset.intersection' },\n    difference: { title: 'set.difference() — Difference', url: 'library/stdtypes.html', anchor: 'frozenset.difference' },\n    symmetric_difference: { title: 'set.symmetric_difference() — Symmetric Difference', url: 'library/stdtypes.html', anchor: 'frozenset.symmetric_difference' },\n    issubset: { title: 'set.issubset() — Check Subset', url: 'library/stdtypes.html', anchor: 'frozenset.issubset' },\n    issuperset: { title: 'set.issuperset() — Check Superset', url: 'library/stdtypes.html', anchor: 'frozenset.issuperset' },\n    isdisjoint: { title: 'set.isdisjoint() — Check Disjoint', url: 'library/stdtypes.html', anchor: 'frozenset.isdisjoint' },\n    intersection_update: { title: 'set.intersection_update() — Update Intersection', url: 'library/stdtypes.html', anchor: 'frozenset.intersection_update' },\n    difference_update: { title: 'set.difference_update() — Update Difference', url: 'library/stdtypes.html', anchor: 'frozenset.difference_update' },\n    symmetric_difference_update: { title: 'set.symmetric_difference_update() — Update Symmetric Difference', url: 'library/stdtypes.html', anchor: 'frozenset.symmetric_difference_update' },\n\n    // Typing module constructs\n    Generic: { title: 'typing.Generic — Generic Types', url: 'library/typing.html', anchor: 'typing.Generic' },\n    TypeVar: { title: 'typing.TypeVar — Type Variables', url: 'library/typing.html', anchor: 'typing.TypeVar' },\n    Protocol: { title: 'typing.Protocol — Structural Subtyping', url: 'library/typing.html', anchor: 'typing.Protocol' },\n    Union: { title: 'typing.Union — Union Types', url: 'library/typing.html', anchor: 'typing.Union' },\n    Optional: { title: 'typing.Optional — Optional Types', url: 'library/typing.html', anchor: 'typing.Optional' },\n    List: { title: 'typing.List — List Type Hint', url: 'library/typing.html', anchor: 'typing.List' },\n    Dict: { title: 'typing.Dict — Dictionary Type Hint', url: 'library/typing.html', anchor: 'typing.Dict' },\n    Set: { title: 'typing.Set — Set Type Hint', url: 'library/typing.html', anchor: 'typing.Set' },\n    Tuple: { title: 'typing.Tuple — Tuple Type Hint', url: 'library/typing.html', anchor: 'typing.Tuple' },\n    Callable: { title: 'typing.Callable — Callable Types', url: 'library/typing.html', anchor: 'typing.Callable' },\n    Type: { title: 'typing.Type — Class Types', url: 'library/typing.html', anchor: 'typing.Type' },\n    ClassVar: { title: 'typing.ClassVar — Class Variables', url: 'library/typing.html', anchor: 'typing.ClassVar' },\n    Final: { title: 'typing.Final — Final Variables', url: 'library/typing.html', anchor: 'typing.Final' },\n    Literal: { title: 'typing.Literal — Literal Types', url: 'library/typing.html', anchor: 'typing.Literal' },\n    Annotated: { title: 'typing.Annotated — Annotated Types', url: 'library/typing.html', anchor: 'typing.Annotated' },\n    Any: { title: 'typing.Any — Any Type', url: 'library/typing.html', anchor: 'typing.Any' },\n    NoReturn: { title: 'typing.NoReturn — No Return Type', url: 'library/typing.html', anchor: 'typing.NoReturn' },\n    overload: { title: 'typing.overload — Function Overloading', url: 'library/typing.html', anchor: 'typing.overload' }\n};\n\n// Separate export for import system documentation (avoids using 'import' as a MAP key)\nexport const IMPORT_INFO: Info = { title: 'import — Import System', url: 'reference/import.html', anchor: 'the-import-system' };\n\n// Built-in modules mapping (separate from main MAP to avoid conflicts)\n\nexport const MODULES: Record<string, Info> = {\n    os: { title: 'os — Operating System Interface', url: 'library/os.html' },\n    sys: { title: 'sys — System Parameters & Functions', url: 'library/sys.html' },\n    math: { title: 'math — Mathematical Functions', url: 'library/math.html' },\n    random: { title: 'random — Random Number Generation', url: 'library/random.html' },\n    datetime: { title: 'datetime — Date & Time Handling', url: 'library/datetime.html' },\n    time: { title: 'time — Time Access & Conversions', url: 'library/time.html' },\n    json: { title: 'json — JSON Encoder & Decoder', url: 'library/json.html' },\n    re: { title: 're — Regular Expression Operations', url: 'library/re.html' },\n    urllib: { title: 'urllib — URL Handling Modules', url: 'library/urllib.html' },\n    http: { title: 'http — HTTP Modules', url: 'library/http.html' },\n    pathlib: { title: 'pathlib — Object-oriented Filesystem Paths', url: 'library/pathlib.html' },\n    typing: { title: 'typing — Type Hints Support', url: 'library/typing.html' },\n    collections: { title: 'collections — Container Data Types', url: 'library/collections.html' },\n    itertools: { title: 'itertools — Iterator Building Functions', url: 'library/itertools.html' },\n    functools: { title: 'functools — Higher-order Functions & Utilities', url: 'library/functools.html' },\n    operator: { title: 'operator — Standard Operators as Functions', url: 'library/operator.html' },\n    copy: { title: 'copy — Shallow & Deep Copy Operations', url: 'library/copy.html' },\n    pickle: { title: 'pickle — Python Object Serialization', url: 'library/pickle.html' },\n    csv: { title: 'csv — CSV File Reading & Writing', url: 'library/csv.html' },\n    sqlite3: { title: 'sqlite3 — SQLite Database Interface', url: 'library/sqlite3.html' },\n    threading: { title: 'threading — Thread-based Parallelism', url: 'library/threading.html' },\n    multiprocessing: { title: 'multiprocessing — Process-based Parallelism', url: 'library/multiprocessing.html' },\n    concurrent: { title: 'concurrent — Concurrent Execution', url: 'library/concurrent.html' },\n    asyncio: { title: 'asyncio — Asynchronous I/O', url: 'library/asyncio.html' },\n    subprocess: { title: 'subprocess — Subprocess Management', url: 'library/subprocess.html' },\n    shutil: { title: 'shutil — High-level File Operations', url: 'library/shutil.html' },\n    glob: { title: 'glob — Unix Pathname Pattern Expansion', url: 'library/glob.html' },\n    tempfile: { title: 'tempfile — Temporary Files & Directories', url: 'library/tempfile.html' },\n    io: { title: 'io — Core Tools for Working with Streams', url: 'library/io.html' },\n    logging: { title: 'logging — Logging Facility', url: 'library/logging.html' },\n    argparse: { title: 'argparse — Command-line Argument Parser', url: 'library/argparse.html' },\n    configparser: { title: 'configparser — Configuration File Parser', url: 'library/configparser.html' },\n    xml: { title: 'xml — XML Processing Modules', url: 'library/xml.html' },\n    html: { title: 'html — HTML Support', url: 'library/html.html' },\n    email: { title: 'email — Email Handling Package', url: 'library/email.html' },\n    base64: { title: 'base64 — Base16, Base32, Base64 Data Encodings', url: 'library/base64.html' },\n    hashlib: { title: 'hashlib — Secure Hash & Message Digest', url: 'library/hashlib.html' },\n    hmac: { title: 'hmac — Keyed-Hashing for Message Authentication', url: 'library/hmac.html' },\n    secrets: { title: 'secrets — Cryptographically Strong Random Numbers', url: 'library/secrets.html' },\n    ssl: { title: 'ssl — TLS/SSL Wrapper for Socket Objects', url: 'library/ssl.html' },\n    socket: { title: 'socket — Low-level Networking Interface', url: 'library/socket.html' },\n    select: { title: 'select — Waiting for I/O Completion', url: 'library/select.html' },\n    signal: { title: 'signal — Signal Handling', url: 'library/signal.html' },\n    struct: { title: 'struct — Binary Data Structures', url: 'library/struct.html' },\n    array: { title: 'array — Efficient Arrays of Numeric Values', url: 'library/array.html' },\n    queue: { title: 'queue — Synchronized Queue Class', url: 'library/queue.html' },\n    heapq: { title: 'heapq — Heap Queue Algorithm', url: 'library/heapq.html' },\n    bisect: { title: 'bisect — Array Bisection Algorithm', url: 'library/bisect.html' },\n    weakref: { title: 'weakref — Weak References', url: 'library/weakref.html' },\n    gc: { title: 'gc — Garbage Collector Interface', url: 'library/gc.html' },\n    inspect: { title: 'inspect — Inspect Live Objects', url: 'library/inspect.html' },\n    traceback: { title: 'traceback — Print or Retrieve Stack Traceback', url: 'library/traceback.html' },\n    warnings: { title: 'warnings — Warning Control', url: 'library/warnings.html' },\n    contextlib: { title: 'contextlib — Context Manager Utilities', url: 'library/contextlib.html' },\n    abc: { title: 'abc — Abstract Base Classes', url: 'library/abc.html' },\n    numbers: { title: 'numbers — Numeric Abstract Base Classes', url: 'library/numbers.html' },\n    decimal: { title: 'decimal — Decimal Fixed Point & Floating Point', url: 'library/decimal.html' },\n    fractions: { title: 'fractions — Rational Numbers', url: 'library/fractions.html' },\n    statistics: { title: 'statistics — Mathematical Statistics Functions', url: 'library/statistics.html' },\n    enum: { title: 'enum — Enumerations', url: 'library/enum.html' },\n    dataclasses: { title: 'dataclasses — Data Classes', url: 'library/dataclasses.html' },\n    calendar: { title: 'calendar — Calendar-related Functions', url: 'library/calendar.html' },\n    locale: { title: 'locale — Internationalization Services', url: 'library/locale.html' },\n    gettext: { title: 'gettext — Multilingual Internationalization', url: 'library/gettext.html' },\n    string: { title: 'string — Common String Operations', url: 'library/string.html' },\n    textwrap: { title: 'textwrap — Text Wrapping & Filling', url: 'library/textwrap.html' },\n    unicodedata: { title: 'unicodedata — Unicode Database', url: 'library/unicodedata.html' },\n    codecs: { title: 'codecs — Codec Registry & Base Classes', url: 'library/codecs.html' },\n    keyword: { title: 'keyword — Testing for Python Keywords', url: 'library/keyword.html' },\n    token: { title: 'token — Constants for Python Parse Trees', url: 'library/token.html' },\n    tokenize: { title: 'tokenize — Tokenizer for Python Source', url: 'library/tokenize.html' },\n    ast: { title: 'ast — Abstract Syntax Trees', url: 'library/ast.html' },\n    symtable: { title: 'symtable — Symbol Table Generation', url: 'library/symtable.html' },\n    dis: { title: 'dis — Disassembler for Python Bytecode', url: 'library/dis.html' },\n    importlib: { title: 'importlib — Import System', url: 'library/importlib.html' },\n    pkgutil: { title: 'pkgutil — Package Extension Utilities', url: 'library/pkgutil.html' },\n    modulefinder: { title: 'modulefinder — Find Modules Used by Script', url: 'library/modulefinder.html' },\n    runpy: { title: 'runpy — Locating & Executing Python Modules', url: 'library/runpy.html' },\n    types: { title: 'types — Dynamic Type Creation & Names for Built-in Types', url: 'library/types.html' },\n    platform: { title: 'platform — Access Underlying Platform Data', url: 'library/platform.html' },\n    errno: { title: 'errno — Standard errno System Symbols', url: 'library/errno.html' },\n    ctypes: { title: 'ctypes — Foreign Function Library', url: 'library/ctypes.html' }\n};\n\nexport const BUILTIN_KEYWORDS = ['print', 'len', 'range', 'enumerate', 'zip', 'map', 'filter', 'sorted', 'reversed', 'sum', 'max', 'min', 'abs', 'round', 'type', 'vars', 'dir', 'help', 'input', 'eval', 'exec', 'compile', 'hash', 'hex', 'oct', 'bin', 'ord', 'chr', 'ascii', 'repr', 'format', 'divmod', 'callable', 'super', 'staticmethod', 'classmethod', 'property', 'slice', 'object', 'bytes', 'bytearray', 'memoryview', 'frozenset', 'complex', 'locals', 'globals', 'breakpoint', 'and', 'or', 'not', 'is', 'in'];\nexport const DATA_TYPES = ['str', 'int', 'float', 'bool', 'list', 'dict', 'set', 'tuple'];\nexport const CONSTANTS = ['None', 'True', 'False'];\nexport const TYPING_CONSTRUCTS = ['Generic', 'TypeVar', 'Protocol', 'Union', 'Optional', 'List', 'Dict', 'Set', 'Tuple', 'Callable', 'Type', 'ClassVar', 'Final', 'Literal', 'Annotated', 'Any', 'NoReturn', 'overload'];\n\n// Operators that need special regex handling due to special characters\nexport const OPERATORS = ['==', '!=', '<=', '>=', '<', '>', '+', '-', '*', '/', '//', '%', '**', '&', '|', '^', '~', '<<', '>>', '=', '+=', '-=', '*=', '/=', '//=', '%=', '**=', '&=', '|=', '^=', '<<=', '>>='];\n\n// Helper to map dunder names to the Data Model special method anchor\nexport function getDunderInfo(name: string): Info | undefined {\n    if (!/^__.*__$/.test(name)) return undefined;\n    // Most special methods have anchors like object.__init__, object.__getitem__, etc.\n    const anchor = `object.${name}`;\n    return { title: `${name} — Special method`, url: 'reference/datamodel.html', anchor };\n}\n","/**\n * Version Comparison and Migration Data\n * Tracks when features were added, deprecated, or changed\n */\n\nexport interface VersionInfo {\n    addedIn?: string;\n    deprecatedIn?: string;\n    removedIn?: string;\n    changedIn?: Array<{ version: string; change: string }>;\n    migrationGuide?: string;\n}\n\nexport interface ComparisonInfo {\n    similar: string[];\n    differences: string;\n    whenToUse: string;\n}\n\nexport const VERSION_HISTORY: { [key: string]: VersionInfo } = {\n    'match': {\n        addedIn: '3.10',\n        migrationGuide: 'Replace complex if-elif chains with match-case for pattern matching'\n    },\n    'case': {\n        addedIn: '3.10',\n        migrationGuide: 'Used within match statements for pattern matching'\n    },\n    'removeprefix': {\n        addedIn: '3.9',\n        migrationGuide: 'Replace: s[len(prefix):] if s.startswith(prefix) else s'\n    },\n    'removesuffix': {\n        addedIn: '3.9',\n        migrationGuide: 'Replace: s[:-len(suffix)] if s.endswith(suffix) else s'\n    },\n    'uniontype': {\n        addedIn: '3.10',\n        migrationGuide: 'Use X | Y instead of Union[X, Y] from typing'\n    },\n    'async': {\n        addedIn: '3.5',\n        changedIn: [\n            { version: '3.7', change: 'async and await became reserved keywords' }\n        ]\n    },\n    'await': {\n        addedIn: '3.5',\n        changedIn: [\n            { version: '3.7', change: 'async and await became reserved keywords' }\n        ]\n    },\n    'f-string': {\n        addedIn: '3.6',\n        migrationGuide: 'Replace: \"Hello {}\".format(name) with f\"Hello {name}\"'\n    },\n    'walrus': {\n        addedIn: '3.8',\n        migrationGuide: 'Assignment expressions: (n := len(data)) allows assignment in expressions'\n    },\n    'TypeAlias': {\n        addedIn: '3.10',\n        migrationGuide: 'Explicit type alias: Vector: TypeAlias = list[float]'\n    },\n    'zip': {\n        changedIn: [\n            { version: '3.10', change: 'Added strict parameter to ensure equal length iterables' }\n        ]\n    },\n    'dict': {\n        changedIn: [\n            { version: '3.7', change: 'Dictionaries are guaranteed to maintain insertion order' },\n            { version: '3.9', change: 'Can use dict | other_dict for merging (union operator)' }\n        ]\n    },\n    'print': {\n        changedIn: [\n            { version: '3.0', change: 'Changed from statement to function' }\n        ]\n    }\n};\n\nexport const METHOD_COMPARISONS: { [key: string]: ComparisonInfo } = {\n    'append_vs_extend': {\n        similar: ['append', 'extend', 'insert'],\n        differences: `**append()**: Adds a single element to the end\n**extend()**: Adds all elements from an iterable\n**insert()**: Adds element at specific position\n\nExample:\nlst = [1, 2]\nlst.append([3, 4])   # [1, 2, [3, 4]]\nlst.extend([3, 4])   # [1, 2, 3, 4]\nlst.insert(0, 0)     # [0, 1, 2]`,\n        whenToUse: 'Use append for single items, extend for multiple items, insert for specific positions'\n    },\n    'remove_vs_pop_vs_del': {\n        similar: ['remove', 'pop', 'del', 'clear'],\n        differences: `**remove()**: Removes first occurrence by value\n**pop()**: Removes and returns item by index\n**del**: Removes item by index (no return)\n**clear()**: Removes all items\n\nExample:\nlst = [1, 2, 3, 2]\nlst.remove(2)    # [1, 3, 2] - first 2 removed\nval = lst.pop()  # returns 2, lst = [1, 3]\ndel lst[0]       # lst = [3]\nlst.clear()      # lst = []`,\n        whenToUse: 'Use remove for value-based deletion, pop when you need the value, del for index-based, clear for all'\n    },\n    'sort_vs_sorted': {\n        similar: ['sort', 'sorted', 'reverse', 'reversed'],\n        differences: `**sort()**: Sorts list in-place, returns None\n**sorted()**: Returns new sorted list, original unchanged\n\nExample:\nlst = [3, 1, 2]\nlst.sort()           # lst = [1, 2, 3]\nnew_lst = sorted(lst) # lst unchanged, new_lst = [1, 2, 3]`,\n        whenToUse: 'Use sort() to modify existing list, sorted() to create new sorted list'\n    },\n    'get_vs_setdefault': {\n        similar: ['get', 'setdefault', '__getitem__'],\n        differences: `**get()**: Returns value or default, doesn't modify dict\n**setdefault()**: Returns value or sets and returns default\n**dict[key]**: Raises KeyError if missing\n\nExample:\nd = {'a': 1}\nd.get('b', 0)        # returns 0, d unchanged\nd.setdefault('b', 0) # returns 0, d = {'a': 1, 'b': 0}\nd['c']               # raises KeyError`,\n        whenToUse: 'Use get() for read-only, setdefault() when you want to initialize missing keys'\n    },\n    'join_vs_concatenation': {\n        similar: ['join', '+', 'f-string'],\n        differences: `**join()**: Most efficient for multiple strings\n**+ operator**: Simple but slow for many strings\n**f-string**: Best for formatting with variables\n\nExample:\n# join - O(n)\n''.join(['a', 'b', 'c'])  # 'abc'\n\n# + operator - O(n²) for many strings\ns = 'a' + 'b' + 'c'  # 'abc'\n\n# f-string - best for formatting\nf'{name}: {value}'`,\n        whenToUse: 'Use join() for lists of strings, f-strings for formatting, avoid + in loops'\n    }\n};\n\nexport function getVersionInfo(symbol: string): VersionInfo | null {\n    return VERSION_HISTORY[symbol.toLowerCase()] || null;\n}\n\nexport function getMethodComparison(method: string): ComparisonInfo | null {\n    // Try direct lookup\n    if (METHOD_COMPARISONS[method]) {\n        return METHOD_COMPARISONS[method];\n    }\n\n    // Try to find comparison that includes this method\n    for (const [_key, comparison] of Object.entries(METHOD_COMPARISONS)) {\n        if (comparison.similar.includes(method)) {\n            return comparison;\n        }\n    }\n\n    return null;\n}\n\nexport function formatVersionInfo(info: VersionInfo): string {\n    const parts: string[] = [];\n\n    if (info.addedIn) {\n        parts.push(`✨ **New in Python ${info.addedIn}**`);\n    }\n\n    if (info.deprecatedIn) {\n        parts.push(`⚠️  **Deprecated in Python ${info.deprecatedIn}**`);\n    }\n\n    if (info.removedIn) {\n        parts.push(`❌ **Removed in Python ${info.removedIn}**`);\n    }\n\n    if (info.changedIn && info.changedIn.length > 0) {\n        parts.push(`📝 **Changes:**`);\n        for (const change of info.changedIn) {\n            parts.push(`  - Python ${change.version}: ${change.change}`);\n        }\n    }\n\n    if (info.migrationGuide) {\n        parts.push(`\\n💡 **Migration:** ${info.migrationGuide}`);\n    }\n\n    return parts.join('\\n');\n}\n\nexport function formatComparison(comparison: ComparisonInfo): string {\n    return `### 🔄 Similar Methods: ${comparison.similar.join(', ')}\n\n${comparison.differences}\n\n**When to use:** ${comparison.whenToUse}`;\n}\n","import * as vscode from 'vscode';\nimport { Logger } from '../services/logger';\nimport { SymbolInfo } from './symbolResolver';\n\n/**\n * Maps methods to their common container types with documentation anchors\n */\nexport const METHOD_TO_TYPE_MAP: Record<string, { types: string[]; anchor: string; title: string }> = {\n    // String methods\n    'strip': { types: ['str'], anchor: 'str.strip', title: 'str.strip() — Remove Whitespace' },\n    'split': { types: ['str'], anchor: 'str.split', title: 'str.split() — Split String' },\n    'join': { types: ['str'], anchor: 'str.join', title: 'str.join() — Join Iterable' },\n    'replace': { types: ['str'], anchor: 'str.replace', title: 'str.replace() — Replace Substring' },\n    'find': { types: ['str'], anchor: 'str.find', title: 'str.find() — Find Substring' },\n    'startswith': { types: ['str'], anchor: 'str.startswith', title: 'str.startswith() — Check Prefix' },\n    'endswith': { types: ['str'], anchor: 'str.endswith', title: 'str.endswith() — Check Suffix' },\n    'upper': { types: ['str'], anchor: 'str.upper', title: 'str.upper() — Uppercase' },\n    'lower': { types: ['str'], anchor: 'str.lower', title: 'str.lower() — Lowercase' },\n    'capitalize': { types: ['str'], anchor: 'str.capitalize', title: 'str.capitalize() — First Letter' },\n    'title': { types: ['str'], anchor: 'str.title', title: 'str.title() — Title Case' },\n    'isdigit': { types: ['str'], anchor: 'str.isdigit', title: 'str.isdigit() — Check Digits' },\n    'isalpha': { types: ['str'], anchor: 'str.isalpha', title: 'str.isalpha() — Check Letters' },\n    'isalnum': { types: ['str'], anchor: 'str.isalnum', title: 'str.isalnum() — Check Alphanumeric' },\n    'count': { types: ['str', 'list'], anchor: 'str.count', title: 'count() — Count Occurrences' },\n    'format': { types: ['str'], anchor: 'str.format', title: 'str.format() — Format String' },\n\n    // List methods\n    'append': { types: ['list'], anchor: 'mutable-sequence-types', title: 'list.append() — Add Item' },\n    'extend': { types: ['list'], anchor: 'mutable-sequence-types', title: 'list.extend() — Extend List' },\n    'insert': { types: ['list'], anchor: 'mutable-sequence-types', title: 'list.insert() — Insert Item' },\n    'remove': { types: ['list'], anchor: 'mutable-sequence-types', title: 'list.remove() — Remove Item' },\n    'pop': { types: ['list', 'dict'], anchor: 'mutable-sequence-types', title: 'pop() — Remove & Return' },\n    'clear': { types: ['list', 'dict', 'set'], anchor: 'mutable-sequence-types', title: 'clear() — Remove All Items' },\n    'copy': { types: ['list', 'dict', 'set'], anchor: 'mutable-sequence-types', title: 'copy() — Shallow Copy' },\n    'reverse': { types: ['list'], anchor: 'mutable-sequence-types', title: 'list.reverse() — Reverse In Place' },\n    'sort': { types: ['list'], anchor: 'mutable-sequence-types', title: 'list.sort() — Sort In Place' },\n    'index': { types: ['list', 'tuple', 'str'], anchor: 'common-sequence-operations', title: 'index() — Find Index' },\n\n    // Dictionary methods\n    'keys': { types: ['dict'], anchor: 'dict.keys', title: 'dict.keys() — Dictionary Keys' },\n    'values': { types: ['dict'], anchor: 'dict.values', title: 'dict.values() — Dictionary Values' },\n    'items': { types: ['dict'], anchor: 'dict.items', title: 'dict.items() — Dictionary Items' },\n    'get': { types: ['dict'], anchor: 'dict.get', title: 'dict.get() — Get Value' },\n    'setdefault': { types: ['dict'], anchor: 'dict.setdefault', title: 'dict.setdefault() — Get or Set Default' },\n    'update': { types: ['dict'], anchor: 'dict.update', title: 'dict.update() — Update Dictionary' },\n    'popitem': { types: ['dict'], anchor: 'dict.popitem', title: 'dict.popitem() — Remove & Return Item' },\n    'fromkeys': { types: ['dict'], anchor: 'dict.fromkeys', title: 'dict.fromkeys() — Create from Keys' },\n\n    // Set methods\n    'add': { types: ['set'], anchor: 'set.add', title: 'set.add() — Add Element' },\n    'discard': { types: ['set'], anchor: 'set.discard', title: 'set.discard() — Remove If Present' },\n    'union': { types: ['set'], anchor: 'set.union', title: 'set.union() — Union of Sets' },\n    'intersection': { types: ['set'], anchor: 'set.intersection', title: 'set.intersection() — Intersection of Sets' },\n    'difference': { types: ['set'], anchor: 'set.difference', title: 'set.difference() — Set Difference' },\n    'symmetric_difference': { types: ['set'], anchor: 'set.symmetric_difference', title: 'set.symmetric_difference() — Symmetric Difference' },\n    'issubset': { types: ['set'], anchor: 'set.issubset', title: 'set.issubset() — Test Subset' },\n    'issuperset': { types: ['set'], anchor: 'set.issuperset', title: 'set.issuperset() — Test Superset' },\n\n    // File methods\n    'read': { types: ['file'], anchor: 'io-methods', title: 'read() — Read Contents' },\n    'readline': { types: ['file'], anchor: 'io-methods', title: 'readline() — Read Single Line' },\n    'readlines': { types: ['file'], anchor: 'io-methods', title: 'readlines() — Read All Lines' },\n    'write': { types: ['file'], anchor: 'io-methods', title: 'write() — Write String' },\n    'writelines': { types: ['file'], anchor: 'io-methods', title: 'writelines() — Write Lines' },\n    'close': { types: ['file'], anchor: 'io-methods', title: 'close() — Close File' },\n};\n\nexport class MethodResolver {\n    /**\n     * Determines if a method name is a known method of a built-in type\n     */\n    public isKnownMethod(methodName: string): boolean {\n        return METHOD_TO_TYPE_MAP.hasOwnProperty(methodName);\n    }\n\n    /**\n     * Resolves method information based on context with scoring for ambiguous cases\n     */\n    public resolveMethodInfo(document: vscode.TextDocument, position: vscode.Position,\n        methodName: string, receiverType?: string): SymbolInfo | undefined {\n\n        if (!this.isKnownMethod(methodName)) {\n            return undefined;\n        }\n\n        const methodInfo = METHOD_TO_TYPE_MAP[methodName];\n\n        // If we have explicit receiver type information, use it\n        if (receiverType) {\n            // Check if the receiver type is in the list of possible types\n            if (methodInfo.types.includes(receiverType)) {\n                return {\n                    symbol: `${receiverType}.${methodName}`,\n                    type: 'method',\n                    context: receiverType,\n                    documentation: methodInfo.title\n                };\n            }\n            // If receiver type doesn't match, but we have it, still use it\n            // This handles cases where context detector might infer a more specific type\n            return {\n                symbol: `${receiverType}.${methodName}`,\n                type: 'method',\n                context: receiverType,\n                documentation: methodInfo.title\n            };\n        }\n\n        // No explicit receiver type - need to score candidates\n        if (methodInfo.types.length === 1) {\n            // Only one possible type, no ambiguity\n            const type = methodInfo.types[0];\n            return {\n                symbol: `${type}.${methodName}`,\n                type: 'method',\n                context: type,\n                documentation: methodInfo.title\n            };\n        }\n\n        // Multiple possible types - score them based on context\n        const bestType = this.scoreAndSelectBestType(document, position, methodName, methodInfo.types);\n\n        return {\n            symbol: `${bestType}.${methodName}`,\n            type: 'method',\n            context: bestType,\n            documentation: methodInfo.title\n        };\n    }\n\n    /**\n     * Score and select the best type for an ambiguous method\n     * Uses heuristics based on surrounding code context\n     */\n    private scoreAndSelectBestType(\n        document: vscode.TextDocument,\n        position: vscode.Position,\n        methodName: string,\n        candidateTypes: string[]\n    ): string {\n        const scores = new Map<string, number>();\n\n        // Initialize scores\n        for (const type of candidateTypes) {\n            scores.set(type, 0);\n        }\n\n        // Look at current line and nearby lines for type hints\n        const lineText = document.lineAt(position.line).text;\n        const maxContextLines = 5;\n        const startLine = Math.max(0, position.line - maxContextLines);\n        const endLine = Math.min(document.lineCount - 1, position.line + maxContextLines);\n\n        // Collect context from surrounding lines\n        const contextLines: string[] = [];\n        for (let i = startLine; i <= endLine; i++) {\n            contextLines.push(document.lineAt(i).text);\n        }\n        const context = contextLines.join('\\n');\n\n        // Scoring heuristics\n        for (const type of candidateTypes) {\n            let score = 0;\n\n            // Check for type annotations mentioning this type\n            const annotationPattern = new RegExp(`:\\\\s*${type}\\\\b`, 'i');\n            if (annotationPattern.test(context)) {\n                score += 10;\n            }\n\n            // Check for constructor calls\n            const constructorPattern = new RegExp(`=\\\\s*${type}\\\\s*\\\\(`, 'i');\n            if (constructorPattern.test(context)) {\n                score += 8;\n            }\n\n            // Check for type-specific literals in current line\n            if (type === 'list' && /\\[.*\\]/.test(lineText)) {\n                score += 5;\n            }\n            if (type === 'dict' && /\\{.*:.*\\}/.test(lineText)) {\n                score += 5;\n            }\n            if (type === 'set' && /\\{.*\\}/.test(lineText) && !/\\{.*:.*\\}/.test(lineText)) {\n                score += 5;\n            }\n            if (type === 'str' && /['\"].*['\"]/.test(lineText)) {\n                score += 3;\n            }\n\n            // Check for common patterns indicating specific types\n            if (type === 'list' && /\\.(append|extend|insert)\\s*\\(/.test(context)) {\n                score += 7;\n            }\n            if (type === 'dict' && /\\.(keys|values|items|get)\\s*\\(/.test(context)) {\n                score += 7;\n            }\n            if (type === 'set' && /\\.(add|discard|union|intersection)\\s*\\(/.test(context)) {\n                score += 7;\n            }\n            if (type === 'str' && /\\.(strip|split|replace|format)\\s*\\(/.test(context)) {\n                score += 7;\n            }\n\n            // Default priorities for ambiguous methods\n            // 'pop' is more common on list than dict\n            if (methodName === 'pop') {\n                if (type === 'list') score += 2;\n                if (type === 'dict') score += 1;\n            }\n            // 'clear' is equally common, slight preference for list in general code\n            if (methodName === 'clear') {\n                if (type === 'list') score += 2;\n                if (type === 'dict') score += 1;\n                if (type === 'set') score += 1;\n            }\n            // 'copy' slight preference for list\n            if (methodName === 'copy') {\n                if (type === 'list') score += 2;\n                if (type === 'dict') score += 1;\n                if (type === 'set') score += 1;\n            }\n            // 'count' more common on strings than lists\n            if (methodName === 'count') {\n                if (type === 'str') score += 3;\n                if (type === 'list') score += 1;\n            }\n            // 'index' most common on lists\n            if (methodName === 'index') {\n                if (type === 'list') score += 3;\n                if (type === 'tuple') score += 2;\n                if (type === 'str') score += 1;\n            }\n\n            scores.set(type, score);\n        }\n\n        // Find type with highest score\n        let bestType = candidateTypes[0];\n        let bestScore = scores.get(bestType) || 0;\n\n        for (const [type, score] of scores.entries()) {\n            if (score > bestScore) {\n                bestScore = score;\n                bestType = type;\n            }\n        }\n\n        Logger.getInstance().debug(`Scored types for \"${methodName}\": ${Array.from(scores.entries()).map(([k, v]) => `${k}=${v}`).join(', ')}`);\n        Logger.getInstance().debug(`Selected best type: ${bestType} (score: ${bestScore})`);\n\n        return bestType;\n    }\n}\n","import * as vscode from 'vscode';\nimport { Logger } from './logger';\n\n/**\n * Centralized error notification service\n * Provides consistent error/warning/info messages to users\n * with optional action buttons and rate limiting\n */\nexport class ErrorNotifier {\n    private static readonly MESSAGE_PREFIX = 'Python Hover';\n\n    // Rate limiting to prevent notification spam\n    private static lastNotificationTime = new Map<string, number>();\n    private static readonly MIN_NOTIFICATION_INTERVAL = 5000; // 5 seconds\n\n    /**\n     * Get logger instance lazily to avoid initialization issues\n     */\n    private static getLogger(): Logger {\n        return Logger.getInstance();\n    }\n\n    /**\n     * Show an error message with optional action buttons\n     * @param message The error message to display\n     * @param actions Optional action button labels\n     * @returns The selected action label, or undefined if dismissed\n     */\n    public static async showError(\n        message: string,\n        ...actions: string[]\n    ): Promise<string | undefined> {\n        // Ignore cancellation errors - these are user-initiated\n        if (message.includes('Canceled') || message === 'Canceled') {\n            this.getLogger().debug(`Ignoring cancellation error: ${message}`);\n            return undefined;\n        }\n\n        const fullMessage = this.formatMessage(message);\n        this.getLogger().error(message);\n\n        if (this.shouldThrottle(fullMessage)) {\n            this.getLogger().debug(`Throttling error notification: ${message}`);\n            return undefined;\n        }\n\n        this.recordNotification(fullMessage);\n        return await vscode.window.showErrorMessage(fullMessage, ...actions);\n    }\n\n    /**\n     * Show a warning message with optional action buttons\n     * @param message The warning message to display\n     * @param actions Optional action button labels\n     * @returns The selected action label, or undefined if dismissed\n     */\n    public static async showWarning(\n        message: string,\n        ...actions: string[]\n    ): Promise<string | undefined> {\n        // Ignore cancellation errors - these are user-initiated\n        if (message.includes('Canceled') || message === 'Canceled') {\n            this.getLogger().debug(`Ignoring cancellation warning: ${message}`);\n            return undefined;\n        }\n\n        const fullMessage = this.formatMessage(message);\n        this.getLogger().warn(message);\n\n        if (this.shouldThrottle(fullMessage)) {\n            this.getLogger().debug(`Throttling warning notification: ${message}`);\n            return undefined;\n        }\n\n        this.recordNotification(fullMessage);\n        return await vscode.window.showWarningMessage(fullMessage, ...actions);\n    }\n\n    /**\n     * Show an information message with optional action buttons\n     * @param message The information message to display\n     * @param actions Optional action button labels\n     * @returns The selected action label, or undefined if dismissed\n     */\n    public static async showInfo(\n        message: string,\n        ...actions: string[]\n    ): Promise<string | undefined> {\n        const fullMessage = this.formatMessage(message);\n        this.getLogger().info(message);\n        return await vscode.window.showInformationMessage(fullMessage, ...actions);\n    }\n\n    /**\n     * Show error with \"Open Settings\" action\n     * Commonly used for configuration errors\n     */\n    public static async showErrorWithSettings(\n        message: string,\n        settingKey?: string\n    ): Promise<void> {\n        const action = await this.showError(message, 'Open Settings');\n\n        if (action === 'Open Settings') {\n            const settingToOpen = settingKey || 'pythonHover';\n            vscode.commands.executeCommand('workbench.action.openSettings', settingToOpen);\n        }\n    }\n\n    /**\n     * Show warning with \"Retry\" and \"Open Settings\" actions\n     * Commonly used for recoverable errors\n     */\n    public static async showWarningWithRetry(\n        message: string,\n        onRetry?: () => void,\n        settingKey?: string\n    ): Promise<void> {\n        const action = await this.showWarning(message, 'Retry', 'Open Settings');\n\n        if (action === 'Retry' && onRetry) {\n            onRetry();\n        } else if (action === 'Open Settings') {\n            const settingToOpen = settingKey || 'pythonHover';\n            vscode.commands.executeCommand('workbench.action.openSettings', settingToOpen);\n        }\n    }\n\n    /**\n     * Show error for network/connectivity issues\n     */\n    public static async showNetworkError(\n        operation: string,\n        error?: Error\n    ): Promise<void> {\n        const message = `Failed to ${operation}. Please check your internet connection.`;\n\n        if (error) {\n            this.getLogger().error(`Network error during ${operation}`, error);\n        }\n\n        await this.showError(message);\n    }\n\n    /**\n     * Show error for invalid configuration\n     */\n    public static async showConfigError(\n        configName: string,\n        reason: string,\n        settingKey?: string\n    ): Promise<void> {\n        const message = `Invalid ${configName} configuration: ${reason}`;\n        await this.showErrorWithSettings(message, settingKey);\n    }\n\n    /**\n     * Format message with consistent prefix\n     */\n    private static formatMessage(message: string): string {\n        // Don't add prefix if it already has one\n        if (message.startsWith(this.MESSAGE_PREFIX)) {\n            return message;\n        }\n        return `${this.MESSAGE_PREFIX}: ${message}`;\n    }\n\n    /**\n     * Check if notification should be throttled to prevent spam\n     */\n    private static shouldThrottle(message: string): boolean {\n        const lastTime = this.lastNotificationTime.get(message);\n        if (!lastTime) {\n            return false;\n        }\n\n        const timeSinceLastNotification = Date.now() - lastTime;\n        return timeSinceLastNotification < this.MIN_NOTIFICATION_INTERVAL;\n    }\n\n    /**\n     * Record notification time for rate limiting\n     */\n    private static recordNotification(message: string): void {\n        this.lastNotificationTime.set(message, Date.now());\n    }\n\n    /**\n     * Clear rate limiting history (useful for testing)\n     */\n    public static clearThrottleHistory(): void {\n        this.lastNotificationTime.clear();\n    }\n\n    /**\n     * Configure minimum notification interval (useful for testing)\n     */\n    public static setMinNotificationInterval(_intervalMs: number): void {\n        // This would be used for testing, but we keep it simple for now\n        // Could be expanded to make the interval configurable\n    }\n}\n","import * as vscode from 'vscode';\n\nexport interface CustomLibraryConfig {\n    name: string;\n    inventoryUrl: string;\n    baseUrl: string;\n}\n\nexport interface PythonHoverConfig {\n    docsVersion: string;\n    maxSnippetLines: number;\n    cacheTTL: {\n        inventoryDays: number;\n        snippetHours: number;\n    };\n    enableKeywordDocs: boolean;\n    telemetry: boolean;\n    customLibraries: CustomLibraryConfig[];\n    experimental: {\n        autoDetectLibraries: boolean;\n    };\n    ui: {\n        showParameterTables: boolean;\n        showSignatures: boolean;\n        showDeprecationWarnings: boolean;\n        showReturnTypes: boolean;\n        showQuickActions: boolean;\n        showSeeAlso: boolean;\n        showPerformanceHints: boolean;\n        showKeyboardHints: boolean;\n        maxContentLength: number;\n    };\n}\n\nexport class ConfigurationManager {\n    private config: PythonHoverConfig;\n\n    constructor() {\n        this.config = this.loadConfig();\n    }\n\n    private loadConfig(): PythonHoverConfig {\n        const vscodeConfig = vscode.workspace.getConfiguration('pythonHover');\n\n        return {\n            docsVersion: vscodeConfig.get('docsVersion', 'auto'),\n            maxSnippetLines: vscodeConfig.get('maxSnippetLines', 20),\n            cacheTTL: {\n                inventoryDays: vscodeConfig.get('cacheTTL.inventoryDays', 7),\n                snippetHours: vscodeConfig.get('cacheTTL.snippetHours', 48)\n            },\n            enableKeywordDocs: vscodeConfig.get('enableKeywordDocs', true),\n            telemetry: vscodeConfig.get('telemetry', false),\n            customLibraries: vscodeConfig.get('customLibraries', []),\n            experimental: {\n                autoDetectLibraries: vscodeConfig.get('experimental.autoDetectLibraries', false)\n            },\n            ui: {\n                showParameterTables: vscodeConfig.get('ui.showParameterTables', true),\n                showSignatures: vscodeConfig.get('ui.showSignatures', true),\n                showDeprecationWarnings: vscodeConfig.get('ui.showDeprecationWarnings', true),\n                showReturnTypes: vscodeConfig.get('ui.showReturnTypes', true),\n                showQuickActions: vscodeConfig.get('ui.showQuickActions', true),\n                showSeeAlso: vscodeConfig.get('ui.showSeeAlso', true),\n                showPerformanceHints: vscodeConfig.get('ui.showPerformanceHints', false),\n                showKeyboardHints: vscodeConfig.get('ui.showKeyboardHints', true),\n                maxContentLength: vscodeConfig.get('ui.maxContentLength', 800)\n            }\n        };\n    }\n\n    public getConfig(): PythonHoverConfig {\n        return this.config;\n    }\n\n    public refresh(): void {\n        this.config = this.loadConfig();\n    }\n\n    public get docsVersion(): string {\n        return this.config.docsVersion;\n    }\n\n    public get maxSnippetLines(): number {\n        return this.config.maxSnippetLines;\n    }\n\n    public get inventoryCacheDays(): number {\n        return this.config.cacheTTL.inventoryDays;\n    }\n\n    public get snippetCacheHours(): number {\n        return this.config.cacheTTL.snippetHours;\n    }\n\n    public get enableKeywordDocs(): boolean {\n        return this.config.enableKeywordDocs;\n    }\n\n    public get telemetryEnabled(): boolean {\n        return this.config.telemetry;\n    }\n\n    public get customLibraries(): CustomLibraryConfig[] {\n        return this.config.customLibraries;\n    }\n\n    public get autoDetectLibrariesEnabled(): boolean {\n        return this.config.experimental.autoDetectLibraries;\n    }\n\n    /**\n     * Get a configuration value by key with optional default\n     */\n    public getValue<T>(key: string, defaultValue: T): T {\n        const vscodeConfig = vscode.workspace.getConfiguration('pythonHover');\n        return vscodeConfig.get(key, defaultValue);\n    }\n}\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nmodule.exports = adler32;\n","'use strict';\n\n\nconst zlib_deflate = require('./zlib/deflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = zlib_deflate.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = zlib_deflate.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    this.result = utils.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  const deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nmodule.exports.Deflate = Deflate;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateRaw = deflateRaw;\nmodule.exports.gzip = gzip;\nmodule.exports.constants = require('./zlib/constants');\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH    = 3;\nconst MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES       = 30;\n/* number of distance codes */\n\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nconst MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nmodule.exports._tr_init  = _tr_init;\nmodule.exports._tr_stored_block = _tr_stored_block;\nmodule.exports._tr_flush_block  = _tr_flush_block;\nmodule.exports._tr_tally = _tr_tally;\nmodule.exports._tr_align = _tr_align;\n","// CommonJS import for node-fetch\nimport * as nodeFetch from 'node-fetch';\nconst fetch = nodeFetch.default || nodeFetch;\n\nimport * as pako from 'pako';\nimport * as vscode from 'vscode';\nimport { URLValidator } from '../utils/urlValidator';\nimport { CacheManager } from './cache';\nimport { ConfigurationManager } from './config';\nimport { ErrorNotifier } from './errorNotifier';\nimport { Logger } from './logger';\nimport { PackageDetector } from './packageDetector';\n\nexport interface InventoryEntry {\n    name: string;\n    domain: string;\n    role: string;\n    priority: number;\n    uri: string;\n    anchor: string;\n}\n\nexport interface LibraryInventoryConfig {\n    name: string;\n    inventoryUrl: string;\n    baseUrl: string; // Base URL for resolving relative links\n    version?: string; // Optional: specific version\n}\n\nexport interface VersionedInventoryConfig extends LibraryInventoryConfig {\n    version: string;\n    isExactMatch: boolean; // true if exact version match, false if fallback\n}\n\nexport class InventoryManager {\n    private static readonly DOCS_BASE_URL = 'https://docs.python.org';\n\n    // Third-party library inventory configurations\n    private static readonly THIRD_PARTY_LIBRARIES: LibraryInventoryConfig[] = [\n        {\n            name: 'numpy',\n            inventoryUrl: 'https://numpy.org/doc/stable/objects.inv',\n            baseUrl: 'https://numpy.org/doc/stable/'\n        },\n        {\n            name: 'pandas',\n            inventoryUrl: 'https://pandas.pydata.org/docs/objects.inv',\n            baseUrl: 'https://pandas.pydata.org/docs/'\n        },\n        {\n            name: 'requests',\n            inventoryUrl: 'https://docs.python-requests.org/en/latest/objects.inv',\n            baseUrl: 'https://docs.python-requests.org/en/latest/'\n        },\n        {\n            name: 'scipy',\n            inventoryUrl: 'https://docs.scipy.org/doc/scipy/objects.inv',\n            baseUrl: 'https://docs.scipy.org/doc/scipy/'\n        },\n        {\n            name: 'matplotlib',\n            inventoryUrl: 'https://matplotlib.org/stable/objects.inv',\n            baseUrl: 'https://matplotlib.org/stable/'\n        },\n        {\n            name: 'flask',\n            inventoryUrl: 'https://flask.palletsprojects.com/en/stable/objects.inv',\n            baseUrl: 'https://flask.palletsprojects.com/en/stable/'\n        },\n        {\n            name: 'django',\n            inventoryUrl: 'https://docs.djangoproject.com/en/stable/_objects/',\n            baseUrl: 'https://docs.djangoproject.com/en/stable/'\n        },\n        {\n            name: 'sklearn',\n            inventoryUrl: 'https://scikit-learn.org/stable/objects.inv',\n            baseUrl: 'https://scikit-learn.org/stable/'\n        },\n        {\n            name: 'pytest',\n            inventoryUrl: 'https://docs.pytest.org/en/stable/objects.inv',\n            baseUrl: 'https://docs.pytest.org/en/stable/'\n        },\n        {\n            name: 'sphinx',\n            inventoryUrl: 'https://www.sphinx-doc.org/en/master/objects.inv',\n            baseUrl: 'https://www.sphinx-doc.org/en/master/'\n        },\n        {\n            name: 'fastapi',\n            inventoryUrl: 'https://fastapi.tiangolo.com/objects.inv',\n            baseUrl: 'https://fastapi.tiangolo.com/'\n        },\n        {\n            name: 'pydantic',\n            inventoryUrl: 'https://docs.pydantic.dev/latest/objects.inv',\n            baseUrl: 'https://docs.pydantic.dev/latest/'\n        },\n        {\n            name: 'sqlalchemy',\n            inventoryUrl: 'https://docs.sqlalchemy.org/en/20/objects.inv',\n            baseUrl: 'https://docs.sqlalchemy.org/en/20/'\n        },\n        {\n            name: 'beautifulsoup4',\n            inventoryUrl: 'https://www.crummy.com/software/BeautifulSoup/bs4/doc/objects.inv',\n            baseUrl: 'https://www.crummy.com/software/BeautifulSoup/bs4/doc/'\n        },\n        {\n            name: 'bs4',\n            inventoryUrl: 'https://www.crummy.com/software/BeautifulSoup/bs4/doc/objects.inv',\n            baseUrl: 'https://www.crummy.com/software/BeautifulSoup/bs4/doc/'\n        },\n        {\n            name: 'selenium',\n            inventoryUrl: 'https://www.selenium.dev/selenium/docs/api/py/objects.inv',\n            baseUrl: 'https://www.selenium.dev/selenium/docs/api/py/'\n        },\n        {\n            name: 'pillow',\n            inventoryUrl: 'https://pillow.readthedocs.io/en/stable/objects.inv',\n            baseUrl: 'https://pillow.readthedocs.io/en/stable/'\n        },\n        {\n            name: 'pil',\n            inventoryUrl: 'https://pillow.readthedocs.io/en/stable/objects.inv',\n            baseUrl: 'https://pillow.readthedocs.io/en/stable/'\n        },\n        // Machine Learning & AI\n        {\n            name: 'torch',\n            inventoryUrl: 'https://pytorch.org/docs/stable/objects.inv',\n            baseUrl: 'https://pytorch.org/docs/stable/'\n        },\n        {\n            name: 'pytorch',\n            inventoryUrl: 'https://pytorch.org/docs/stable/objects.inv',\n            baseUrl: 'https://pytorch.org/docs/stable/'\n        },\n        // HTTP & Async\n        {\n            name: 'aiohttp',\n            inventoryUrl: 'https://docs.aiohttp.org/en/stable/objects.inv',\n            baseUrl: 'https://docs.aiohttp.org/en/stable/'\n        },\n        // CLI\n        {\n            name: 'click',\n            inventoryUrl: 'https://click.palletsprojects.com/en/stable/objects.inv',\n            baseUrl: 'https://click.palletsprojects.com/en/stable/'\n        },\n    ];\n\n    constructor(\n        private cacheManager: CacheManager,\n        private logger: Logger,\n        private configManager?: ConfigurationManager,\n        private packageDetector?: PackageDetector\n    ) { }\n\n    /**\n     * Get all library configurations (hardcoded + custom)\n     */\n    private getAllLibraryConfigs(): LibraryInventoryConfig[] {\n        const customLibs: LibraryInventoryConfig[] = this.configManager\n            ? this.configManager.customLibraries\n            : [];\n\n        // Merge custom libraries with hardcoded ones\n        // Custom libraries take precedence if there's a name collision\n        const allLibs = [...InventoryManager.THIRD_PARTY_LIBRARIES];\n        const validationErrors: string[] = [];\n\n        for (const customLib of customLibs) {\n            // Comprehensive validation of custom library config\n            const errors = this.validateCustomLibrary(customLib);\n\n            if (errors.length > 0) {\n                const errorMsg = `Invalid custom library config for \"${customLib.name || 'unknown'}\": ${errors.join(', ')}`;\n                this.logger.error(errorMsg);\n                validationErrors.push(errorMsg);\n                // Show user-friendly error notification\n                if (typeof vscode !== 'undefined' && vscode.window) {\n                    ErrorNotifier.showConfigError(\n                        `custom library \"${customLib.name || 'unknown'}\"`,\n                        errors[0],\n                        'pythonHover.customLibraries'\n                    );\n                }\n                continue;\n            }\n\n            // Check if library with same name exists\n            const existingIndex = allLibs.findIndex(lib => lib.name === customLib.name);\n            if (existingIndex !== -1) {\n                // Replace existing with custom\n                this.logger.info(`Overriding built-in config for library: ${customLib.name}`);\n                allLibs[existingIndex] = customLib;\n            } else {\n                // Add new custom library\n                this.logger.info(`Adding custom library: ${customLib.name}`);\n                allLibs.push(customLib);\n            }\n        }\n\n        // Log summary if there were validation errors\n        if (validationErrors.length > 0) {\n            this.logger.warn(`${validationErrors.length} custom library config(s) had validation errors and were skipped`);\n        }\n\n        return allLibs;\n    }\n\n    /**\n     * Validate a custom library configuration\n     * Returns array of error messages (empty if valid)\n     */\n    private validateCustomLibrary(lib: any): string[] {\n        const errors: string[] = [];\n\n        // Validate name\n        const nameValidation = URLValidator.validateName(lib.name);\n        if (!nameValidation.isValid) {\n            errors.push(...nameValidation.errors);\n        }\n        // Log name warnings\n        nameValidation.warnings.forEach(warning => {\n            this.logger.warn(warning);\n        });\n\n        // Validate inventoryUrl\n        if (!lib.inventoryUrl || typeof lib.inventoryUrl !== 'string' || lib.inventoryUrl.trim() === '') {\n            errors.push('Missing or invalid \"inventoryUrl\" field');\n        } else {\n            const invValidation = URLValidator.validateInventoryURL(lib.inventoryUrl);\n            if (!invValidation.isValid) {\n                errors.push(...invValidation.errors);\n            }\n            // Log inventory URL warnings\n            invValidation.warnings.forEach(warning => {\n                this.logger.warn(`inventoryUrl \"${lib.inventoryUrl}\" - ${warning}`);\n            });\n        }\n\n        // Validate baseUrl\n        if (!lib.baseUrl || typeof lib.baseUrl !== 'string' || lib.baseUrl.trim() === '') {\n            errors.push('Missing or invalid \"baseUrl\" field');\n        } else {\n            const baseValidation = URLValidator.validateBaseURL(lib.baseUrl);\n            if (!baseValidation.isValid) {\n                errors.push(...baseValidation.errors);\n            }\n            // Log base URL warnings\n            baseValidation.warnings.forEach(warning => {\n                this.logger.warn(`baseUrl \"${lib.baseUrl}\" - ${warning}`);\n            });\n        }\n\n        return errors;\n    }\n\n    public async getInventory(version: string): Promise<Map<string, InventoryEntry>> {\n        const cacheKey = `inventory-${version}-v8`; // v8 for enhanced cache invalidation support\n        const maxAge = CacheManager.hoursToMs(24); // 24 hours\n\n        this.logger.debug(`Getting inventory for version ${version}, cache key: ${cacheKey}`);\n\n        try {\n            // Check cache first\n            const cached = await this.cacheManager.get<Record<string, InventoryEntry>>(cacheKey);\n            this.logger.debug(`Cache lookup result: ${cached ? 'found' : 'not found'}`);\n\n            if (cached) {\n                const isExpired = await this.cacheManager.isExpired(cacheKey, maxAge);\n                this.logger.debug(`Cache expired check: ${isExpired ? 'expired' : 'not expired'}`);\n                this.logger.debug(`Cache timestamp: ${new Date(cached.timestamp)}`);\n                this.logger.debug(`Max age: ${maxAge}ms (${maxAge / (1000 * 60 * 60)}h)`);\n\n                if (!isExpired) {\n                    this.logger.debug(`Using cached inventory for version ${version}`);\n                    return new Map(Object.entries(cached.data));\n                }\n            }\n\n            this.logger.debug(`Fetching fresh inventory for version ${version}`);\n            const inventory = await this.fetchInventory(version);\n\n            // Convert Map to Object for storage\n            const inventoryObj: Record<string, InventoryEntry> = {};\n            inventory.forEach((value, key) => {\n                inventoryObj[key] = value;\n            });\n\n            await this.cacheManager.set(cacheKey, inventoryObj);\n            return inventory;\n        } catch (error) {\n            this.logger.error(`Failed to get inventory for ${version}`, error as Error);\n            // If fetch fails but we have cached data, use it\n            const cached = await this.cacheManager.get<Record<string, InventoryEntry>>(cacheKey);\n            if (cached) {\n                this.logger.debug(`Using stale cached inventory due to fetch error`);\n                return new Map(Object.entries(cached.data));\n            }\n            throw error;\n        }\n    }\n\n    public async invalidateCache(): Promise<void> {\n        this.logger.info('Invalidating inventory cache by incrementing version');\n\n        // This forces cache refresh by incrementing the version number\n        // Note: The actual cache key increment is handled by changing the version\n        // in the getInventory method's cacheKey generation (currently at v8)\n        this.logger.info(`Inventory cache will use new version: v8`);\n    }\n\n    /**\n     * Get inventory for a third-party library with version awareness\n     * If packageDetector is available, tries to use installed package version\n     */\n    public async getThirdPartyInventory(\n        libraryName: string,\n        pythonPath?: string\n    ): Promise<Map<string, InventoryEntry> | null> {\n        // Try version-aware lookup if package detector is available\n        if (this.packageDetector && pythonPath) {\n            const versionedConfig = await this.getVersionedLibraryConfig(libraryName, pythonPath);\n            if (versionedConfig) {\n                this.logger.debug(`Using ${versionedConfig.isExactMatch ? 'exact' : 'fallback'} version ${versionedConfig.version} for ${libraryName}`);\n                return await this.fetchVersionedInventory(versionedConfig);\n            }\n        }\n\n        // Fallback to standard lookup\n        const allLibs = this.getAllLibraryConfigs();\n        const config = allLibs.find(lib => lib.name === libraryName);\n\n        if (!config) {\n            this.logger.debug(`No inventory configuration for library: ${libraryName}`);\n            return null;\n        }\n\n        const cacheKey = `inventory-${libraryName}-v1`;\n        const maxAge = CacheManager.hoursToMs(24 * 7); // 7 days for third-party (more stable)\n\n        this.logger.debug(`Getting third-party inventory for ${libraryName}`);\n\n        try {\n            // Check cache first\n            const cached = await this.cacheManager.get<Record<string, InventoryEntry>>(cacheKey);\n\n            if (cached) {\n                const isExpired = await this.cacheManager.isExpired(cacheKey, maxAge);\n\n                if (!isExpired) {\n                    this.logger.debug(`Using cached inventory for ${libraryName}`);\n                    return new Map(Object.entries(cached.data));\n                }\n            }\n\n            this.logger.debug(`Fetching fresh inventory for ${libraryName}`);\n            const inventory = await this.fetchThirdPartyInventory(config);\n\n            // Convert Map to Object for storage\n            const inventoryObj: Record<string, InventoryEntry> = {};\n            inventory.forEach((value, key) => {\n                inventoryObj[key] = value;\n            });\n\n            await this.cacheManager.set(cacheKey, inventoryObj);\n            return inventory;\n        } catch (error) {\n            this.logger.error(`Failed to get inventory for ${libraryName}:`, error as Error);\n            // If fetch fails but we have cached data, use it\n            const cached = await this.cacheManager.get<Record<string, InventoryEntry>>(cacheKey);\n            if (cached) {\n                this.logger.debug(`Using stale cached inventory due to fetch error`);\n                return new Map(Object.entries(cached.data));\n            }\n            return null; // Return null instead of throwing for third-party libraries\n        }\n    }\n\n    private async fetchThirdPartyInventory(config: LibraryInventoryConfig): Promise<Map<string, InventoryEntry>> {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 10000); // 10 second timeout\n\n        try {\n            const response = await fetch(config.inventoryUrl, {\n                signal: controller.signal,\n                headers: { 'User-Agent': 'VSCode-Python-Hover-Extension' }\n            });\n\n            clearTimeout(timeoutId);\n\n            if (!response.ok) {\n                throw new Error(`Failed to fetch inventory: ${response.status} ${response.statusText}`);\n            }\n\n            const buffer = await response.arrayBuffer();\n            return this.parseThirdPartyInventory(new Uint8Array(buffer), config);\n        } catch (error: any) {\n            clearTimeout(timeoutId);\n            if (error.name === 'AbortError') {\n                throw new Error(`Inventory fetch timed out after 10 seconds: ${config.inventoryUrl}`);\n            }\n            throw error;\n        }\n    }\n\n    private async fetchInventory(version: string): Promise<Map<string, InventoryEntry>> {\n        const inventoryUrl = `${InventoryManager.DOCS_BASE_URL}/${version}/objects.inv`;\n\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 10000);\n\n        try {\n            const response = await fetch(inventoryUrl, {\n                signal: controller.signal,\n                headers: { 'User-Agent': 'VSCode-Python-Hover-Extension' }\n            });\n\n            clearTimeout(timeoutId);\n\n            if (!response.ok) {\n                throw new Error(`Failed to fetch inventory: ${response.status} ${response.statusText}`);\n            }\n\n            const buffer = await response.arrayBuffer();\n            return this.parseInventory(new Uint8Array(buffer), version);\n        } catch (error: any) {\n            clearTimeout(timeoutId);\n            if (error.name === 'AbortError') {\n                throw new Error(`Inventory fetch timed out after 10 seconds: ${inventoryUrl}`);\n            }\n            throw error;\n        }\n    }\n\n    private parseInventory(data: Uint8Array, version: string): Map<string, InventoryEntry> {\n        const inventory = new Map<string, InventoryEntry>();\n\n        try {\n            // Skip the header (first 4 lines)\n            let offset = 0;\n            let lineCount = 0;\n\n            // Find the end of the header\n            while (lineCount < 4 && offset < data.length) {\n                if (data[offset] === 0x0A) { // newline\n                    lineCount++;\n                }\n                offset++;\n            }\n\n            // The rest is zlib-compressed\n            const compressedData = data.slice(offset);\n            const decompressed = pako.inflate(compressedData, { to: 'string' });\n\n            // Parse each line\n            const lines = decompressed.split('\\n');\n            for (const line of lines) {\n                if (line.trim() === '') continue;\n\n                const entry = this.parseInventoryLine(line, version);\n                if (entry) {\n                    // Debug: Log entries we're storing to see if anchor replacement worked\n                    if (entry.name === 'len' || entry.name === 'class' || entry.name === 'min') {\n                        this.logger.debug(`Storing entry: ${entry.name} -> ${entry.uri}#${entry.anchor}`);\n                    }\n\n                    // Store with both simple name and domain:role qualified name\n                    // This allows us to find all entries for a name and then select the best one\n                    const qualifiedName = `${entry.name}:${entry.domain}:${entry.role}`;\n                    inventory.set(qualifiedName, entry);\n\n                    // Also store with simple name, but prefer certain types over others\n                    const existing = inventory.get(entry.name);\n                    if (!existing || this.shouldReplaceEntry(existing, entry)) {\n                        inventory.set(entry.name, entry);\n                    }\n                }\n            }\n        } catch (error) {\n            throw new Error(`Failed to parse inventory: ${error}`);\n        }\n\n        return inventory;\n    }\n\n    private parseThirdPartyInventory(data: Uint8Array, config: LibraryInventoryConfig): Map<string, InventoryEntry> {\n        const inventory = new Map<string, InventoryEntry>();\n\n        try {\n            // Skip the header (first 4 lines)\n            let offset = 0;\n            let lineCount = 0;\n\n            // Find the end of the header\n            while (lineCount < 4 && offset < data.length) {\n                if (data[offset] === 0x0A) { // newline\n                    lineCount++;\n                }\n                offset++;\n            }\n\n            // The rest is zlib-compressed\n            const compressedData = data.slice(offset);\n            const decompressed = pako.inflate(compressedData, { to: 'string' });\n\n            // Parse each line\n            const lines = decompressed.split('\\n');\n            let entryCount = 0;\n            for (const line of lines) {\n                if (line.trim() === '') continue;\n\n                const entry = this.parseThirdPartyInventoryLine(line, config);\n                if (entry) {\n                    // Store with the full qualified name from the inventory\n                    // This preserves submodule structure (e.g., matplotlib.pyplot.plot)\n                    inventory.set(entry.name, entry);\n\n                    // Also store with domain:role qualified name\n                    const domainRoleName = `${entry.name}:${entry.domain}:${entry.role}`;\n                    inventory.set(domainRoleName, entry);\n\n                    entryCount++;\n                }\n            }\n\n            this.logger.debug(`Loaded ${entryCount} entries from ${config.name} inventory`);\n        } catch (error) {\n            throw new Error(`Failed to parse third-party inventory for ${config.name}: ${error}`);\n        }\n\n        return inventory;\n    }\n\n    private parseThirdPartyInventoryLine(line: string, config: LibraryInventoryConfig): InventoryEntry | null {\n        // Intersphinx inventory format:\n        // name domain:role priority uri anchor [display_name]\n\n        const parts = line.split(/\\s+/);\n        if (parts.length < 5) {\n            return null;\n        }\n\n        const name = parts[0];\n        const [domain, role] = parts[1].split(':');\n        const priority = parseInt(parts[2], 10);\n\n        let uri = parts[3];\n        let anchor = parts[4];\n\n        // Check if URI contains # - if so, split it\n        if (uri.includes('#')) {\n            const uriParts = uri.split('#');\n            uri = uriParts[0];\n            if (uriParts.length > 1 && uriParts[1]) {\n                anchor = uriParts[1];\n            }\n            if (parts[4] === '-' && uriParts[1]) {\n                anchor = uriParts[1];\n            }\n        }\n\n        // Skip if invalid\n        if (!name || !domain || !role || isNaN(priority)) {\n            return null;\n        }\n\n        // Handle special placeholders\n        if (anchor.includes('$')) {\n            anchor = anchor.replace(/\\$/g, name);\n        }\n\n        // Resolve relative URIs to absolute using the base URL\n        if (!uri.startsWith('http')) {\n            uri = config.baseUrl + uri;\n        }\n\n        return {\n            name,\n            domain,\n            role,\n            priority,\n            uri,\n            anchor\n        };\n    }\n\n    private shouldReplaceEntry(existing: InventoryEntry, newEntry: InventoryEntry): boolean {\n        // Priority order: py:keyword > py:function > py:class > std:label > std:term\n        const priorityOrder = [\n            'py:keyword',\n            'py:function',\n            'py:class',\n            'py:exception',\n            'std:label',\n            'std:term'\n        ];\n\n        const existingKey = `${existing.domain}:${existing.role}`;\n        const newKey = `${newEntry.domain}:${newEntry.role}`;\n\n        const existingPriority = priorityOrder.indexOf(existingKey);\n        const newPriority = priorityOrder.indexOf(newKey);\n\n        // If new entry has higher priority (lower index), replace\n        if (newPriority !== -1 && existingPriority !== -1) {\n            return newPriority < existingPriority;\n        }\n\n        // If only new entry is in priority list, replace\n        if (newPriority !== -1) return true;\n\n        // Otherwise don't replace\n        return false;\n    }\n\n    private parseInventoryLine(line: string, version: string): InventoryEntry | null {\n        // Intersphinx inventory format:\n        // name domain:role priority uri anchor [display_name]\n        // The inventory uses space-separated fields, but the display name can contain spaces\n        // We need to be careful about parsing when URI contains # and anchor\n\n        const parts = line.split(/\\s+/);\n        if (parts.length < 5) {\n            return null;\n        }\n\n        const name = parts[0];\n        const [domain, role] = parts[1].split(':');\n        const priority = parseInt(parts[2], 10);\n\n        // The URI might contain #, and the anchor follows it\n        // Look for the pattern: uri#anchor or just uri with anchor as next field\n        let uri = parts[3];\n        let anchor = parts[4];\n\n        // Check if URI contains # - if so, split it\n        if (uri.includes('#')) {\n            const uriParts = uri.split('#');\n            uri = uriParts[0];\n            // The anchor might be embedded in the URI or be the next field\n            if (uriParts.length > 1 && uriParts[1]) {\n                anchor = uriParts[1];\n            }\n            // If anchor field is just \"-\", then use the anchor from URI\n            if (parts[4] === '-' && uriParts[1]) {\n                anchor = uriParts[1];\n            }\n        }\n\n        // Debug: Log the raw line and parsed anchor for specific items\n        if (name === 'for' || name === 'class' || name === 'len') {\n            this.logger.debug(`Raw line: \"${line}\"`);\n            this.logger.debug(`Parsed - name: \"${name}\", uri: \"${uri}\", anchor: \"${anchor}\"`);\n        }\n\n        // Skip if invalid\n        if (!name || !domain || !role || isNaN(priority)) {\n            return null;\n        }\n\n        // Handle special placeholders in intersphinx inventory\n        // '$' is a placeholder for the object name in anchors\n        if (name === 'for' || name === 'class' || name === 'len') {\n            this.logger.debug(`Processing anchor for ${name}: \"${anchor}\"`);\n        }\n        if (anchor.includes('$')) {\n            if (name === 'for' || name === 'class' || name === 'len') {\n                this.logger.debug(`Anchor contains $, replacing...`);\n            }\n            // For some entries, we need to transform the name\n            let replacementName = name;\n\n            // Special cases for anchor replacement\n            if (anchor.includes('term-$')) {\n                // For glossary terms, use the name directly\n                replacementName = name;\n                anchor = anchor.replace(/\\$/g, replacementName);\n            } else if (domain === 'py' && role === 'class') {\n                // For Python classes, use the class name\n                replacementName = name;\n                anchor = anchor.replace(/\\$/g, replacementName);\n            } else if (domain === 'py' && role === 'function') {\n                // For Python functions, use the function name\n                replacementName = name;\n                anchor = anchor.replace(/\\$/g, replacementName);\n            } else if (domain === 'std' && role === 'label') {\n                // For std:label entries, the anchor often has extra content after $\n                // For 'for' with anchor '$#The', we want just 'for'\n                if (anchor.startsWith('$#') || anchor.startsWith('$')) {\n                    // Replace $ with the name and remove any trailing content after #\n                    anchor = anchor.replace('$', replacementName);\n                    // If there's a # followed by other content, keep only the name part\n                    if (anchor.includes('#') && anchor !== replacementName) {\n                        const parts = anchor.split('#');\n                        anchor = parts[0]; // Keep only the part before #\n                    }\n                    if (name === 'for' || name === 'class' || name === 'len') {\n                        this.logger.debug(`Special std:label processing: ${anchor}`);\n                    }\n                    // Skip the general replacement below\n                } else {\n                    anchor = anchor.replace(/\\$/g, replacementName);\n                }\n            } else {\n                anchor = anchor.replace(/\\$/g, replacementName);\n            }\n\n            if (name === 'for' || name === 'class' || name === 'len') {\n                this.logger.debug(`Final processed anchor: \"${anchor}\"`);\n            }\n        }\n\n        // Build full URL\n        const baseUrl = `${InventoryManager.DOCS_BASE_URL}/${version}`;\n        const fullUri = uri.startsWith('http') ? uri : `${baseUrl}/${uri}`;\n        const fullAnchor = anchor === '-' ? '' : anchor;\n\n        return {\n            name,\n            domain,\n            role,\n            priority,\n            uri: fullUri,\n            anchor: fullAnchor\n        };\n    }\n\n    public async resolveSymbol(\n        symbol: string,\n        version: string,\n        context?: string,\n        pythonPath?: string\n    ): Promise<InventoryEntry | null> {\n        // If we have a context (e.g., 'numpy'), check third-party library inventories first\n        if (context) {\n            const baseModule = context.split('.')[0];\n            this.logger.debug(`Checking third-party library: ${baseModule} for symbol: ${symbol}`);\n\n            const thirdPartyInventory = await this.getThirdPartyInventory(baseModule, pythonPath);\n            if (thirdPartyInventory) {\n                // Extract the method name from the symbol (in case it's already qualified like \"torch.zeros\")\n                const methodName = symbol.includes('.') ? symbol.split('.').pop()! : symbol;\n\n                // Try different qualified name variations\n                const searchPatterns = [\n                    symbol,                              // Try the symbol as-is first (e.g., \"torch.zeros\")\n                    `${baseModule}.${methodName}`,       // e.g., numpy.ones\n                    `${baseModule}.pyplot.${methodName}`, // e.g., matplotlib.pyplot.plot\n                    methodName                           // Direct name from inventory\n                ];\n\n                // Special case for matplotlib - also try matplotlib.pyplot\n                if (baseModule === 'matplotlib') {\n                    searchPatterns.push(`matplotlib.pyplot.${methodName}`);\n                }\n\n                for (const pattern of searchPatterns) {\n                    const entry = thirdPartyInventory.get(pattern);\n                    if (entry) {\n                        this.logger.debug(`Found third-party entry: ${pattern} -> ${entry.uri}#${entry.anchor}`);\n                        return entry;\n                    }\n                }\n\n                // If not found with exact names, search through all entries for partial matches\n                for (const [key, entry] of thirdPartyInventory) {\n                    // Skip domain:role entries\n                    if (key.includes(':')) continue;\n\n                    // Check if the entry name ends with the symbol we're looking for\n                    if (entry.name.endsWith(`.${methodName}`) || entry.name === methodName) {\n                        this.logger.debug(`Found third-party entry via partial match: ${entry.name} -> ${entry.uri}#${entry.anchor}`);\n                        return entry;\n                    }\n                }\n\n                this.logger.debug(`Symbol '${symbol}' not found in ${baseModule} inventory, falling back to stdlib`);\n            }\n        }\n\n        // Fall back to standard library inventory\n        const inventory = await this.getInventory(version);\n\n        // Collect all matching entries by checking both simple names and qualified names\n        const candidates: InventoryEntry[] = [];\n\n        // First, find all entries for this symbol (including qualified names)\n        for (const [key, inventoryEntry] of inventory) {\n            if (key === symbol || (key.includes(':') && key.startsWith(`${symbol}:`))) {\n                candidates.push(inventoryEntry);\n                this.logger.debug(`Found entry: ${inventoryEntry.name} (${inventoryEntry.domain}:${inventoryEntry.role})`);\n            }\n        }\n\n        // Try with builtins prefix for common functions\n        const builtinEntry = inventory.get(`builtins.${symbol}`);\n        if (builtinEntry) {\n            candidates.push(builtinEntry);\n        }\n\n        // Try as a method on common types\n        const commonTypes = ['str', 'list', 'dict', 'set', 'tuple', 'int', 'float'];\n        for (const type of commonTypes) {\n            const typeEntry = inventory.get(`${type}.${symbol}`);\n            if (typeEntry) {\n                candidates.push(typeEntry);\n            }\n        }\n\n        // Special handling for dunder methods (like __str__, __init__, __len__, etc.)\n        if (symbol.startsWith('__') && symbol.endsWith('__')) {\n            this.logger.debug(`Looking for special method: ${symbol}`);\n\n            // Try on object (base class for all Python objects)\n            const objectEntry = inventory.get(`object.${symbol}`);\n            if (objectEntry) {\n                candidates.push(objectEntry);\n                this.logger.debug(`Found ${symbol} on object`);\n            }\n\n            // Try without the prefix/suffix in case it's documented differently\n            const baseMethodName = symbol.slice(2, -2); // Remove __ from both ends\n            const baseEntry = inventory.get(baseMethodName);\n            if (baseEntry) {\n                candidates.push(baseEntry);\n                this.logger.debug(`Found base method: ${baseMethodName}`);\n            }\n\n            // Look for it in the data model documentation\n            const dataModelEntries = [\n                `datamodel.${symbol}`,\n                `object.${symbol}`,\n                `type.${symbol}`,\n                symbol // Direct lookup\n            ];\n\n            for (const key of dataModelEntries) {\n                const entry = inventory.get(key);\n                if (entry) {\n                    candidates.push(entry);\n                    this.logger.debug(`Found ${symbol} via ${key}`);\n                }\n            }\n\n            // Search through all entries to find any that contain this special method\n            for (const [key, inventoryEntry] of inventory) {\n                if (key.endsWith(`.${symbol}`) && !candidates.includes(inventoryEntry)) {\n                    candidates.push(inventoryEntry);\n                    this.logger.debug(`Found ${symbol} on ${key.split('.')[0]}`);\n                }\n            }\n        }\n\n        // Try exceptions\n        const exceptionEntry = inventory.get(`exceptions.${symbol}`);\n        if (exceptionEntry) {\n            candidates.push(exceptionEntry);\n        }\n\n        // If we have candidates, pick the best one based on priority\n        if (candidates.length > 0) {\n            this.logger.debug(`Found ${candidates.length} candidates for \"${symbol}\": ${candidates.map(c => `${c.name} (${c.domain}:${c.role}) -> ${c.uri}#${c.anchor}`).join(', ')}`);\n            const selected = this.selectBestCandidate(candidates, symbol);\n            this.logger.debug(`Selected: ${selected.name} (${selected.domain}:${selected.role})`);\n            return selected;\n        }\n\n        // Fallback: create synthetic entries for common Python keywords\n        if (this.isPythonKeyword(symbol)) {\n            this.logger.debug(`Creating fallback entry for keyword: ${symbol}`);\n            return this.createKeywordFallback(symbol, version);\n        }\n\n        // Fallback: create synthetic entries for common special methods\n        if (symbol.startsWith('__') && symbol.endsWith('__')) {\n            this.logger.debug(`Creating fallback entry for special method: ${symbol}`);\n            return this.createSpecialMethodFallback(symbol, version);\n        }\n\n        return null;\n    }\n\n    private createKeywordFallback(symbol: string, version: string): InventoryEntry | null {\n        // Manual mapping for Python keywords to their documentation sections\n        const keywordMappings: { [key: string]: { uri: string; anchor: string } } = {\n            'class': { uri: 'reference/compound_stmts.html', anchor: 'class' },\n            'def': { uri: 'reference/compound_stmts.html', anchor: 'function' },\n            'if': { uri: 'reference/compound_stmts.html', anchor: 'if' },\n            'for': { uri: 'reference/compound_stmts.html', anchor: 'for' },\n            'while': { uri: 'reference/compound_stmts.html', anchor: 'while' },\n            'try': { uri: 'reference/compound_stmts.html', anchor: 'try' },\n            'with': { uri: 'reference/compound_stmts.html', anchor: 'with' },\n            'import': { uri: 'reference/simple_stmts.html', anchor: 'import' },\n            'from': { uri: 'reference/simple_stmts.html', anchor: 'from' },\n            'return': { uri: 'reference/simple_stmts.html', anchor: 'return' },\n            'yield': { uri: 'reference/simple_stmts.html', anchor: 'yield' },\n            'pass': { uri: 'reference/simple_stmts.html', anchor: 'pass' },\n            'break': { uri: 'reference/simple_stmts.html', anchor: 'break' },\n            'continue': { uri: 'reference/simple_stmts.html', anchor: 'continue' },\n            'lambda': { uri: 'reference/expressions.html', anchor: 'lambda' },\n            'and': { uri: 'reference/expressions.html', anchor: 'and' },\n            'or': { uri: 'reference/expressions.html', anchor: 'or' },\n            'not': { uri: 'reference/expressions.html', anchor: 'not' },\n            'in': { uri: 'reference/expressions.html', anchor: 'in' },\n            'is': { uri: 'reference/expressions.html', anchor: 'is' }\n        };\n\n        const mapping = keywordMappings[symbol];\n        if (mapping) {\n            const baseUrl = `${InventoryManager.DOCS_BASE_URL}/${version}`;\n            return {\n                name: symbol,\n                domain: 'py',\n                role: 'keyword',\n                priority: 1,\n                uri: `${baseUrl}/${mapping.uri}`,\n                anchor: mapping.anchor\n            };\n        }\n\n        return null;\n    }\n\n    private createSpecialMethodFallback(symbol: string, version: string): InventoryEntry | null {\n        // Manual mapping for common special methods to their documentation sections\n        const specialMethodMappings: { [key: string]: { uri: string; anchor: string; description: string } } = {\n            '__init__': { uri: 'reference/datamodel.html', anchor: '__init__', description: 'Object initialization' },\n            '__str__': { uri: 'reference/datamodel.html', anchor: '__str__', description: 'String representation' },\n            '__repr__': { uri: 'reference/datamodel.html', anchor: '__repr__', description: 'Official string representation' },\n            '__len__': { uri: 'reference/datamodel.html', anchor: '__len__', description: 'Length of object' },\n            '__getitem__': { uri: 'reference/datamodel.html', anchor: '__getitem__', description: 'Get item by key/index' },\n            '__setitem__': { uri: 'reference/datamodel.html', anchor: '__setitem__', description: 'Set item by key/index' },\n            '__delitem__': { uri: 'reference/datamodel.html', anchor: '__delitem__', description: 'Delete item by key/index' },\n            '__iter__': { uri: 'reference/datamodel.html', anchor: '__iter__', description: 'Return iterator' },\n            '__next__': { uri: 'reference/datamodel.html', anchor: '__next__', description: 'Return next item from iterator' },\n            '__contains__': { uri: 'reference/datamodel.html', anchor: '__contains__', description: 'Membership test operator' },\n            '__call__': { uri: 'reference/datamodel.html', anchor: '__call__', description: 'Make object callable' },\n            '__enter__': { uri: 'reference/datamodel.html', anchor: '__enter__', description: 'Context manager entry' },\n            '__exit__': { uri: 'reference/datamodel.html', anchor: '__exit__', description: 'Context manager exit' },\n            '__new__': { uri: 'reference/datamodel.html', anchor: '__new__', description: 'Object creation' },\n            '__del__': { uri: 'reference/datamodel.html', anchor: '__del__', description: 'Object deletion' },\n            '__eq__': { uri: 'reference/datamodel.html', anchor: '__eq__', description: 'Equality comparison' },\n            '__ne__': { uri: 'reference/datamodel.html', anchor: '__ne__', description: 'Inequality comparison' },\n            '__lt__': { uri: 'reference/datamodel.html', anchor: '__lt__', description: 'Less than comparison' },\n            '__le__': { uri: 'reference/datamodel.html', anchor: '__le__', description: 'Less than or equal comparison' },\n            '__gt__': { uri: 'reference/datamodel.html', anchor: '__gt__', description: 'Greater than comparison' },\n            '__ge__': { uri: 'reference/datamodel.html', anchor: '__ge__', description: 'Greater than or equal comparison' },\n            '__hash__': { uri: 'reference/datamodel.html', anchor: '__hash__', description: 'Hash value' },\n            '__bool__': { uri: 'reference/datamodel.html', anchor: '__bool__', description: 'Truth value testing' },\n            '__add__': { uri: 'reference/datamodel.html', anchor: '__add__', description: 'Addition operator' },\n            '__sub__': { uri: 'reference/datamodel.html', anchor: '__sub__', description: 'Subtraction operator' },\n            '__mul__': { uri: 'reference/datamodel.html', anchor: '__mul__', description: 'Multiplication operator' },\n            '__truediv__': { uri: 'reference/datamodel.html', anchor: '__truediv__', description: 'Division operator' },\n            '__floordiv__': { uri: 'reference/datamodel.html', anchor: '__floordiv__', description: 'Floor division operator' },\n            '__mod__': { uri: 'reference/datamodel.html', anchor: '__mod__', description: 'Modulo operator' },\n            '__pow__': { uri: 'reference/datamodel.html', anchor: '__pow__', description: 'Power operator' },\n            '__getattr__': { uri: 'reference/datamodel.html', anchor: '__getattr__', description: 'Attribute access' },\n            '__setattr__': { uri: 'reference/datamodel.html', anchor: '__setattr__', description: 'Attribute assignment' },\n            '__delattr__': { uri: 'reference/datamodel.html', anchor: '__delattr__', description: 'Attribute deletion' }\n        };\n\n        const mapping = specialMethodMappings[symbol];\n        if (mapping) {\n            const baseUrl = `${InventoryManager.DOCS_BASE_URL}/${version}`;\n            return {\n                name: symbol,\n                domain: 'py',\n                role: 'method',\n                priority: 1,\n                uri: `${baseUrl}/${mapping.uri}`,\n                anchor: mapping.anchor\n            };\n        }\n\n        return null;\n    }\n\n    private isPythonKeyword(symbol: string): boolean {\n        const keywords = [\n            'False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break',\n            'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally',\n            'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal',\n            'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'\n        ];\n        return keywords.includes(symbol);\n    }\n\n    private selectBestCandidate(candidates: InventoryEntry[], symbol: string): InventoryEntry {\n        // Priority order for domain:role combinations\n        const domainRolePriority = [\n            'py:keyword',      // Python keywords like 'class', 'def', 'if'\n            'py:stmt',         // Statement types like compound statements\n            'py:function',     // Built-in functions like 'len', 'print'\n            'py:method',       // Methods like 'str.split'\n            'py:class',        // Classes like 'str', 'list'\n            'py:exception',    // Exceptions like 'ValueError'\n            'py:attribute',    // Attributes\n            'py:module',       // Modules\n            'py:data',         // Data/constants\n            'std:doc',         // Documentation sections\n            'std:label',       // Labels\n            'std:term'         // Glossary terms (lowest priority)\n        ];\n\n        // First, filter out std:term entries if we have better alternatives for keywords\n        if (this.isPythonKeyword(symbol)) {\n            const pyEntries = candidates.filter(c => c.domain === 'py');\n            const stdLabelEntries = candidates.filter(c => c.domain === 'std' && c.role === 'label');\n\n            // Prefer py: entries if available\n            if (pyEntries.length > 0) {\n                candidates = pyEntries;\n            }\n            // Otherwise, prefer std:label over std:term for keywords\n            else if (stdLabelEntries.length > 0) {\n                candidates = stdLabelEntries;\n            }\n        }\n\n        // Sort candidates by priority\n        candidates.sort((a, b) => {\n            const aKey = `${a.domain}:${a.role}`;\n            const bKey = `${b.domain}:${b.role}`;\n\n            const aPriority = domainRolePriority.indexOf(aKey);\n            const bPriority = domainRolePriority.indexOf(bKey);\n\n            // If both are in priority list, use the order\n            if (aPriority !== -1 && bPriority !== -1) {\n                return aPriority - bPriority;\n            }\n\n            // If only one is in priority list, prefer it\n            if (aPriority !== -1) return -1;\n            if (bPriority !== -1) return 1;\n\n            // If neither is in priority list, use inventory priority\n            return a.priority - b.priority;\n        });\n\n        return candidates[0];\n    }\n\n    public async searchSymbols(query: string, version: string, limit = 10): Promise<InventoryEntry[]> {\n        const inventory = await this.getInventory(version);\n        const results: InventoryEntry[] = [];\n\n        const lowercaseQuery = query.toLowerCase();\n\n        for (const [name, entry] of inventory) {\n            if (name.toLowerCase().includes(lowercaseQuery)) {\n                results.push(entry);\n                if (results.length >= limit) {\n                    break;\n                }\n            }\n        }\n\n        // Sort by relevance (exact match first, then by length)\n        results.sort((a, b) => {\n            const aExact = a.name.toLowerCase() === lowercaseQuery ? 0 : 1;\n            const bExact = b.name.toLowerCase() === lowercaseQuery ? 0 : 1;\n\n            if (aExact !== bExact) {\n                return aExact - bExact;\n            }\n\n            return a.name.length - b.name.length;\n        });\n\n        return results;\n    }\n\n    /**\n     * Get version-aware library configuration based on installed package\n     */\n    private async getVersionedLibraryConfig(\n        libraryName: string,\n        pythonPath: string\n    ): Promise<VersionedInventoryConfig | null> {\n        if (!this.packageDetector) {\n            return null;\n        }\n\n        try {\n            // Get installed package version\n            const installedVersion = await this.packageDetector.getPackageVersion(pythonPath, libraryName);\n\n            if (!installedVersion) {\n                this.logger.debug(`Package ${libraryName} not installed in environment`);\n                return null;\n            }\n\n            this.logger.debug(`Found ${libraryName} version ${installedVersion} in environment`);\n\n            // Try to build version-specific URL\n            const versionedConfig = this.buildVersionedConfig(libraryName, installedVersion);\n\n            if (versionedConfig) {\n                // Test if the exact version inventory exists\n                const exists = await this.testInventoryUrl(versionedConfig.inventoryUrl);\n                if (exists) {\n                    return {\n                        name: versionedConfig.name,\n                        inventoryUrl: versionedConfig.inventoryUrl,\n                        baseUrl: versionedConfig.baseUrl,\n                        version: installedVersion,\n                        isExactMatch: true\n                    };\n                }\n\n                // Try fallback to closest version\n                const fallbackConfig = await this.findClosestVersion(libraryName, installedVersion);\n                if (fallbackConfig && fallbackConfig.version) {\n                    return {\n                        name: fallbackConfig.name,\n                        inventoryUrl: fallbackConfig.inventoryUrl,\n                        baseUrl: fallbackConfig.baseUrl,\n                        version: fallbackConfig.version,\n                        isExactMatch: false\n                    };\n                }\n            }\n        } catch (error) {\n            this.logger.error(`Error getting versioned config for ${libraryName}:`, error as Error);\n        }\n\n        return null;\n    }\n\n    /**\n     * Build version-specific inventory configuration\n     */\n    private buildVersionedConfig(libraryName: string, version: string): LibraryInventoryConfig | null {\n        // Known URL patterns for popular libraries\n        const versionPatterns: Record<string, (v: string) => LibraryInventoryConfig> = {\n            'numpy': (v) => ({\n                name: 'numpy',\n                inventoryUrl: `https://numpy.org/doc/${v}/objects.inv`,\n                baseUrl: `https://numpy.org/doc/${v}/`,\n                version: v\n            }),\n            'pandas': (v) => ({\n                name: 'pandas',\n                inventoryUrl: `https://pandas.pydata.org/pandas-docs/version/${v}/objects.inv`,\n                baseUrl: `https://pandas.pydata.org/pandas-docs/version/${v}/`,\n                version: v\n            }),\n            'scipy': (v) => ({\n                name: 'scipy',\n                inventoryUrl: `https://docs.scipy.org/doc/scipy-${v}/objects.inv`,\n                baseUrl: `https://docs.scipy.org/doc/scipy-${v}/`,\n                version: v\n            }),\n            'matplotlib': (v) => ({\n                name: 'matplotlib',\n                inventoryUrl: `https://matplotlib.org/${v}/objects.inv`,\n                baseUrl: `https://matplotlib.org/${v}/`,\n                version: v\n            }),\n            'requests': (v) => ({\n                name: 'requests',\n                inventoryUrl: `https://docs.python-requests.org/en/v${v}/objects.inv`,\n                baseUrl: `https://docs.python-requests.org/en/v${v}/`,\n                version: v\n            }),\n            'sklearn': (v) => ({\n                name: 'sklearn',\n                inventoryUrl: `https://scikit-learn.org/${v}/objects.inv`,\n                baseUrl: `https://scikit-learn.org/${v}/`,\n                version: v\n            }),\n            'torch': (v) => ({\n                name: 'torch',\n                inventoryUrl: `https://pytorch.org/docs/${v}/objects.inv`,\n                baseUrl: `https://pytorch.org/docs/${v}/`,\n                version: v\n            }),\n        };\n\n        const pattern = versionPatterns[libraryName];\n        if (pattern) {\n            // Try full version first (e.g., \"2.1.0\")\n            return pattern(version);\n        }\n\n        return null;\n    }\n\n    /**\n     * Test if an inventory URL is accessible\n     */\n    private async testInventoryUrl(url: string): Promise<boolean> {\n        try {\n            const controller = new AbortController();\n            const timeoutId = setTimeout(() => controller.abort(), 5000); // 5 second timeout\n\n            const response = await fetch(url, {\n                method: 'HEAD',\n                signal: controller.signal,\n                headers: { 'User-Agent': 'VSCode-Python-Hover-Extension' }\n            });\n\n            clearTimeout(timeoutId);\n            return response.ok;\n        } catch {\n            return false;\n        }\n    }\n\n    /**\n     * Find closest available version if exact match not found\n     */\n    private async findClosestVersion(libraryName: string, installedVersion: string): Promise<LibraryInventoryConfig | null> {\n        const [major, minor] = installedVersion.split('.').map(Number);\n\n        // Try minor version variations (downgrade patch version)\n        const tryVersions = [\n            `${major}.${minor}.0`,\n            `${major}.${minor}`,\n            installedVersion.split('.').slice(0, 2).join('.'), // Major.Minor only\n        ];\n\n        // Also try \"stable\" or \"latest\" endpoints\n        const fallbackPatterns: Record<string, LibraryInventoryConfig> = {\n            'numpy': {\n                name: 'numpy',\n                inventoryUrl: 'https://numpy.org/doc/stable/objects.inv',\n                baseUrl: 'https://numpy.org/doc/stable/',\n                version: 'stable'\n            },\n            'pandas': {\n                name: 'pandas',\n                inventoryUrl: 'https://pandas.pydata.org/docs/objects.inv',\n                baseUrl: 'https://pandas.pydata.org/docs/',\n                version: 'latest'\n            },\n            'scipy': {\n                name: 'scipy',\n                inventoryUrl: 'https://docs.scipy.org/doc/scipy/objects.inv',\n                baseUrl: 'https://docs.scipy.org/doc/scipy/',\n                version: 'stable'\n            },\n            'torch': {\n                name: 'torch',\n                inventoryUrl: 'https://pytorch.org/docs/stable/objects.inv',\n                baseUrl: 'https://pytorch.org/docs/stable/',\n                version: 'stable'\n            },\n        };\n\n        // Try specific versions first\n        for (const tryVersion of tryVersions) {\n            const config = this.buildVersionedConfig(libraryName, tryVersion);\n            if (config && await this.testInventoryUrl(config.inventoryUrl)) {\n                this.logger.debug(`Found fallback version ${tryVersion} for ${libraryName}`);\n                return config;\n            }\n        }\n\n        // Fall back to stable/latest\n        const fallback = fallbackPatterns[libraryName];\n        if (fallback && await this.testInventoryUrl(fallback.inventoryUrl)) {\n            this.logger.debug(`Using fallback '${fallback.version}' docs for ${libraryName}`);\n            return fallback;\n        }\n\n        return null;\n    }\n\n    /**\n     * Fetch inventory for versioned configuration\n     */\n    private async fetchVersionedInventory(config: VersionedInventoryConfig): Promise<Map<string, InventoryEntry> | null> {\n        const cacheKey = `inventory-${config.name}-${config.version}-v1`;\n        const maxAge = CacheManager.hoursToMs(24 * 7); // 7 days\n\n        try {\n            // Check cache first\n            const cached = await this.cacheManager.get<Record<string, InventoryEntry>>(cacheKey);\n\n            if (cached) {\n                const isExpired = await this.cacheManager.isExpired(cacheKey, maxAge);\n\n                if (!isExpired) {\n                    this.logger.debug(`Using cached versioned inventory for ${config.name} ${config.version}`);\n                    return new Map(Object.entries(cached.data));\n                }\n            }\n\n            this.logger.debug(`Fetching versioned inventory for ${config.name} ${config.version}`);\n            const inventory = await this.fetchThirdPartyInventory(config);\n\n            // Convert Map to Object for storage\n            const inventoryObj: Record<string, InventoryEntry> = {};\n            inventory.forEach((value, key) => {\n                inventoryObj[key] = value;\n            });\n\n            await this.cacheManager.set(cacheKey, inventoryObj);\n            return inventory;\n        } catch (error) {\n            this.logger.error(`Failed to fetch versioned inventory for ${config.name}:`, error as Error);\n            // Fall back to cached data if available\n            const cached = await this.cacheManager.get<Record<string, InventoryEntry>>(cacheKey);\n            if (cached) {\n                this.logger.debug(`Using stale cached inventory`);\n                return new Map(Object.entries(cached.data));\n            }\n            return null;\n        }\n    }\n\n    /**\n     * Get all supported libraries (built-in + custom)\n     */\n    public getAllSupportedLibraries(): LibraryInventoryConfig[] {\n        const builtIn = InventoryManager.THIRD_PARTY_LIBRARIES;\n        const customLibs = this.configManager?.customLibraries ?? [];\n        const custom = customLibs.map(lib => ({\n            name: lib.name,\n            inventoryUrl: lib.inventoryUrl,\n            baseUrl: lib.baseUrl\n        }));\n\n        // Combine and deduplicate by name\n        const allLibs = [...builtIn];\n        const existingNames = new Set(builtIn.map(lib => lib.name));\n\n        for (const lib of custom) {\n            if (!existingNames.has(lib.name)) {\n                allLibs.push(lib);\n            }\n        }\n\n        return allLibs.sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    /**\n     * Get count of supported libraries\n     */\n    public getSupportedLibrariesCount(): { builtIn: number; custom: number; total: number } {\n        const builtIn = InventoryManager.THIRD_PARTY_LIBRARIES.length;\n        const customLibs = this.configManager?.customLibraries ?? [];\n\n        // Check for duplicates\n        const builtInNames = new Set(InventoryManager.THIRD_PARTY_LIBRARIES.map(lib => lib.name));\n        const uniqueCustom = customLibs.filter(lib => !builtInNames.has(lib.name)).length;\n\n        return {\n            builtIn,\n            custom: customLibs.length,\n            total: builtIn + uniqueCustom\n        };\n    }\n}\n","/**\n * Symbol Resolver - Intelligent Python symbol resolution\n *\n * @author KiidxAtlas\n * @copyright 2025 KiidxAtlas. All rights reserved.\n * @license MIT\n *\n * Resolves Python symbols with context detection for accurate documentation.\n */\n\nimport * as vscode from 'vscode';\nimport { OPERATORS } from '../data/documentationUrls';\nimport { TYPING_CONSTRUCTS } from '../data/typingConstructs';\nimport { Logger } from '../services/logger';\n\n// Symbol resolver watermark - KiidxAtlas 2025\nconst RESOLVER_ID = 'SymbolResolver-KiidxAtlas';\n\nexport interface SymbolInfo {\n    symbol: string;\n    type: 'builtin' | 'module' | 'method' | 'exception' | 'keyword' | 'decorator' | 'operator' | 'class' | 'f-string' | 'typing';\n    context?: string;\n    documentation?: string;\n}\n\nexport class SymbolResolver {\n    private static readonly PYTHON_KEYWORDS = new Set([\n        'False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break',\n        'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally',\n        'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal',\n        'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'\n    ]);\n\n    private static readonly PYTHON_BUILTINS = new Set([\n        'abs', 'all', 'any', 'ascii', 'bin', 'bool', 'bytearray', 'bytes',\n        'callable', 'chr', 'classmethod', 'compile', 'complex', 'delattr',\n        'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'filter',\n        'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr',\n        'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance',\n        'issubclass', 'iter', 'len', 'list', 'locals', 'map', 'max',\n        'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord',\n        'pow', 'print', 'property', 'range', 'repr', 'reversed', 'round',\n        'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum',\n        'super', 'tuple', 'type', 'vars', 'zip'\n    ]);\n\n    private static readonly PYTHON_EXCEPTIONS = new Set([\n        'ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException',\n        'BlockingIOError', 'BrokenPipeError', 'BufferError', 'BytesWarning',\n        'ChildProcessError', 'ConnectionAbortedError', 'ConnectionError',\n        'ConnectionRefusedError', 'ConnectionResetError', 'DeprecationWarning',\n        'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'FileExistsError',\n        'FileNotFoundError', 'FloatingPointError', 'FutureWarning', 'GeneratorExit',\n        'IOError', 'ImportError', 'ImportWarning', 'IndentationError', 'IndexError',\n        'InterruptedError', 'IsADirectoryError', 'KeyError', 'KeyboardInterrupt',\n        'LookupError', 'MemoryError', 'ModuleNotFoundError', 'NameError',\n        'NotADirectoryError', 'NotImplemented', 'NotImplementedError', 'OSError',\n        'OverflowError', 'PendingDeprecationWarning', 'PermissionError',\n        'ProcessLookupError', 'RecursionError', 'ReferenceError', 'ResourceWarning',\n        'RuntimeError', 'RuntimeWarning', 'StopAsyncIteration', 'StopIteration',\n        'SyntaxError', 'SyntaxWarning', 'SystemError', 'SystemExit', 'TabError',\n        'TimeoutError', 'TypeError', 'UnboundLocalError', 'UnicodeDecodeError',\n        'UnicodeEncodeError', 'UnicodeError', 'UnicodeTranslateError', 'UnicodeWarning',\n        'UserWarning', 'ValueError', 'Warning', 'ZeroDivisionError'\n    ]);\n\n    public resolveSymbolAtPosition(\n        document: vscode.TextDocument,\n        position: vscode.Position\n    ): SymbolInfo[] {\n        const line = document.lineAt(position);\n        const text = line.text;\n        const wordRange = document.getWordRangeAtPosition(position);\n        const word = wordRange ? document.getText(wordRange) : '';\n        const results: SymbolInfo[] = [];\n\n        // Get the full line for context\n        const lineText = text.trim();\n\n        // Early exit for empty or non-identifier words\n        if (!word) {\n            return [];\n        }\n\n        // Must look like a Python identifier (starts with letter or underscore)\n        if (!/^[A-Za-z_][A-Za-z0-9_]*$/.test(word)) {\n            return [];\n        }\n\n        // Avoid numeric literals\n        if (/^[0-9]+(?:\\.[0-9]+)?$/.test(word)) {\n            return [];\n        }\n\n        Logger.getInstance().debug(`Raw line: ${text}`);\n        Logger.getInstance().debug(`Cursor position: ${position.character}`);\n\n        // Skip if we're inside a comment\n        const commentStart = text.indexOf('#');\n        if (commentStart !== -1 && position.character > commentStart) {\n            Logger.getInstance().debug(`Inside comment, skipping`);\n            return [];\n        }\n\n        // CHECK KEYWORDS FIRST (before filtering by length)\n        // This ensures short keywords like 'if', 'or', 'as', 'in', 'is' are not skipped\n        if (SymbolResolver.PYTHON_KEYWORDS.has(word)) {\n            Logger.getInstance().debug(`Detected Python keyword: ${word}`);\n            results.push({\n                symbol: word,\n                type: 'keyword'\n            });\n            // For keywords, don't continue looking for other interpretations\n            return results;\n        }\n\n        // CHECK BUILTINS EARLY (before filtering by length)\n        // This ensures short builtins are not skipped\n        if (SymbolResolver.PYTHON_BUILTINS.has(word)) {\n            Logger.getInstance().debug(`Detected Python builtin: ${word}`);\n            results.push({\n                symbol: word,\n                type: 'builtin'\n            });\n        }\n\n        // CHECK EXCEPTIONS EARLY\n        if (SymbolResolver.PYTHON_EXCEPTIONS.has(word)) {\n            Logger.getInstance().debug(`Detected Python exception: ${word}`);\n            results.push({\n                symbol: word,\n                type: 'exception'\n            });\n        }\n\n        // Now apply heuristic filtering for other symbols\n        // Skip very short identifiers UNLESS they're already identified above\n        if (results.length === 0 && word.length < 2) {\n            return [];\n        }\n\n        // Skip common English stopwords only if not already identified\n        const stopwords = new Set(['the', 'a', 'an', 'and', 'or', 'but', 'if', 'else', 'for', 'to', 'of', 'in', 'on', 'with', 'by', 'as', 'is', 'it', 'this', 'that', 'these', 'those']);\n        if (results.length === 0 && stopwords.has(word.toLowerCase())) {\n            return [];\n        }\n\n        // Detect if inside an f-string (simple heuristic: quote before cursor with an 'f' prefix)\n        const cursorIndex = position.character;\n        const rawLine = text; // preserve original spacing for index calculations\n        const lastSingleQuote = rawLine.lastIndexOf(\"'\", cursorIndex - 1);\n        const lastDoubleQuote = rawLine.lastIndexOf('\"', cursorIndex - 1);\n        const quotePos = Math.max(lastSingleQuote, lastDoubleQuote);\n        if (quotePos !== -1) {\n            const quoteChar = rawLine[quotePos];\n            // look back up to 2 chars for prefixes like f, fr, rf\n            const prefixStart = Math.max(0, quotePos - 2);\n            const prefix = rawLine.slice(prefixStart, quotePos).toLowerCase();\n            const hasF = prefix.indexOf('f') !== -1;\n            const closingQuote = rawLine.indexOf(quoteChar, cursorIndex);\n            if (hasF && closingQuote !== -1) {\n                Logger.getInstance().debug(`Detected f-string at position: ${quotePos}`);\n                results.push({ symbol: 'f-string', type: 'f-string' });\n                return results;\n            }\n        }\n\n        // Don't resolve inside plain strings (not just f-strings)\n        const singleQuoteBefore = rawLine.lastIndexOf(\"'\", position.character - 1);\n        const doubleQuoteBefore = rawLine.lastIndexOf('\"', position.character - 1);\n        const quoteBefore = Math.max(singleQuoteBefore, doubleQuoteBefore);\n        if (quoteBefore !== -1) {\n            const quoteChar = rawLine[quoteBefore];\n            const closingQuote = rawLine.indexOf(quoteChar, position.character);\n            if (closingQuote !== -1) {\n                // inside a quoted string -> skip\n                return [];\n            }\n        }\n\n        // Detect operators at the cursor by scanning a small window around the position\n        const maxOpLen = Math.max(...OPERATORS.map(o => o.length));\n        const winStart = Math.max(0, position.character - maxOpLen);\n        const winEnd = Math.min(text.length, position.character + maxOpLen);\n        const window = text.slice(winStart, winEnd);\n\n        // sort operators by length to match longest first (e.g., '**=')\n        const sortedOps = [...OPERATORS].sort((a, b) => b.length - a.length);\n        for (const op of sortedOps) {\n            let idx = window.indexOf(op);\n            while (idx !== -1) {\n                const absIdx = winStart + idx;\n                if (position.character >= absIdx && position.character < absIdx + op.length) {\n                    Logger.getInstance().debug(`Detected operator: ${op} at position: ${absIdx}`);\n                    results.push({ symbol: op, type: 'operator' });\n                    return results;\n                }\n                idx = window.indexOf(op, idx + 1);\n            }\n        }\n\n        // Check if it's a decorator\n        if (lineText.startsWith('@') && lineText.includes(word)) {\n            results.push({\n                symbol: word,\n                type: 'decorator'\n            });\n        }\n\n        // Check if it's a typing construct\n        if (word in TYPING_CONSTRUCTS) {\n            results.push({\n                symbol: word,\n                type: 'typing',\n                documentation: TYPING_CONSTRUCTS[word]\n            });\n        }\n\n        // Check if it's a dunder method\n        if (word.startsWith('__') && word.endsWith('__')) {\n            Logger.getInstance().debug(`Detected potential dunder method: ${word}`);\n            results.push({\n                symbol: word,\n                type: 'method' // Keep as 'method' type - the hover provider will handle it\n            });\n        }\n\n        // Check for dotted access (method calls)\n        const dottedMatch = wordRange ? this.findDottedAccess(text, wordRange) : null;\n        if (dottedMatch) {\n            Logger.getInstance().debug(`Detected dotted access: ${dottedMatch.fullPath}`);\n            results.push({\n                symbol: dottedMatch.fullPath,\n                type: 'method',\n                context: dottedMatch.baseType\n            });\n        }\n\n        // Check for module imports\n        const moduleMatch = this.findModuleContext(document, position, word);\n        Logger.getInstance().debug(`findModuleContext for \"${word}\" returned: ${moduleMatch || 'null'}`);\n        if (moduleMatch) {\n            Logger.getInstance().debug(`Adding as module: ${moduleMatch}`);\n            results.push({\n                symbol: moduleMatch,\n                type: 'module'\n            });\n        }\n\n        // Check for std:label class\n        if (word === 'std:label') {\n            results.push({\n                symbol: 'std:label',\n                type: 'class',\n                documentation: 'A class definition defines a class object (see section The standard type hierarchy):\\n\\nSource: docs.python.org/3.12/reference/compound_stmts.html'\n            });\n        }\n\n        // Only return as a generic symbol if it might be a third-party import\n        // Check if the word is likely to be an imported symbol (not a local variable)\n        if (results.length === 0) {\n            // Only treat as potential imported symbol if:\n            // 1. It's in an import statement (definitely an import)\n            // 2. It's a class-like name (PascalCase) followed by () or . (likely class instantiation/access)\n            // 3. It's on the LEFT side of a dot (module/object access like \"np.array\" or \"paths.something\")\n            const isInImportContext = /\\b(import|from)\\b/.test(lineText);\n            const isLikelyClassName = /^[A-Z]/.test(word);\n            const isFollowedByDotOrParen = wordRange && (\n                text.charAt(wordRange.end.character) === '(' ||\n                text.charAt(wordRange.end.character) === '.'\n            );\n\n            // Check if this word is followed by a dot (left side of attribute access)\n            const isLeftOfDot = wordRange && text.charAt(wordRange.end.character) === '.';\n\n            // Only proceed if it looks like an imported symbol\n            if (isInImportContext || (isLikelyClassName && isFollowedByDotOrParen) || isLeftOfDot) {\n                Logger.getInstance().debug(`Word \"${word}\" might be an imported symbol (import: ${isInImportContext}, class+call: ${isLikelyClassName && isFollowedByDotOrParen}, leftOfDot: ${isLeftOfDot})`);\n                results.push({\n                    symbol: word,\n                    type: 'class'\n                });\n            } else {\n                Logger.getInstance().debug(`Word \"${word}\" doesn't look like an imported symbol, skipping`);\n                return [];\n            }\n        }\n\n        return results;\n    }\n\n    private findDottedAccess(\n        text: string,\n        wordRange: vscode.Range\n    ): { fullPath: string; baseType: string } | null {\n        const startChar = wordRange.start.character;\n\n        // Look backwards for dots\n        let dotPos = startChar - 1;\n        while (dotPos >= 0 && text[dotPos] === ' ') {\n            dotPos--;\n        }\n\n        if (dotPos >= 0 && text[dotPos] === '.') {\n            // Found a dot, now find the base object\n            let baseStart = dotPos - 1;\n            while (baseStart >= 0 && /[a-zA-Z0-9_]/.test(text[baseStart])) {\n                baseStart--;\n            }\n            baseStart++;\n\n            const baseObject = text.substring(baseStart, dotPos);\n            const method = text.substring(wordRange.start.character, wordRange.end.character);\n\n            if (baseObject && method) {\n                return {\n                    fullPath: `${baseObject}.${method}`,\n                    baseType: this.inferBaseType(baseObject)\n                };\n            }\n        }\n\n        return null;\n    }\n\n    private inferBaseType(baseObject: string): string {\n        // Enhanced heuristics to infer the type of the base object\n\n        // Check for common standard library modules\n        const stdlibModules = [\n            'os', 'sys', 'math', 'random', 'datetime', 'json', 're', 'pathlib',\n            'typing', 'collections', 'itertools', 'functools', 'csv', 'sqlite3',\n            'threading', 'multiprocessing', 'subprocess', 'argparse', 'logging',\n            'unittest', 'pickle', 'copy', 'time', 'calendar', 'decimal', 'fractions',\n            'statistics', 'heapq', 'bisect', 'array', 'enum', 'dataclasses', 'abc',\n            'contextlib', 'tempfile', 'shutil', 'glob', 'fnmatch', 'zipfile', 'tarfile',\n            'gzip', 'bz2', 'hashlib', 'hmac', 'secrets', 'uuid', 'urllib', 'http',\n            'email', 'base64', 'struct', 'codecs', 'io', 'socket', 'ssl', 'asyncio'\n        ];\n\n        if (stdlibModules.includes(baseObject)) {\n            return baseObject; // Return module name as the type\n        }\n\n        // Check for common third-party library aliases\n        const libraryAliases: { [key: string]: string } = {\n            'np': 'numpy',\n            'pd': 'pandas',\n            'plt': 'matplotlib',\n            'tf': 'tensorflow',\n            'torch': 'torch',  // torch is the module name\n            'sk': 'sklearn'\n        };\n\n        if (baseObject in libraryAliases) {\n            return libraryAliases[baseObject];\n        }\n\n        // Check if it's a known builtin type\n        if (['str', 'list', 'dict', 'set', 'tuple', 'int', 'float', 'bytes', 'bool'].includes(baseObject)) {\n            return baseObject;\n        }\n\n        // Check common patterns with more comprehensive naming conventions\n        if (baseObject.endsWith('_list') || baseObject.includes('list') ||\n            baseObject.endsWith('List') || (baseObject.endsWith('s') && !baseObject.endsWith('ss') &&\n                !baseObject.endsWith('us') && !baseObject.endsWith('is'))) {\n            return 'list';\n        }\n        if (baseObject.endsWith('_dict') || baseObject.includes('dict') ||\n            baseObject.endsWith('Dict') || baseObject.endsWith('Map') ||\n            baseObject.includes('mapping') || baseObject.includes('config')) {\n            return 'dict';\n        }\n        if (baseObject.endsWith('_str') || baseObject.includes('string') ||\n            baseObject.endsWith('String') || baseObject.endsWith('name') ||\n            baseObject.endsWith('text') || baseObject.endsWith('message')) {\n            return 'str';\n        }\n        if (baseObject.endsWith('_set') || baseObject.includes('set') || baseObject.endsWith('Set')) {\n            return 'set';\n        }\n        if (baseObject.endsWith('_int') || baseObject.includes('int') || baseObject.endsWith('Int') ||\n            baseObject.includes('count') || baseObject.includes('index') ||\n            baseObject.endsWith('_id') || baseObject.endsWith('Id')) {\n            return 'int';\n        }\n        if (baseObject.endsWith('_float') || baseObject.includes('float') || baseObject.endsWith('Float') ||\n            baseObject.includes('price') || baseObject.includes('rate') ||\n            baseObject.includes('value') || baseObject.includes('amount')) {\n            return 'float';\n        }\n\n        // Default to object (which will resolve to general methods)\n        return 'object';\n    }\n\n    private findModuleContext(\n        document: vscode.TextDocument,\n        _position: vscode.Position,\n        word: string\n    ): string | null {\n        // Look for import statements in the document to see if this word is a module\n        const text = document.getText();\n        const lines = text.split('\\n');\n\n        for (const line of lines) {\n            // Check for \"from module import ...\"\n            const fromImportMatch = line.match(/^from\\s+(\\S+)\\s+import\\s+(.+)$/);\n            if (fromImportMatch) {\n                const moduleName = fromImportMatch[1];\n\n                // Check if we're hovering over the module name itself (e.g., 'jupyter_client' in 'from jupyter_client import ...')\n                if (word === moduleName || moduleName.endsWith('.' + word)) {\n                    Logger.getInstance().debug(`Detected module name in from statement: ${moduleName}`);\n                    return moduleName;\n                }\n\n                // Otherwise, skip - don't treat \"Y\" in \"from X import Y\" as a module\n                // Let the hover provider handle it with the import tracking\n                continue;\n            }\n\n            // Check for \"import module as alias\"\n            const aliasMatch = line.match(/^import\\s+(\\S+)(?:\\s+as\\s+(\\S+))?$/);\n            if (aliasMatch) {\n                const moduleName = aliasMatch[1];\n                const alias = aliasMatch[2];\n\n                if ((alias && alias === word) || (!alias && moduleName.split('.').pop() === word)) {\n                    return moduleName;\n                }\n            }\n        }\n\n        return null;\n    }\n}\n","/**\n * Logger Service for Python Hover Extension\n *\n * @author KiidxAtlas\n * @copyright 2025 KiidxAtlas. All rights reserved.\n * @license MIT\n */\n\nimport * as vscode from 'vscode';\nimport { ConfigurationManager } from './config';\n\n/**\n * Centralized logging utility for the Python Hover extension.\n * Provides different log levels with optional debug mode controlled by user settings.\n *\n * Original implementation by KiidxAtlas - 2025\n */\nexport class Logger {\n    private static instance: Logger;\n    private config: ConfigurationManager;\n    private outputChannel: vscode.OutputChannel;\n    private readonly prefix = '[PythonHover]';\n    private readonly author = 'KiidxAtlas'; // Logger author watermark\n\n    private constructor(config: ConfigurationManager) {\n        this.config = config;\n        this.outputChannel = vscode.window.createOutputChannel('Python Hover');\n    }\n\n    public static getInstance(config?: ConfigurationManager): Logger {\n        if (!Logger.instance && config) {\n            Logger.instance = new Logger(config);\n        }\n        return Logger.instance;\n    }\n\n    /**\n     * Log debug information. Only shown when pythonHover.enableDebugLogging is true.\n     */\n    public debug(message: string, ...args: any[]): void {\n        if (this.config.getValue('enableDebugLogging', false)) {\n            const formattedMessage = `${this.prefix} [DEBUG] ${message}`;\n            this.outputChannel.appendLine(formattedMessage + (args.length > 0 ? ' ' + JSON.stringify(args) : ''));\n            console.log(formattedMessage, ...args);\n        }\n    }\n\n    /**\n     * Log informational messages. Always shown.\n     */\n    public info(message: string, ...args: any[]): void {\n        const formattedMessage = `${this.prefix} [INFO] ${message}`;\n        this.outputChannel.appendLine(formattedMessage + (args.length > 0 ? ' ' + JSON.stringify(args) : ''));\n        console.log(formattedMessage, ...args);\n    }\n\n    /**\n     * Log warning messages. Always shown.\n     */\n    public warn(message: string, ...args: any[]): void {\n        const formattedMessage = `${this.prefix} [WARN] ${message}`;\n        this.outputChannel.appendLine(formattedMessage + (args.length > 0 ? ' ' + JSON.stringify(args) : ''));\n        console.warn(formattedMessage, ...args);\n    }\n\n    /**\n     * Log error messages. Always shown.\n     */\n    public error(message: string, error?: any): void {\n        const formattedMessage = `${this.prefix} [ERROR] ${message}`;\n        if (error) {\n            this.outputChannel.appendLine(formattedMessage + ' ' + (error.stack || error.toString()));\n            console.error(formattedMessage, error);\n        } else {\n            this.outputChannel.appendLine(formattedMessage);\n            console.error(formattedMessage);\n        }\n    }\n\n    /**\n     * Update the configuration manager (useful when settings change)\n     */\n    public updateConfig(config: ConfigurationManager): void {\n        this.config = config;\n    }\n\n    /**\n     * Get the output channel (for extension disposal)\n     */\n    public getOutputChannel(): vscode.OutputChannel {\n        return this.outputChannel;\n    }\n\n    /**\n     * Show the output channel\n     */\n    public show(): void {\n        this.outputChannel.show();\n    }\n\n    /**\n     * Dispose of the logger resources\n     */\n    public dispose(): void {\n        this.outputChannel.dispose();\n    }\n}\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","import * as fs from 'fs/promises';\nimport * as path from 'path';\nimport * as vscode from 'vscode';\nimport { ConfigurationManager } from '../services/config';\nimport { Logger } from '../services/logger';\n\nexport interface PythonVersionInfo {\n    version: string;\n    pythonPath?: string;\n}\n\nexport class VersionDetector {\n    private logger: Logger;\n\n    constructor(private configManager: ConfigurationManager) {\n        this.logger = Logger.getInstance();\n    }\n\n    public async detectPythonVersion(): Promise<string> {\n        const info = await this.detectPythonVersionInfo();\n        return info.version;\n    }\n\n    public async detectPythonVersionInfo(): Promise<PythonVersionInfo> {\n        const configVersion = this.configManager.docsVersion;\n\n        // If explicitly set, use it (but still try to get Python path)\n        if (configVersion !== 'auto') {\n            const pythonPath = await this.getPythonPath();\n            return {\n                version: configVersion,\n                pythonPath: pythonPath || undefined\n            };\n        }\n\n        // Try different detection strategies\n        const pythonPath = await this.getPythonPath();\n        const version =\n            await this.getFromPythonExtension() ||\n            await this.getFromProjectFiles() ||\n            this.getDefaultVersion();\n\n        return {\n            version: this.normalizePythonVersion(version),\n            pythonPath: pythonPath || undefined\n        };\n    }\n\n    /**\n     * Get the Python executable path\n     */\n    private async getPythonPath(): Promise<string | null> {\n        try {\n            const pythonExt = vscode.extensions.getExtension('ms-python.python');\n            if (pythonExt) {\n                if (!pythonExt.isActive) {\n                    await pythonExt.activate();\n                }\n\n                const pythonPath = vscode.workspace.getConfiguration('python').get<string>('defaultInterpreterPath');\n                if (pythonPath) {\n                    return pythonPath;\n                }\n            }\n        } catch (error) {\n            this.logger.error(`Error getting Python path`, error as Error);\n        }\n        return null;\n    }\n\n    private async getFromPythonExtension(): Promise<string | null> {\n        try {\n            // Try to get the active Python interpreter from the Python extension\n            const pythonExt = vscode.extensions.getExtension('ms-python.python');\n            if (pythonExt) {\n                if (!pythonExt.isActive) {\n                    await pythonExt.activate();\n                }\n\n                // Try to get the environment path from the Python extension\n                const pythonPath = vscode.workspace.getConfiguration('python').get<string>('defaultInterpreterPath');\n\n                if (pythonPath) {\n                    this.logger.debug(`Found Python interpreter path: ${pythonPath}`);\n                    // Extract version from path (e.g., python3.11, python3.12)\n                    const versionMatch = pythonPath.match(/python(\\d+)\\.(\\d+)/i);\n                    if (versionMatch) {\n                        return `${versionMatch[1]}.${versionMatch[2]}`;\n                    }\n                }\n\n                // Try getting from the Python extension API (if available)\n                const pythonApi = pythonExt.exports;\n                if (pythonApi && pythonApi.settings) {\n                    const activeEnv = await pythonApi.settings.getExecutionDetails?.();\n                    if (activeEnv?.execCommand) {\n                        const cmd = Array.isArray(activeEnv.execCommand)\n                            ? activeEnv.execCommand[0]\n                            : activeEnv.execCommand;\n                        const versionMatch = cmd.match(/python(\\d+)\\.(\\d+)/i);\n                        if (versionMatch) {\n                            return `${versionMatch[1]}.${versionMatch[2]}`;\n                        }\n                    }\n                }\n            }\n        } catch (error) {\n            this.logger.debug(`Could not get version from Python extension`, error);\n        }\n        return null;\n    }\n\n    private async getFromProjectFiles(): Promise<string | null> {\n        const workspaceFolders = vscode.workspace.workspaceFolders;\n        if (!workspaceFolders) {\n            return null;\n        }\n\n        for (const folder of workspaceFolders) {\n            const version =\n                await this.checkPyprojectToml(folder.uri.fsPath) ||\n                await this.checkPipfile(folder.uri.fsPath) ||\n                await this.checkRuntimeTxt(folder.uri.fsPath);\n\n            if (version) {\n                return version;\n            }\n        }\n\n        return null;\n    }\n\n    private async checkPyprojectToml(workspaceRoot: string): Promise<string | null> {\n        try {\n            const pyprojectPath = path.join(workspaceRoot, 'pyproject.toml');\n            const content = await fs.readFile(pyprojectPath, 'utf-8');\n\n            // Look for python version requirements\n            const pythonVersionMatch = content.match(/python\\s*=\\s*\"([^\"]+)\"/);\n            if (pythonVersionMatch) {\n                return this.extractVersionFromRange(pythonVersionMatch[1]);\n            }\n\n            // Look for requires-python in poetry or setuptools\n            const requiresPythonMatch = content.match(/requires-python\\s*=\\s*\"([^\"]+)\"/);\n            if (requiresPythonMatch) {\n                return this.extractVersionFromRange(requiresPythonMatch[1]);\n            }\n        } catch (error) {\n            // File doesn't exist or can't be read\n        }\n        return null;\n    }\n\n    private async checkPipfile(workspaceRoot: string): Promise<string | null> {\n        try {\n            const pipfilePath = path.join(workspaceRoot, 'Pipfile');\n            const content = await fs.readFile(pipfilePath, 'utf-8');\n\n            const pythonVersionMatch = content.match(/python_version\\s*=\\s*\"([^\"]+)\"/);\n            if (pythonVersionMatch) {\n                return pythonVersionMatch[1];\n            }\n        } catch (error) {\n            // File doesn't exist or can't be read\n        }\n        return null;\n    }\n\n    private async checkRuntimeTxt(workspaceRoot: string): Promise<string | null> {\n        try {\n            const runtimePath = path.join(workspaceRoot, 'runtime.txt');\n            const content = await fs.readFile(runtimePath, 'utf-8');\n\n            const pythonVersionMatch = content.match(/python-(\\d+\\.\\d+)/);\n            if (pythonVersionMatch) {\n                return pythonVersionMatch[1];\n            }\n        } catch (error) {\n            // File doesn't exist or can't be read\n        }\n        return null;\n    }\n\n    private extractVersionFromRange(versionRange: string): string {\n        // Extract version from ranges like \">=3.8,<4.0\" or \"^3.9\"\n        const match = versionRange.match(/(\\d+\\.\\d+)/);\n        return match ? match[1] : '3.12';\n    }\n\n    private normalizePythonVersion(version: string): string {\n        // Ensure we have a major.minor format\n        const match = version.match(/^(\\d+)\\.(\\d+)/);\n        if (match) {\n            return `${match[1]}.${match[2]}`;\n        }\n        return '3.12'; // fallback\n    }\n\n    private getDefaultVersion(): string {\n        // Default to latest stable Python version\n        return '3.12';\n    }\n\n    public getSupportedVersions(): string[] {\n        return ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13'];\n    }\n\n    public isVersionSupported(version: string): boolean {\n        return this.getSupportedVersions().includes(version);\n    }\n}\n","/**\n * Python Hover Provider - Core hover implementation\n *\n * @author KiidxAtlas\n * @copyright 2025 KiidxAtlas\n * @license MIT\n *\n * This file contains the main hover provider logic for Python documentation.\n * Open source - feel free to contribute!\n */\n\nimport * as vscode from 'vscode';\nimport { ENHANCED_EXAMPLES } from '../data/enhancedExamples';\nimport { SPECIAL_METHOD_DESCRIPTIONS } from '../data/specialMethods';\nimport { STATIC_EXAMPLES } from '../data/staticExamples';\nimport { CustomDocumentationLoader, formatCustomDoc } from '../documentation/customDocumentation';\nimport { DocumentationFetcher } from '../documentation/documentationFetcher';\nimport { getImportedLibraries, getThirdPartyDoc } from '../documentation/thirdPartyLibraries';\nimport { ContextDetector } from '../resolvers/contextDetector';\nimport { MethodResolver } from '../resolvers/methodResolver';\nimport { SymbolResolver } from '../resolvers/symbolResolver';\nimport { CacheManager } from '../services/cache';\nimport { ConfigurationManager } from '../services/config';\nimport { InventoryEntry, InventoryManager } from '../services/inventory';\nimport { Logger } from '../services/logger';\nimport { DeprecationInfo, ParameterInfo, RelatedSymbol, ReturnInfo } from '../types';\nimport { HoverTheme } from './hoverTheme';\nimport { getRelatedMethodsForMethod } from './smartSuggestions';\nimport { formatComparison, formatVersionInfo, getMethodComparison, getVersionInfo } from './versionComparison';\nimport { VersionDetector } from './versionDetector';\n\n// Hover provider signature - Original work by KiidxAtlas\nconst PROVIDER_SIGNATURE = 'PythonHoverProvider-KiidxAtlas-2025';\n\nexport class PythonHoverProvider implements vscode.HoverProvider {\n    private logger: Logger;\n    private symbolResolver: SymbolResolver;\n    private documentationFetcher: DocumentationFetcher;\n    private contextDetector: ContextDetector;\n    private methodResolver: MethodResolver;\n    private customDocsLoader: CustomDocumentationLoader;\n    private pendingHoverRequests: Map<string, Promise<vscode.Hover | null>>;\n    private theme: HoverTheme;\n    private debounceTimers: Map<string, NodeJS.Timeout>;\n    private versionCache: Map<string, { version: string; timestamp: number }>;\n\n    constructor(\n        private configManager: ConfigurationManager,\n        private inventoryManager: InventoryManager,\n        private versionDetector: VersionDetector,\n        cacheManager: CacheManager\n    ) {\n        this.logger = Logger.getInstance();\n        this.symbolResolver = new SymbolResolver();\n        this.documentationFetcher = new DocumentationFetcher(cacheManager);\n        this.contextDetector = new ContextDetector();\n        this.methodResolver = new MethodResolver();\n        this.customDocsLoader = new CustomDocumentationLoader();\n        this.pendingHoverRequests = new Map();\n        this.theme = new HoverTheme();\n        this.debounceTimers = new Map();\n        this.versionCache = new Map();\n\n        // Load custom docs when initialized\n        this.loadCustomDocs();\n    }\n\n    /**\n     * Get debounce delay from configuration\n     */\n    private getDebounceDelay(): number {\n        return this.configManager.getValue<number>('debounceDelay', 150);\n    }\n\n    /**\n     * Get version cache TTL from configuration (in milliseconds)\n     */\n    private getVersionCacheTTL(): number {\n        const seconds = this.configManager.getValue<number>('versionCacheTTL', 30);\n        return seconds * 1000; // Convert to milliseconds\n    }\n\n    /**\n     * Refresh theme settings\n     */\n    public refreshTheme(): void {\n        this.theme.refresh();\n    }\n\n    /**\n     * Load custom documentation from workspace\n     */\n    private async loadCustomDocs(): Promise<void> {\n        try {\n            const folders = vscode.workspace.workspaceFolders;\n            if (folders && folders.length > 0) {\n                await this.customDocsLoader.loadCustomDocs(folders[0]);\n            }\n        } catch (error) {\n            this.logger.error('Error loading custom docs', error as Error);\n        }\n    }\n\n    /**\n     * Reload custom documentation\n     */\n    public async reloadCustomDocs(): Promise<void> {\n        await this.loadCustomDocs();\n    }\n\n    /**\n     * Get cached Python version for a document\n     * Caches version detection results to avoid repeated file system operations\n     */\n    private async getCachedPythonVersion(document: vscode.TextDocument): Promise<{ version: string; pythonPath?: string }> {\n        const workspaceFolder = vscode.workspace.getWorkspaceFolder(document.uri);\n        const cacheKey = workspaceFolder?.uri.toString() || 'default';\n\n        // Check if we have a cached version that's still valid\n        const cached = this.versionCache.get(cacheKey);\n        const now = Date.now();\n\n        if (cached && (now - cached.timestamp) < this.getVersionCacheTTL()) {\n            this.logger.debug(`Using cached Python version: ${cached.version}`);\n            return { version: cached.version, pythonPath: (cached as any).pythonPath };\n        }\n\n        // Detect version and cache it\n        this.logger.debug(`Detecting Python version for workspace: ${cacheKey}`);\n        const versionInfo = await this.versionDetector.detectPythonVersionInfo();\n\n        this.versionCache.set(cacheKey, {\n            version: versionInfo.version,\n            timestamp: now,\n            pythonPath: versionInfo.pythonPath\n        } as any);\n\n        return versionInfo;\n    }\n\n    /**\n     * Clear version cache (useful when Python environment changes)\n     */\n    public clearVersionCache(): void {\n        this.versionCache.clear();\n        this.logger.info('Version cache cleared');\n    }\n\n    public async provideHover(\n        document: vscode.TextDocument,\n        position: vscode.Position,\n        token: vscode.CancellationToken\n    ): Promise<vscode.Hover | null> {\n        // Log hover attempts at debug level\n        const wordRange = document.getWordRangeAtPosition(position);\n        const word = wordRange ? document.getText(wordRange) : '<none>';\n        this.logger.debug(`Hover triggered at line ${position.line + 1}, col ${position.character} on word: \"${word}\"`);\n\n        // Check if cancellation was requested\n        if (token.isCancellationRequested) {\n            this.logger.debug('Hover cancelled before processing');\n            return null;\n        }\n\n        // Create unique key for request deduplication\n        const requestKey = `${document.uri.toString()}:${position.line}:${position.character}`;\n\n        // Check if we already have a pending request for this position\n        if (this.pendingHoverRequests.has(requestKey)) {\n            this.logger.debug(`Reusing pending request for ${requestKey}`);\n            return this.pendingHoverRequests.get(requestKey)!;\n        }\n\n        // Debounce: Cancel any existing timer for this position\n        const existingTimer = this.debounceTimers.get(requestKey);\n        if (existingTimer) {\n            clearTimeout(existingTimer);\n        }\n\n        // Create debounced promise\n        const debouncedPromise = new Promise<vscode.Hover | null>((resolve) => {\n            const timer = setTimeout(async () => {\n                this.debounceTimers.delete(requestKey);\n\n                try {\n                    const result = await this.provideHoverImpl(document, position, token);\n                    resolve(result);\n                } catch (error) {\n                    this.logger.error('Error in hover provider', error as Error);\n                    resolve(null);\n                }\n            }, this.getDebounceDelay());\n\n            this.debounceTimers.set(requestKey, timer);\n        });\n\n        // Store it to deduplicate concurrent requests\n        this.pendingHoverRequests.set(requestKey, debouncedPromise);\n\n        try {\n            return await debouncedPromise;\n        } finally {\n            // Clean up after request completes\n            this.pendingHoverRequests.delete(requestKey);\n        }\n    }\n\n    private async provideHoverImpl(\n        document: vscode.TextDocument,\n        position: vscode.Position,\n        _token: vscode.CancellationToken\n    ): Promise<vscode.Hover | null> {\n        try {\n            this.logger.debug(`Processing hover implementation...`);\n\n            // Detect Python version for this document (with caching)\n            const versionInfo = await this.getCachedPythonVersion(document);\n            const pythonVersion = versionInfo.version;\n            const pythonPath = versionInfo.pythonPath;\n            this.logger.debug(`Python version: ${pythonVersion}${pythonPath ? ` (${pythonPath})` : ''}`);\n\n            // Resolve symbols at the current position\n            const symbols = this.symbolResolver.resolveSymbolAtPosition(document, position);\n            this.logger.debug(`Symbols resolved: ${JSON.stringify(symbols)}`);\n            if (symbols.length === 0) {\n                this.logger.debug(`No symbols found at position`);\n                return null;\n            }\n\n            // Try to resolve the first symbol\n            const primarySymbol = symbols[0];\n            this.logger.debug(`Primary symbol: ${primarySymbol.symbol} (type: ${primarySymbol.type})`);\n\n            // NEW: Check for custom documentation first\n            const customDoc = this.customDocsLoader.getCustomDoc(primarySymbol.symbol);\n            if (customDoc) {\n                this.logger.debug(`Found custom documentation for ${primarySymbol.symbol}`);\n                return this.createCustomDocHover(customDoc, primarySymbol, versionInfo);\n            }\n\n            // Get imported libraries for later use (even if auto-detect is disabled, we still need this for context)\n            const documentText = document.getText();\n            const importedLibsMap = getImportedLibraries(documentText, this.configManager);\n            const importedLibsSet = new Set(importedLibsMap.values());\n\n            // NEW: Check for third-party library documentation (if auto-detect is enabled)\n            if (this.configManager.autoDetectLibrariesEnabled) {\n                // Check if we're hovering over a module import (like 'numpy')\n                // Only show module hover if the symbol IS the library itself, not an imported symbol FROM the library\n                if (importedLibsSet.has(primarySymbol.symbol)) {\n                    // This is the library itself (e.g., hovering over 'numpy' in 'import numpy')\n                    const { version, pythonPath } = await this.getCachedPythonVersion(document);\n                    return await this.createModuleHover(primarySymbol.symbol, version, pythonPath);\n                }\n\n                // Check if this symbol was imported FROM a library (e.g., 'KernelManager' from 'jupyter_client')\n                const sourceLibrary = importedLibsMap.get(primarySymbol.symbol);\n                if (sourceLibrary && sourceLibrary !== primarySymbol.symbol) {\n                    // This symbol was imported from a library, look it up in that library's inventory\n                    this.logger.debug(`Symbol '${primarySymbol.symbol}' imported from library '${sourceLibrary}', looking up in inventory`);\n\n                    const { version, pythonPath } = await this.getCachedPythonVersion(document);\n\n                    // Try to find the full qualified name in the inventory\n                    // For example: KernelManager -> jupyter_client.manager.KernelManager\n                    const entry = await this.inventoryManager.resolveSymbol(\n                        primarySymbol.symbol,\n                        version,\n                        sourceLibrary,  // Pass the source library as context\n                        pythonPath\n                    );\n\n                    if (entry) {\n                        this.logger.debug(`Found inventory entry for ${primarySymbol.symbol} from ${sourceLibrary}: ${entry.uri}#${entry.anchor}`);\n\n                        // Fetch and create rich hover for this inventory entry\n                        const maxLines = this.configManager.maxSnippetLines;\n                        const docSnippet = await this.documentationFetcher.fetchDocumentationForSymbol(\n                            primarySymbol.symbol,\n                            entry,\n                            maxLines,\n                            sourceLibrary\n                        );\n\n                        return this.createRichHover(docSnippet, entry, primarySymbol, versionInfo);\n                    }\n\n                    this.logger.debug(`No inventory entry found for ${primarySymbol.symbol} from ${sourceLibrary}, continuing with other lookups`);\n                    // Fall through to other lookups if not found\n                }\n            } else {\n                this.logger.debug(`Auto-detect libraries is disabled, skipping third-party library auto-detection`);\n            }\n\n            // Check if this is a method call on a third-party library (e.g., np.array, pd.DataFrame)\n            // Extract just the method name if symbol contains a dot\n            let methodName = primarySymbol.symbol;\n            this.logger.debug(`Initial methodName: \"${methodName}\"`);\n            if (methodName.includes('.')) {\n                methodName = methodName.split('.').pop() || methodName;\n                this.logger.debug(`Extracted methodName: \"${methodName}\" from \"${primarySymbol.symbol}\"`);\n            }\n\n            // First check if the context is a known library (from symbol resolver)\n            if (primarySymbol.type === 'method' && primarySymbol.context) {\n                const thirdPartyDoc = getThirdPartyDoc(primarySymbol.context, methodName);\n                if (thirdPartyDoc) {\n                    this.logger.debug(`Found third-party docs for ${primarySymbol.context}.${methodName}`);\n                    return this.createThirdPartyHover(thirdPartyDoc, primarySymbol, versionInfo);\n                }\n            }\n\n            // Also check all imported libraries by their actual names\n            for (const lib of importedLibsSet) {\n                const thirdPartyDoc = getThirdPartyDoc(lib, methodName);\n                if (thirdPartyDoc) {\n                    this.logger.debug(`Found third-party docs for ${lib}.${methodName}`);\n                    return this.createThirdPartyHover(thirdPartyDoc, primarySymbol, versionInfo);\n                }\n            }\n\n            // ENHANCEMENT: Check for method context\n            if (primarySymbol.type === 'method') {\n                // If symbol contains a dot (like \"paths.jupyter_data_dir\"), check if the base is an import\n                let methodName = primarySymbol.symbol;\n                let receiverType = primarySymbol.context;\n\n                if (methodName.includes('.')) {\n                    const parts = methodName.split('.');\n                    const baseSymbol = parts[0]; // e.g., \"paths\" from \"paths.jupyter_data_dir\"\n                    methodName = parts[parts.length - 1]; // Get just \"jupyter_data_dir\"\n                    this.logger.debug(`Extracted method name: ${methodName}`);\n                    this.logger.debug(`Checking if base symbol \"${baseSymbol}\" is an imported module...`);\n\n                    // Check if the base symbol is an imported third-party module\n                    if (importedLibsMap.has(baseSymbol)) {\n                        const library = importedLibsMap.get(baseSymbol);\n                        this.logger.debug(`Base symbol \"${baseSymbol}\" is imported from: ${library}`);\n                        receiverType = library; // Use the actual library name\n                        primarySymbol.context = library; // Update the context immediately\n                        primarySymbol.symbol = methodName; // Update symbol to just the method name\n                    }\n                }\n\n                // Detect the method's object type for better context if not already provided\n                // Skip if we already determined it's from an imported library\n                if (!receiverType && !importedLibsMap.has(methodName.split('.')[0])) {\n                    receiverType = this.contextDetector.detectMethodContext(document, position, methodName);\n                }\n\n                if (receiverType) {\n                    this.logger.debug(`Detected method context: ${receiverType}.${methodName}`);\n\n                    // Only resolve method info if we haven't already set context from imports\n                    if (!primarySymbol.context) {\n                        // Resolve method with context\n                        const methodInfo = this.methodResolver.resolveMethodInfo(document, position, methodName, receiverType);\n                        if (methodInfo) {\n                            primarySymbol.context = receiverType;\n                            // Store as \"type.method\" for display, but we'll look up just the method\n                            primarySymbol.symbol = methodName;\n                        } else {\n                            primarySymbol.symbol = methodName;\n                        }\n                    }\n                } else {\n                    // No context found, just use the method name\n                    if (!primarySymbol.context) {\n                        primarySymbol.symbol = methodName;\n                    }\n                }\n            }\n\n            // CRITICAL FIX: Update symbol to use extracted method name for documentation lookups\n            // The initial extraction at line 283-287 extracted the method name (e.g., \"upper\" from \"text.upper\")\n            // but primarySymbol.symbol may still contain the qualified name. We need to ensure\n            // it's updated for MAP lookups to work correctly.\n            if (primarySymbol.type === 'method' && methodName !== primarySymbol.symbol && methodName.length > 0) {\n                this.logger.debug(`Updating primarySymbol.symbol from \"${primarySymbol.symbol}\" to \"${methodName}\" for MAP lookup`);\n                primarySymbol.symbol = methodName;\n            }\n\n            // ENHANCEMENT: Check for special dunder methods\n            if (primarySymbol.symbol.startsWith('__') && primarySymbol.symbol.endsWith('__')) {\n                this.logger.debug(`Detected special method: ${primarySymbol.symbol}`);\n\n                // Log available special method descriptions for debugging\n                this.logger.debug(`Available special method descriptions: ${Object.keys(SPECIAL_METHOD_DESCRIPTIONS).join(', ')}`);\n\n                // Extract pure dunder method name if it's part of a qualified name (e.g., \"MyClass.__init__\")\n                let dunderMethodName = primarySymbol.symbol;\n                if (dunderMethodName.includes('.')) {\n                    dunderMethodName = dunderMethodName.split('.').pop() || dunderMethodName;\n                    this.logger.debug(`Extracted dunder method name: ${dunderMethodName}`);\n                }\n\n                // Use SPECIAL_METHOD_DESCRIPTIONS directly\n                const description = SPECIAL_METHOD_DESCRIPTIONS[dunderMethodName];\n                this.logger.debug(`Found description: ${description || 'none'}`);\n\n                if (description) {\n                    // Create custom hover for dunder methods\n                    const dunderInfo = { description };\n                    return this.createDunderMethodHover(dunderMethodName, dunderInfo, versionInfo);\n                }\n            }\n\n            // Build the symbol to look up in inventory\n            let lookupSymbol = primarySymbol.symbol;\n            if (primarySymbol.type === 'method' && primarySymbol.context) {\n                // For methods, look up as \"type.method\" (e.g., \"list.append\")\n                // But don't duplicate if the symbol already includes the context (e.g., \"torch.zeros\")\n                if (!primarySymbol.symbol.startsWith(primarySymbol.context + '.')) {\n                    lookupSymbol = `${primarySymbol.context}.${primarySymbol.symbol}`;\n                }\n                this.logger.debug(`Looking up method as: ${lookupSymbol}`);\n            }\n\n            const inventoryEntry = await this.inventoryManager.resolveSymbol(\n                lookupSymbol,\n                pythonVersion,\n                primarySymbol.context, // Pass context for third-party library support\n                pythonPath // Pass Python path for version-aware inventory\n            );\n\n            this.logger.debug(`Inventory entry result: ${inventoryEntry ? `${inventoryEntry.name} -> ${inventoryEntry.uri}#${inventoryEntry.anchor}` : 'not found'}`);\n\n            // Check for f-strings\n            if (primarySymbol.type === 'f-string') {\n                this.logger.debug(`Handling f-string: ${primarySymbol.symbol}`);\n                // Create a themed hover for f-strings\n                return this.createFStringHover(versionInfo);\n            }\n\n            // Handle operators\n            if (primarySymbol.type === 'operator') {\n                this.logger.debug(`Handling operator: ${primarySymbol.symbol}`);\n                return this.createOperatorHover(primarySymbol.symbol, versionInfo);\n            }\n\n            // ENHANCEMENT: Handle language keywords with enhanced examples\n            if (primarySymbol.type === 'keyword' && ENHANCED_EXAMPLES[primarySymbol.symbol]) {\n                this.logger.debug(`Found enhanced example for keyword: ${primarySymbol.symbol}`);\n                return this.createEnhancedExampleHover(primarySymbol.symbol, versionInfo);\n            }\n\n            // Fetch documentation snippet with adjusted limits for compound statements\n            let maxLines = this.configManager.maxSnippetLines;\n            // For compound statement keywords, allow more lines to show complete context\n            if (['else', 'elif', 'finally', 'except', 'with'].includes(primarySymbol.symbol)) {\n                maxLines = Math.max(40, maxLines); // At least 40 lines for compound statements\n            }\n\n            // Use the new unified documentation fetcher that prioritizes direct URL mappings\n            const docSnippet = await this.documentationFetcher.fetchDocumentationForSymbol(\n                primarySymbol.symbol,\n                inventoryEntry || undefined,\n                maxLines,\n                primarySymbol.context // Pass context for better examples\n            );\n\n            this.logger.debug(`Generated documentation URL: ${docSnippet.url}`);\n\n            return this.createRichHover(docSnippet, inventoryEntry, primarySymbol, versionInfo);\n\n        } catch (error: any) {\n            // Better error handling with user feedback\n            this.logger.error('Error in hover provider', error as Error);\n\n            // Check if it's a network error\n            if (error.code === 'ENOTFOUND' || error.code === 'ETIMEDOUT' || error.code === 'ECONNREFUSED') {\n                return this.createNetworkErrorHover();\n            }\n\n            // For other errors, fail silently\n            return null;\n        }\n    }\n\n    /**\n     * Create a hover for network errors\n     */\n    private createNetworkErrorHover(): vscode.Hover {\n        const md = this.theme.createMarkdown();\n\n        // Header\n        md.appendMarkdown('## $(error) Network Error\\n\\n');\n\n        // Warning message\n        md.appendMarkdown(this.theme.formatWarning('Could not fetch documentation. Please check your internet connection.'));\n\n        // Helpful tip\n        md.appendMarkdown(this.theme.formatTip('You can clear the cache and retry, or check your network settings.'));\n\n        md.appendMarkdown(this.theme.formatDivider());\n\n        // Action links\n        const links = [\n            { text: 'Clear Cache', command: 'command:pythonHover.clearCache', icon: 'trash' },\n            { text: 'Check Settings', command: 'command:workbench.action.openSettings?[\"pythonHover\"]', icon: 'gear' }\n        ];\n        md.appendMarkdown(this.theme.formatActionLinks(links));\n\n        return new vscode.Hover(md);\n    }\n\n    /**\n     * Dispose resources\n     */\n    public dispose(): void {\n        // Clear all pending timers\n        for (const timer of this.debounceTimers.values()) {\n            clearTimeout(timer);\n        }\n        this.debounceTimers.clear();\n\n        // Clear pending requests\n        this.pendingHoverRequests.clear();\n\n        // Clear caches\n        this.versionCache.clear();\n\n        this.logger.info('Hover provider disposed');\n    }\n\n    private createCustomDocHover(customDoc: any, _symbolInfo: { symbol: string; type: string }, pythonVersionInfo?: { version: string; pythonPath?: string }): vscode.Hover {\n        const md = new vscode.MarkdownString();\n        md.isTrusted = true;\n        md.supportHtml = true;\n        md.supportThemeIcons = true;\n\n        // Format custom documentation\n        md.appendMarkdown(formatCustomDoc(customDoc));\n\n        // Add Python version at the bottom\n        this.appendVersionFooter(md, pythonVersionInfo);\n\n        return new vscode.Hover(md);\n    }\n\n    private async createModuleHover(moduleName: string, pythonVersion: string, pythonPath?: string): Promise<vscode.Hover> {\n        const md = this.theme.createMarkdown();\n\n        // Header\n        md.appendMarkdown(this.theme.formatHeader(`${moduleName} module`, 'module'));\n\n        // Try to fetch module documentation from inventory\n        const entry = await this.inventoryManager.resolveSymbol(\n            moduleName,\n            pythonVersion,\n            moduleName,  // Use the module name as context to search in its own inventory\n            pythonPath\n        );\n\n        if (entry) {\n            this.logger.debug(`Found inventory entry for module ${moduleName}: ${entry.uri}#${entry.anchor}`);\n\n            // Fetch documentation snippet\n            const maxLines = this.configManager.maxSnippetLines;\n            const docSnippet = await this.documentationFetcher.fetchDocumentationForSymbol(\n                moduleName,\n                entry,\n                maxLines,\n                moduleName\n            );\n\n            if (docSnippet) {\n                // Add badge for third-party library\n                const badges = [{ text: 'Third-party Library', type: 'info' as const }];\n                md.appendMarkdown(this.theme.formatBadgeGroup(badges));\n\n                // Add description from documentation\n                if (docSnippet.content) {\n                    md.appendMarkdown(this.theme.formatContent(docSnippet.content));\n                }\n\n                // Add helpful tip\n                md.appendMarkdown(this.theme.formatTip(`Hover over functions from \\`${moduleName}\\` for detailed help`));\n\n                md.appendMarkdown(this.theme.formatDivider());\n\n                // Add documentation link\n                const fullUrl = `${entry.uri}#${entry.anchor}`;\n                const links = [\n                    { text: 'View Documentation', url: fullUrl, icon: 'book' }\n                ];\n                md.appendMarkdown(this.theme.formatActionLinks(links));\n\n                return new vscode.Hover(md);\n            }\n        }\n\n        // Fallback: Use hardcoded module info database for common libraries\n        const moduleInfo: { [key: string]: { description: string; docs: string; badge?: string } } = {\n            'numpy': {\n                description: 'Fundamental package for scientific computing with Python',\n                docs: 'https://numpy.org/doc/',\n                badge: 'Scientific Computing'\n            },\n            'pandas': {\n                description: 'Powerful data analysis and manipulation library',\n                docs: 'https://pandas.pydata.org/docs/',\n                badge: 'Data Analysis'\n            },\n            'flask': {\n                description: 'Lightweight WSGI web application framework',\n                docs: 'https://flask.palletsprojects.com/',\n                badge: 'Web Framework'\n            },\n            'django': {\n                description: 'High-level Python web framework',\n                docs: 'https://docs.djangoproject.com/',\n                badge: 'Web Framework'\n            },\n            'requests': {\n                description: 'Elegant and simple HTTP library for Python',\n                docs: 'https://requests.readthedocs.io/',\n                badge: 'HTTP Client'\n            }\n        };\n\n        const info = moduleInfo[moduleName.toLowerCase()];\n        if (info) {\n            // Badge\n            if (info.badge) {\n                const badges = [{ text: info.badge, type: 'info' as const }];\n                md.appendMarkdown(this.theme.formatBadgeGroup(badges));\n            }\n\n            // Description\n            md.appendMarkdown(this.theme.formatContent(info.description));\n\n            // Helpful tip\n            md.appendMarkdown(this.theme.formatTip(`Hover over functions like \\`${moduleName}.function()\\` for detailed help`));\n\n            md.appendMarkdown(this.theme.formatDivider());\n\n            // Action links\n            const links = [\n                { text: 'Official Documentation', url: info.docs, icon: 'book' }\n            ];\n            md.appendMarkdown(this.theme.formatActionLinks(links));\n        } else {\n            // Unknown third-party library\n            const badges = [{ text: 'Third-party Library', type: 'info' as const }];\n            md.appendMarkdown(this.theme.formatBadgeGroup(badges));\n\n            md.appendMarkdown(this.theme.formatTip('Hover over functions for detailed help'));\n        }\n\n        // Add Python version at the bottom\n        this.appendVersionFooter(md, { version: pythonVersion, pythonPath });\n\n        return new vscode.Hover(md);\n    }\n\n    private createThirdPartyHover(libDoc: any, symbolInfo: { symbol: string; type: string }, pythonVersionInfo?: { version: string; pythonPath?: string }): vscode.Hover {\n        const md = this.theme.createMarkdown();\n\n        // Header with theme - use 'function' for third-party methods\n        const displayType = symbolInfo.type === 'method' ? 'function' : symbolInfo.type;\n        md.appendMarkdown(this.theme.formatHeader(libDoc.name, displayType));\n\n        // Description with proper spacing\n        md.appendMarkdown(this.theme.formatContent(libDoc.description));\n\n        // Example section\n        if (libDoc.example) {\n            md.appendMarkdown(this.theme.formatSectionHeader('Example'));\n            md.appendMarkdown(this.theme.formatCodeBlock(libDoc.example));\n        }\n\n        // Add helpful tip\n        if (libDoc.version) {\n            md.appendMarkdown(this.theme.formatNote(`Available since version ${libDoc.version}`));\n        }\n\n        // Action links\n        if (libDoc.url) {\n            md.appendMarkdown(this.theme.formatDivider());\n            const links = [\n                { text: 'Official Documentation', url: libDoc.url, icon: 'book' }\n            ];\n            md.appendMarkdown(this.theme.formatActionLinks(links));\n        }\n\n        // Add Python version at the bottom\n        this.appendVersionFooter(md, pythonVersionInfo);\n\n        return new vscode.Hover(md);\n    }\n\n    /**\n     * Create a hover for special dunder methods\n     */\n    private createDunderMethodHover(methodName: string, dunderInfo: { description: string; example?: string }, pythonVersionInfo?: { version: string; pythonPath?: string }): vscode.Hover {\n        const md = this.theme.createMarkdown();\n\n        // Header for special method\n        md.appendMarkdown(this.theme.formatHeader(`${methodName} — Special Method`, 'method'));\n\n        // Badge for special method\n        const badges = [\n            { text: 'Special Method', type: 'info' as const },\n            { text: 'Dunder', type: 'success' as const }\n        ];\n        md.appendMarkdown(this.theme.formatBadgeGroup(badges));\n\n        md.appendMarkdown(this.theme.formatDivider());\n\n        // Description\n        md.appendMarkdown(this.theme.formatContent(dunderInfo.description));\n\n        // Example code if available\n        if (ENHANCED_EXAMPLES[methodName]) {\n            md.appendMarkdown(this.theme.formatSectionHeader('Example'));\n            md.appendMarkdown(ENHANCED_EXAMPLES[methodName].content);\n            md.appendMarkdown('\\n\\n');\n        } else if (dunderInfo.example) {\n            md.appendMarkdown(this.theme.formatSectionHeader('Example'));\n            md.appendMarkdown(this.theme.formatCodeBlock(dunderInfo.example));\n        }\n\n        // Informative note\n        md.appendMarkdown(this.theme.formatNote('Special methods are invoked implicitly by Python syntax and built-in operations.'));\n\n        md.appendMarkdown(this.theme.formatDivider());\n\n        // Action links\n        const docUrl = \"https://docs.python.org/3/reference/datamodel.html#special-method-names\";\n        const encodedDocUrl = encodeURIComponent(JSON.stringify([docUrl]));\n        const links = [\n            { text: 'Open Documentation', command: `command:pythonHover.openDocs?${encodedDocUrl}`, icon: 'book' },\n            { text: 'Copy URL', command: `command:pythonHover.copyUrl?${encodedDocUrl}`, icon: 'copy' }\n        ];\n        md.appendMarkdown(this.theme.formatActionLinks(links));\n\n        // Add Python version at the bottom\n        this.appendVersionFooter(md, pythonVersionInfo);\n\n        return new vscode.Hover(md);\n    }\n\n    /**\n     * Create a hover with enhanced examples\n     */\n    private createEnhancedExampleHover(symbolName: string, pythonVersionInfo?: { version: string; pythonPath?: string }): vscode.Hover {\n        const md = this.theme.createMarkdown();\n\n        // Determine type\n        const displayType = symbolName === 'class' ? 'Class Definition' : 'Keyword';\n\n        // Header\n        md.appendMarkdown(this.theme.formatHeader(`${symbolName}`, 'keyword'));\n\n        // Badge\n        const badges = [{ text: displayType, type: 'info' as const }];\n        md.appendMarkdown(this.theme.formatBadgeGroup(badges));\n\n        md.appendMarkdown(this.theme.formatDivider());\n\n        // Description if available\n        if (ENHANCED_EXAMPLES[symbolName].description) {\n            md.appendMarkdown(this.theme.formatContent(ENHANCED_EXAMPLES[symbolName].description));\n        }\n\n        // Rich example content\n        md.appendMarkdown(ENHANCED_EXAMPLES[symbolName].content);\n        md.appendMarkdown('\\n\\n');\n\n        md.appendMarkdown(this.theme.formatDivider());\n\n        // Link to official docs\n        const docUrl = `https://docs.python.org/3/reference/compound_stmts.html#${symbolName}`;\n        const links = [\n            { text: 'View in Python documentation', url: docUrl, icon: 'book' }\n        ];\n        md.appendMarkdown(this.theme.formatActionLinks(links));\n\n        // Add Python version at the bottom\n        this.appendVersionFooter(md, pythonVersionInfo);\n\n        return new vscode.Hover(md);\n    }\n\n    private createRichHover(\n        docSnippet: any,\n        inventoryEntry: InventoryEntry | null,\n        symbolInfo: { symbol: string; type: string; context?: string },\n        pythonVersionInfo?: { version: string; pythonPath?: string }\n    ): vscode.Hover {\n        const md = this.theme.createMarkdown();\n        const uiConfig = this.configManager.getConfig().ui;\n\n        // Determine display name - for methods with context, show \"type.method\"\n        let displayName: string;\n        if (symbolInfo.type === 'method' && symbolInfo.context) {\n            displayName = `${symbolInfo.context}.${symbolInfo.symbol}`;\n        } else {\n            displayName = inventoryEntry?.name || symbolInfo.symbol;\n        }\n\n        const bareSymbol = symbolInfo.symbol.split('.').pop() || symbolInfo.symbol;\n\n        // Header with theme\n        md.appendMarkdown(this.theme.formatHeader(displayName, symbolInfo.type));\n\n        // Type/role badges\n        const badges = [];\n        if (inventoryEntry) {\n            badges.push({ text: `${inventoryEntry.domain}:${inventoryEntry.role}`, type: 'info' as const });\n        } else {\n            badges.push({ text: symbolInfo.type, type: 'info' as const });\n        }\n        md.appendMarkdown(this.theme.formatBadgeGroup(badges));\n\n        // NEW: Check for deprecation and show warning prominently\n        if (uiConfig.showDeprecationWarnings && docSnippet && docSnippet.content) {\n            const deprecation = this.isDeprecated(docSnippet.content);\n            if (deprecation) {\n                md.appendMarkdown(this.theme.formatDeprecation(\n                    deprecation.version || '',\n                    deprecation.message,\n                    deprecation.alternative\n                ));\n            }\n        }\n\n        // NEW: Add quick actions bar at top\n        if (uiConfig.showQuickActions && (docSnippet || inventoryEntry)) {\n            const docUrl = inventoryEntry\n                ? `${inventoryEntry.uri}#${inventoryEntry.anchor}`\n                : (docSnippet?.url?.startsWith('http')\n                    ? docSnippet.url\n                    : `https://docs.python.org/3/${docSnippet?.url || ''}`);\n\n            if (docUrl) {\n                const encodedUrl = encodeURIComponent(JSON.stringify([docUrl]));\n                const actions = [\n                    { text: 'Docs', icon: 'book', command: `command:pythonHover.openDocs?${encodedUrl}` },\n                    { text: 'Copy URL', icon: 'link', command: `command:pythonHover.copyUrl?${encodedUrl}` }\n                ];\n                md.appendMarkdown(this.theme.formatQuickActions(actions));\n            }\n        }\n\n        md.appendMarkdown(this.theme.formatDivider());\n\n        // NEW: Extract and show signature prominently\n        if (uiConfig.showSignatures && docSnippet && docSnippet.content) {\n            const signature = this.extractSignature(docSnippet.content, bareSymbol);\n            if (signature) {\n                md.appendMarkdown(this.theme.formatSignatureBox(signature, bareSymbol));\n            }\n        }\n\n        // NEW: Extract and show parameters as table\n        if (uiConfig.showParameterTables && docSnippet && docSnippet.content) {\n            const params = this.extractParameters(docSnippet.content);\n            if (params.length > 0) {\n                md.appendMarkdown(this.theme.formatSectionHeader('Parameters'));\n                md.appendMarkdown(this.theme.formatParameterTable(params));\n            }\n        }\n\n        // NEW: Extract and show return type\n        if (uiConfig.showReturnTypes && docSnippet && docSnippet.content) {\n            const returnInfo = this.extractReturnInfo(docSnippet.content);\n            if (returnInfo) {\n                md.appendMarkdown(this.theme.formatReturnType(returnInfo.type, returnInfo.description));\n            }\n        }\n\n        // Description section (with smart truncation)\n        if (docSnippet && docSnippet.content && docSnippet.content.trim()) {\n            const content = docSnippet.content.trim();\n\n            // NEW: Detect if we got a generic/index page instead of specific documentation\n            const isGenericPage = (\n                content.includes('Built-in Functions¶') ||\n                content.includes('are listed here in alphabetical order') ||\n                (content.length > 100 && !content.toLowerCase().includes(bareSymbol.toLowerCase()))\n            );\n\n            if (isGenericPage) {\n                // Show a helpful message instead of the generic page\n                md.appendMarkdown(this.theme.formatWarning('Specific documentation not found. See full documentation for details.'));\n\n                if (docSnippet.url) {\n                    md.appendMarkdown(this.theme.formatContent(`\\n\\nDocumentation available at [docs.python.org](${docSnippet.url}).`));\n                }\n            } else {\n                // Show the actual documentation\n                const maxLength = uiConfig.maxContentLength || 800;\n                const summary = this.extractBestParagraph(content);\n\n                if (summary) {\n                    if (summary.length > maxLength) {\n                        const docUrl = inventoryEntry\n                            ? `${inventoryEntry.uri}#${inventoryEntry.anchor}`\n                            : docSnippet.url;\n                        const encodedUrl = docUrl ? encodeURIComponent(JSON.stringify([docUrl])) : undefined;\n                        const readMoreCmd = encodedUrl ? `command:pythonHover.openDocs?${encodedUrl}` : undefined;\n                        md.appendMarkdown(this.theme.formatContentWithTruncation(summary, maxLength, readMoreCmd));\n                    } else {\n                        md.appendMarkdown(this.theme.formatContent(summary));\n                    }\n                } else {\n                    // If extractBestParagraph returns nothing, show the raw content with truncation\n                    if (content.length > maxLength) {\n                        const docUrl = inventoryEntry\n                            ? `${inventoryEntry.uri}#${inventoryEntry.anchor}`\n                            : docSnippet.url;\n                        const encodedUrl = docUrl ? encodeURIComponent(JSON.stringify([docUrl])) : undefined;\n                        const readMoreCmd = encodedUrl ? `command:pythonHover.openDocs?${encodedUrl}` : undefined;\n                        md.appendMarkdown(this.theme.formatContentWithTruncation(content, maxLength, readMoreCmd));\n                    } else {\n                        md.appendMarkdown(this.theme.formatContent(content));\n                    }\n                }\n            }\n        } else if (docSnippet && docSnippet.url) {\n            // Fallback message when content extraction fails\n            md.appendMarkdown(this.theme.formatContent(`Documentation available at [docs.python.org](${docSnippet.url}). Click **Open Documentation** below for full details.`));\n        }\n\n        // ENHANCEMENT: Add examples with better formatting\n        this.appendExamplesSection(md, bareSymbol, symbolInfo);\n\n        // Add version information if available\n        this.appendVersionInfo(md, bareSymbol);\n\n        // Add method comparison if available\n        this.appendMethodComparison(md, bareSymbol);\n\n        // NEW: Add \"See Also\" section with related symbols\n        if (uiConfig.showSeeAlso) {\n            const related = this.findRelatedSymbols(bareSymbol, symbolInfo.context);\n            if (related.length > 0) {\n                md.appendMarkdown(this.theme.formatSeeAlso(related));\n            }\n        }\n\n        // Add related methods (smart suggestions) for method calls (fallback if See Also didn't cover it)\n        if (symbolInfo.type === 'method' && symbolInfo.context && !uiConfig.showSeeAlso) {\n            this.appendRelatedMethodsSection(md, symbolInfo.context, bareSymbol);\n        }\n\n        // Source line with clickable action links (only if quick actions not shown at top)\n        if (!uiConfig.showQuickActions) {\n            this.appendActionLinks(md, docSnippet, inventoryEntry);\n        }\n\n        // NEW: Add keyboard hints at bottom\n        if (uiConfig.showKeyboardHints) {\n            const shortcuts = [\n                { keys: 'F12', description: 'Go to definition' },\n                { keys: 'Ctrl+Space', description: 'IntelliSense' }\n            ];\n            md.appendMarkdown(this.theme.formatKeyboardHint(shortcuts));\n        }\n\n        // Add Python version at the bottom\n        this.appendVersionFooter(md, pythonVersionInfo);\n\n        return new vscode.Hover(md);\n    }\n\n    /**\n     * Create a hover for f-strings\n     */\n    private async createFStringHover(pythonVersionInfo?: { version: string; pythonPath?: string }): Promise<vscode.Hover> {\n        const md = this.theme.createMarkdown();\n\n        // Header\n        md.appendMarkdown(this.theme.formatHeader('f-string — Formatted String Literal', 'keyword'));\n\n        // Badge\n        const badges = [{ text: 'String Formatting', type: 'info' as const }];\n        md.appendMarkdown(this.theme.formatBadgeGroup(badges));\n\n        md.appendMarkdown(this.theme.formatDivider());\n\n        // Fetch documentation content\n        const docSnippet = await this.documentationFetcher.fetchDocumentationForSymbol(\n            'f-string',\n            undefined,\n            this.configManager.maxSnippetLines\n        );\n\n        // Description\n        if (docSnippet && docSnippet.content) {\n            md.appendMarkdown(this.theme.formatContent(docSnippet.content));\n        }\n\n        // Examples section (f-strings should have examples in STATIC_EXAMPLES or ENHANCED_EXAMPLES)\n        if (STATIC_EXAMPLES['f-string']) {\n            md.appendMarkdown(this.theme.formatSectionHeader('Examples'));\n            const examplesText = STATIC_EXAMPLES['f-string'].examples.join('\\n');\n            md.appendMarkdown(this.theme.formatCodeBlock(examplesText));\n        }\n\n        md.appendMarkdown(this.theme.formatDivider());\n\n        // Action links\n        const docUrl = docSnippet?.url || 'https://docs.python.org/3/reference/lexical_analysis.html#f-strings';\n        const fullUrl = docUrl.startsWith('http') ? docUrl : `https://docs.python.org/3/${docUrl}`;\n        const encodedUrl = encodeURIComponent(JSON.stringify([fullUrl]));\n        const links = [\n            { text: 'View Documentation', command: `command:pythonHover.openDocs?${encodedUrl}`, icon: 'book' },\n            { text: 'Copy URL', command: `command:pythonHover.copyUrl?${encodedUrl}`, icon: 'copy' }\n        ];\n        md.appendMarkdown(this.theme.formatActionLinks(links));\n\n        // Version footer\n        this.appendVersionFooter(md, pythonVersionInfo);\n\n        return new vscode.Hover(md);\n    }\n\n    /**\n     * Create a hover for operators\n     */\n    private async createOperatorHover(operator: string, pythonVersionInfo?: { version: string; pythonPath?: string }): Promise<vscode.Hover> {\n        const md = this.theme.createMarkdown();\n\n        // Header\n        md.appendMarkdown(this.theme.formatHeader(`\\`${operator}\\` — Python Operator`, 'operator'));\n\n        // Badge\n        const badges = [{ text: 'Operator', type: 'info' as const }];\n        md.appendMarkdown(this.theme.formatBadgeGroup(badges));\n\n        md.appendMarkdown(this.theme.formatDivider());\n\n        // Fetch documentation content\n        const operatorDocumentation = await (this.documentationFetcher as any).fetchOperatorDocumentation(operator);\n\n        // Description\n        if (operatorDocumentation && operatorDocumentation.content) {\n            md.appendMarkdown(this.theme.formatContent(operatorDocumentation.content));\n        }\n\n        // Examples section\n        if (STATIC_EXAMPLES[operator]) {\n            md.appendMarkdown(this.theme.formatSectionHeader('Examples'));\n            const examplesText = STATIC_EXAMPLES[operator].examples.join('\\n');\n            md.appendMarkdown(this.theme.formatCodeBlock(examplesText));\n        }\n\n        md.appendMarkdown(this.theme.formatDivider());\n\n        // Action links\n        const docUrl = operatorDocumentation?.url || 'https://docs.python.org/3/reference/expressions.html#operators';\n        const fullUrl = docUrl.startsWith('http') ? docUrl : `https://docs.python.org/3/${docUrl}`;\n        const encodedUrl = encodeURIComponent(JSON.stringify([fullUrl]));\n        const links = [\n            { text: 'View Documentation', command: `command:pythonHover.openDocs?${encodedUrl}`, icon: 'book' },\n            { text: 'Copy URL', command: `command:pythonHover.copyUrl?${encodedUrl}`, icon: 'copy' }\n        ];\n        md.appendMarkdown(this.theme.formatActionLinks(links));\n\n        // Version footer\n        this.appendVersionFooter(md, pythonVersionInfo);\n\n        return new vscode.Hover(md);\n    }\n\n    /**\n     * Extract the best paragraph from content\n     */\n    private extractBestParagraph(content: string): string {\n        const paragraphs = content\n            .split(/\\n\\s*\\n/)\n            .map((p: string) => p.trim())\n            .filter((p: string) => p.length > 0);\n\n        const goodParagraphs: string[] = [];\n\n        for (const p of paragraphs) {\n            // Skip headers (except the first one if it's the function signature)\n            if (/^#{1,6}\\s+/.test(p) && goodParagraphs.length > 0) continue;\n            // Skip standalone links\n            if (/^\\[.*\\]\\(.*\\)$/.test(p)) continue;\n\n            // Include paragraphs with substantial text content\n            if (/[A-Za-z]/.test(p) && p.length > 10) {\n                goodParagraphs.push(p);\n\n                // Collect up to 3-4 paragraphs or ~400 characters, whichever comes first\n                const totalLength = goodParagraphs.join('\\n\\n').length;\n                if (goodParagraphs.length >= 3 || totalLength >= 400) {\n                    break;\n                }\n            }\n        }\n\n        if (goodParagraphs.length > 0) {\n            return goodParagraphs.join('\\n\\n');\n        }\n\n        return paragraphs[0] || '';\n    }\n\n    /**\n     * Append examples section with enhanced formatting\n     */\n    private appendExamplesSection(\n        md: vscode.MarkdownString,\n        bareSymbol: string,\n        symbolInfo: { symbol: string; type: string; context?: string }\n    ): void {\n        // Check for enhanced examples\n        if (ENHANCED_EXAMPLES[bareSymbol]) {\n            md.appendMarkdown(this.theme.formatSectionHeader('Examples'));\n            md.appendMarkdown(ENHANCED_EXAMPLES[bareSymbol].content);\n            md.appendMarkdown('\\n\\n');\n        }\n        // Check for static examples\n        else if (STATIC_EXAMPLES[bareSymbol]) {\n            md.appendMarkdown(this.theme.formatSectionHeader('Examples'));\n            const examplesText = STATIC_EXAMPLES[bareSymbol].examples.join('\\n');\n            md.appendMarkdown(this.theme.formatCodeBlock(examplesText));\n        }\n        // Check for method-specific examples\n        else if (symbolInfo.type === 'method' && symbolInfo.context) {\n            const methodKey = `${symbolInfo.context}.${bareSymbol}`;\n            if (ENHANCED_EXAMPLES[methodKey]) {\n                md.appendMarkdown(this.theme.formatSectionHeader('Examples'));\n                md.appendMarkdown(ENHANCED_EXAMPLES[methodKey].content);\n                md.appendMarkdown('\\n\\n');\n            }\n        }\n    }\n\n    /**\n     * Append related methods section\n     */\n    private appendRelatedMethodsSection(\n        md: vscode.MarkdownString,\n        context: string,\n        methodName: string\n    ): void {\n        const config = vscode.workspace.getConfiguration('pythonHover');\n        if (!config.get('showRelatedMethods', true)) {\n            return;\n        }\n\n        const relatedMethods = getRelatedMethodsForMethod(context, methodName);\n\n        if (relatedMethods.length > 0) {\n            md.appendMarkdown(this.theme.formatSectionHeader('Related Methods'));\n            const methodsToShow = relatedMethods.slice(0, 5);\n\n            for (const method of methodsToShow) {\n                md.appendMarkdown(this.theme.formatListItem(`\\`${context}.${method.name}()\\` — ${method.description}`));\n            }\n            md.appendMarkdown('\\n');\n        }\n    }\n\n    /**\n     * Append action links with proper command URIs for guaranteed clickability\n     */\n    private appendActionLinks(\n        md: vscode.MarkdownString,\n        docSnippet: any,\n        inventoryEntry: InventoryEntry | null\n    ): void {\n        let docUrl: string | null = null;\n\n        // Determine documentation URL\n        if (inventoryEntry) {\n            docUrl = inventoryEntry.anchor\n                ? `${inventoryEntry.uri}#${inventoryEntry.anchor}`\n                : inventoryEntry.uri;\n        } else if (docSnippet && docSnippet.url) {\n            docUrl = docSnippet.url.startsWith('http')\n                ? docSnippet.url\n                : `https://docs.python.org/3/${docSnippet.url}`;\n        }\n\n        if (docUrl) {\n            const encodedUrl = encodeURIComponent(JSON.stringify([docUrl]));\n            const displayUrl = docUrl.replace(/^https?:\\/\\//, '');\n\n            md.appendMarkdown(this.theme.formatDivider());\n\n            // Source line\n            md.appendMarkdown(`**Source:** ${this.theme.formatLink(displayUrl, docUrl)}\\n\\n`);\n\n            // Action links with enhanced formatting\n            const links = [\n                { text: 'Open Documentation', command: `command:pythonHover.openDocs?${encodedUrl}`, icon: 'book' },\n                { text: 'Copy URL', command: `command:pythonHover.copyUrl?${encodedUrl}`, icon: 'copy' }\n            ];\n            md.appendMarkdown(this.theme.formatActionLinks(links));\n        }\n    }\n\n    /**\n     * Append version information if available\n     */\n    private appendVersionInfo(md: vscode.MarkdownString, symbolName: string): void {\n        const config = vscode.workspace.getConfiguration('pythonHover');\n        if (!config.get('showVersionInfo', true)) {\n            return;\n        }\n\n        const versionInfo = getVersionInfo(symbolName);\n        if (versionInfo) {\n            md.appendMarkdown(this.theme.formatSectionHeader('Version Info'));\n            md.appendMarkdown(formatVersionInfo(versionInfo));\n        }\n    }\n\n    /**\n     * Append method comparison if available\n     */\n    private appendMethodComparison(md: vscode.MarkdownString, methodName: string): void {\n        const config = vscode.workspace.getConfiguration('pythonHover');\n        if (!config.get('showVersionInfo', true)) {\n            return;\n        }\n\n        const comparison = getMethodComparison(methodName);\n        if (comparison) {\n            md.appendMarkdown(this.theme.formatSectionHeader('Version Comparison'));\n            md.appendMarkdown(formatComparison(comparison));\n        }\n    }\n\n    /**\n     * Append Python version footer consistently\n     */\n    private appendVersionFooter(md: vscode.MarkdownString, pythonVersionInfo?: { version: string; pythonPath?: string }): void {\n        if (pythonVersionInfo) {\n            md.appendMarkdown(this.theme.formatDivider());\n            md.appendMarkdown(`<div style=\"text-align: right; font-size: 0.85em; color: #888;\">Python ${pythonVersionInfo.version}</div>`);\n        }\n    }\n\n    /**\n     * Extract parameters from documentation content\n     */\n    private extractParameters(docContent: string): ParameterInfo[] {\n        const params: ParameterInfo[] = [];\n\n        // Try to match Sphinx-style parameter lists\n        // Matches patterns like:\n        // :param name: description\n        // :param type name: description\n        const paramRegex = /:(?:param|parameter)(?:\\s+(\\w+))?\\s+(\\w+):\\s*(.+?)(?=\\n:|$)/gs;\n        let match;\n\n        while ((match = paramRegex.exec(docContent)) !== null) {\n            const type = match[1]; // Optional type\n            const name = match[2];\n            const description = match[3].trim();\n\n            params.push({\n                name,\n                type,\n                description,\n                required: true // Default to required unless we find otherwise\n            });\n        }\n\n        // Also try to match Google-style docstrings\n        // Args:\n        //     name (type): description\n        if (params.length === 0) {\n            const argsSection = docContent.match(/Args?:\\s*\\n((?:\\s+.+\\n?)+)/i);\n            if (argsSection) {\n                const argsText = argsSection[1];\n                const argLines = argsText.split('\\n').filter(line => line.trim());\n\n                for (const line of argLines) {\n                    const googleMatch = line.match(/^\\s*(\\w+)\\s*(?:\\(([^)]+)\\))?\\s*:\\s*(.+)/);\n                    if (googleMatch) {\n                        params.push({\n                            name: googleMatch[1],\n                            type: googleMatch[2],\n                            description: googleMatch[3].trim(),\n                            required: !googleMatch[3].includes('optional')\n                        });\n                    }\n                }\n            }\n        }\n\n        return params;\n    }\n\n    /**\n     * Extract function signature from documentation\n     */\n    private extractSignature(docContent: string, symbolName: string): string | null {\n        // Try to find a code block with the function signature\n        const codeBlockMatch = docContent.match(/```(?:python)?\\s*\\n([^\\n]+\\([\\s\\S]*?\\)(?:\\s*->\\s*\\w+)?)\\n```/);\n        if (codeBlockMatch) {\n            return codeBlockMatch[1].trim();\n        }\n\n        // Try to find inline code with function signature\n        const inlineMatch = docContent.match(new RegExp(`\\`${symbolName}\\\\([^)]*\\\\)(?:\\\\s*->\\\\s*\\\\w+)?\\``));\n        if (inlineMatch) {\n            return inlineMatch[0].replace(/`/g, '').trim();\n        }\n\n        // Try to match signature-style patterns\n        const sigMatch = docContent.match(new RegExp(`${symbolName}\\\\s*\\\\([^)]*\\\\)(?:\\\\s*->\\\\s*[^\\\\n]+)?`));\n        if (sigMatch) {\n            return sigMatch[0].trim();\n        }\n\n        return null;\n    }\n\n    /**\n     * Detect if a symbol is deprecated\n     */\n    private isDeprecated(docContent: string): DeprecationInfo | null {\n        // Look for deprecation warnings\n        const deprecatedMatch = docContent.match(/(?:deprecated|DEPRECATED)(?:\\s+(?:since|in)\\s+(?:version\\s+)?([0-9.]+))?[:\\s]+(.+?)(?:\\n|$)/i);\n\n        if (deprecatedMatch) {\n            const version = deprecatedMatch[1];\n            let message = deprecatedMatch[2].trim();\n\n            // Try to find alternative suggestion\n            const altMatch = message.match(/(?:use|try|replaced by|instead use)\\s+[`']?(\\w+(?:\\.\\w+)?(?:\\(\\))?)[`']?/i);\n            const alternative = altMatch ? altMatch[1] : undefined;\n\n            message = message.replace(/\\.$/, '');\n\n            return {\n                version,\n                message,\n                alternative\n            };\n        }\n\n        // Check for .. deprecated:: directive (Sphinx)\n        const sphinxMatch = docContent.match(/\\.\\.\\s+deprecated::\\s*([0-9.]+)?\\s*\\n\\s+(.+)/);\n        if (sphinxMatch) {\n            return {\n                version: sphinxMatch[1],\n                message: sphinxMatch[2].trim()\n            };\n        }\n\n        return null;\n    }\n\n    /**\n     * Extract return type information\n     */\n    private extractReturnInfo(docContent: string): ReturnInfo | null {\n        // Try Sphinx-style :returns: or :return:\n        const sphinxMatch = docContent.match(/:returns?:\\s*(.+?)(?=\\n:|$)/is);\n        if (sphinxMatch) {\n            const fullText = sphinxMatch[1].trim();\n            const typeMatch = fullText.match(/^([^-–]+?)\\s*[-–]\\s*(.+)/);\n            if (typeMatch) {\n                return {\n                    type: typeMatch[1].trim(),\n                    description: typeMatch[2].trim()\n                };\n            }\n            return { type: fullText };\n        }\n\n        // Try :rtype: for return type\n        const rtypeMatch = docContent.match(/:rtype:\\s*(.+?)(?=\\n:|$)/i);\n        if (rtypeMatch) {\n            return { type: rtypeMatch[1].trim() };\n        }\n\n        // Try Google-style Returns:\n        const googleMatch = docContent.match(/Returns:\\s*\\n\\s+([^\\n]+?):\\s*(.+)/i);\n        if (googleMatch) {\n            return {\n                type: googleMatch[1].trim(),\n                description: googleMatch[2].trim()\n            };\n        }\n\n        // Try to extract from signature -> Type\n        const sigMatch = docContent.match(/->\\s*([^:\\n]+)(?::|$)/);\n        if (sigMatch) {\n            return { type: sigMatch[1].trim() };\n        }\n\n        return null;\n    }\n\n    /**\n     * Find related symbols for \"See Also\" section\n     */\n    private findRelatedSymbols(symbolName: string, context?: string): RelatedSymbol[] {\n        const related: RelatedSymbol[] = [];\n\n        // Use existing related methods functionality\n        if (context) {\n            const relatedMethods = getRelatedMethodsForMethod(context, symbolName);\n            for (const method of relatedMethods.slice(0, 5)) {\n                related.push({\n                    name: `${context}.${method.name}`,\n                    description: method.description,\n                    type: 'method'\n                });\n            }\n        }\n\n        return related;\n    }\n}\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nmodule.exports = crc32;\n","module.exports = require(\"punycode\");","import { exec } from 'child_process';\nimport * as fs from 'fs/promises';\nimport * as path from 'path';\nimport { promisify } from 'util';\nimport * as vscode from 'vscode';\nimport { ErrorNotifier } from './errorNotifier';\nimport { Logger } from './logger';\n\nconst execAsync = promisify(exec);\n\nexport interface InstalledPackage {\n    name: string;\n    version: string;\n    location?: string;\n}\n\nexport interface PythonEnvironment {\n    path: string;\n    type: 'venv' | 'conda' | 'system' | 'pyenv' | 'unknown';\n    version: string;\n}\n\nexport class PackageDetector {\n    private logger: Logger;\n    private packageCache: Map<string, { packages: InstalledPackage[]; timestamp: number }>;\n    private readonly CACHE_TTL = 60000; // 1 minute cache\n    private hasShownErrorNotification = false; // Track if we've shown an error to avoid spam\n\n    constructor() {\n        this.logger = Logger.getInstance();\n        this.packageCache = new Map();\n    }\n\n    /**\n     * Detect the active Python environment\n     */\n    public async detectPythonEnvironment(): Promise<PythonEnvironment | null> {\n        try {\n            // Try to get from Python extension first\n            const pythonExt = vscode.extensions.getExtension('ms-python.python');\n            if (pythonExt) {\n                if (!pythonExt.isActive) {\n                    await pythonExt.activate();\n                }\n\n                // Get the configured Python path\n                const pythonPath = vscode.workspace.getConfiguration('python').get<string>('defaultInterpreterPath');\n\n                if (pythonPath) {\n                    const envType = this.detectEnvironmentType(pythonPath);\n                    const version = await this.getPythonVersion(pythonPath);\n\n                    this.logger.debug(`Detected environment: ${pythonPath} (${envType}) - Python ${version}`);\n\n                    return {\n                        path: pythonPath,\n                        type: envType,\n                        version: version\n                    };\n                }\n            }\n\n            // Fallback: try to find Python in workspace\n            return await this.detectFromWorkspace();\n        } catch (error) {\n            this.logger.error(`Error detecting Python environment`, error as Error);\n            return null;\n        }\n    }\n\n    /**\n     * Detect environment type from path\n     */\n    private detectEnvironmentType(pythonPath: string): PythonEnvironment['type'] {\n        const lowerPath = pythonPath.toLowerCase();\n\n        if (lowerPath.includes('conda') || lowerPath.includes('anaconda') || lowerPath.includes('miniconda')) {\n            return 'conda';\n        }\n        if (lowerPath.includes('venv') || lowerPath.includes('.venv') || lowerPath.includes('virtualenv')) {\n            return 'venv';\n        }\n        if (lowerPath.includes('.pyenv') || lowerPath.includes('pyenv')) {\n            return 'pyenv';\n        }\n        if (lowerPath.includes('/usr/') || lowerPath.includes('/System/') || lowerPath.startsWith('C:\\\\Python')) {\n            return 'system';\n        }\n\n        return 'unknown';\n    }\n\n    /**\n     * Get Python version from interpreter\n     */\n    private async getPythonVersion(pythonPath: string): Promise<string> {\n        try {\n            const { stdout } = await execAsync(`\"${pythonPath}\" --version`);\n            const versionMatch = stdout.match(/Python (\\d+\\.\\d+)/);\n            if (versionMatch) {\n                return versionMatch[1];\n            }\n        } catch (error) {\n            this.logger.error(`Error getting Python version`, error as Error);\n        }\n        return '3.12'; // fallback\n    }\n\n    /**\n     * Detect Python environment from workspace\n     */\n    private async detectFromWorkspace(): Promise<PythonEnvironment | null> {\n        const workspaceFolders = vscode.workspace.workspaceFolders;\n        if (!workspaceFolders) {\n            return null;\n        }\n\n        for (const folder of workspaceFolders) {\n            // Check for common venv locations\n            const venvPaths = [\n                path.join(folder.uri.fsPath, 'venv', 'bin', 'python'),\n                path.join(folder.uri.fsPath, '.venv', 'bin', 'python'),\n                path.join(folder.uri.fsPath, 'env', 'bin', 'python'),\n                path.join(folder.uri.fsPath, 'venv', 'Scripts', 'python.exe'), // Windows\n                path.join(folder.uri.fsPath, '.venv', 'Scripts', 'python.exe'),\n            ];\n\n            for (const venvPath of venvPaths) {\n                try {\n                    await fs.access(venvPath);\n                    const version = await this.getPythonVersion(venvPath);\n                    return {\n                        path: venvPath,\n                        type: 'venv',\n                        version: version\n                    };\n                } catch {\n                    // File doesn't exist, try next\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Get list of installed packages in the Python environment\n     */\n    public async getInstalledPackages(pythonPath: string): Promise<InstalledPackage[]> {\n        const cacheKey = pythonPath;\n\n        // Check cache first\n        const cached = this.packageCache.get(cacheKey);\n        if (cached && (Date.now() - cached.timestamp) < this.CACHE_TTL) {\n            this.logger.debug(`Using cached package list (${cached.packages.length} packages)`);\n            return cached.packages;\n        }\n\n        this.logger.debug(`Fetching installed packages from: ${pythonPath}`);\n\n        try {\n            // Use pip list --format json for reliable parsing\n            const { stdout } = await execAsync(`\"${pythonPath}\" -m pip list --format json`, {\n                timeout: 10000 // 10 second timeout\n            });\n\n            const packages: InstalledPackage[] = JSON.parse(stdout).map((pkg: any) => ({\n                name: pkg.name.toLowerCase(),\n                version: pkg.version,\n                location: pkg.location\n            }));\n\n            this.logger.debug(`Found ${packages.length} installed packages`);\n\n            // Cache the results\n            this.packageCache.set(cacheKey, {\n                packages: packages,\n                timestamp: Date.now()\n            });\n\n            return packages;\n        } catch (error: any) {\n            this.logger.error(`Error fetching installed packages`, error as Error);\n\n            // Show user-friendly error notification (only once per session)\n            if (!this.hasShownErrorNotification) {\n                this.hasShownErrorNotification = true;\n\n                let errorMessage = 'Python Hover: Package detection failed. ';\n                let helpMessage = '';\n\n                // Provide specific guidance based on the error\n                if (error.message && error.message.includes('pip')) {\n                    errorMessage += 'pip may not be available in this Python environment.';\n                    helpMessage = 'Install pip or use a Python environment with pip installed.';\n                } else if (error.message && error.message.includes('timeout')) {\n                    errorMessage += 'Package detection timed out.';\n                    helpMessage = 'Try again later or check your Python environment.';\n                } else {\n                    errorMessage += 'Unable to detect installed packages.';\n                    helpMessage = 'Check Python extension settings and ensure Python is configured correctly.';\n                }\n\n                ErrorNotifier.showWarningWithRetry(\n                    `${errorMessage} ${helpMessage}`,\n                    () => {\n                        this.hasShownErrorNotification = false;\n                        this.clearCache();\n                    },\n                    'python.defaultInterpreterPath'\n                );\n            }\n\n            // Try alternative method: read site-packages directly\n            return await this.getPackagesFromSitePackages(pythonPath);\n        }\n    }\n\n    /**\n     * Alternative method: read packages from site-packages directory\n     */\n    private async getPackagesFromSitePackages(pythonPath: string): Promise<InstalledPackage[]> {\n        try {\n            // Get site-packages location\n            const { stdout } = await execAsync(`\"${pythonPath}\" -c \"import site; print(site.getsitepackages()[0])\"`);\n            const sitePackagesPath = stdout.trim();\n\n            const packages: InstalledPackage[] = [];\n            const entries = await fs.readdir(sitePackagesPath);\n\n            // Look for .dist-info directories\n            for (const entry of entries) {\n                if (entry.endsWith('.dist-info')) {\n                    const packageName = entry.split('-')[0].toLowerCase();\n                    const metadataPath = path.join(sitePackagesPath, entry, 'METADATA');\n\n                    try {\n                        const metadata = await fs.readFile(metadataPath, 'utf-8');\n                        const versionMatch = metadata.match(/^Version:\\s*(.+)$/m);\n\n                        if (versionMatch) {\n                            packages.push({\n                                name: packageName,\n                                version: versionMatch[1].trim(),\n                                location: sitePackagesPath\n                            });\n                        }\n                    } catch {\n                        // Skip packages we can't read\n                    }\n                }\n            }\n\n            this.logger.debug(`Found ${packages.length} packages from site-packages`);\n            return packages;\n        } catch (error) {\n            this.logger.error(`Error reading site-packages`, error as Error);\n            return [];\n        }\n    }\n\n    /**\n     * Check if a specific package is installed\n     */\n    public async isPackageInstalled(pythonPath: string, packageName: string): Promise<InstalledPackage | null> {\n        const packages = await this.getInstalledPackages(pythonPath);\n        return packages.find(pkg => pkg.name === packageName.toLowerCase()) || null;\n    }\n\n    /**\n     * Get package version if installed\n     */\n    public async getPackageVersion(pythonPath: string, packageName: string): Promise<string | null> {\n        const pkg = await this.isPackageInstalled(pythonPath, packageName);\n        return pkg ? pkg.version : null;\n    }\n\n    /**\n     * Clear package cache\n     */\n    public clearCache(): void {\n        this.packageCache.clear();\n        this.logger.info('Package cache cleared');\n    }\n\n    /**\n     * Get cache statistics\n     */\n    public getCacheStats(): { size: number; entries: string[] } {\n        return {\n            size: this.packageCache.size,\n            entries: Array.from(this.packageCache.keys())\n        };\n    }\n}\n","module.exports = require(\"child_process\");","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","/**\n * Provides smart suggestions for related methods and functions\n */\n\nexport interface RelatedMethod {\n    name: string;\n    description: string;\n}\n\n/**\n * Map of types to their commonly used methods\n */\nexport const TYPE_METHOD_MAP: Record<string, RelatedMethod[]> = {\n    // String methods\n    'str': [\n        { name: 'upper', description: 'Convert to uppercase' },\n        { name: 'lower', description: 'Convert to lowercase' },\n        { name: 'strip', description: 'Remove leading/trailing whitespace' },\n        { name: 'split', description: 'Split into list by delimiter' },\n        { name: 'join', description: 'Join iterable with string as delimiter' },\n        { name: 'replace', description: 'Replace substring' },\n        { name: 'startswith', description: 'Check if string starts with prefix' },\n        { name: 'endswith', description: 'Check if string ends with suffix' }\n    ],\n\n    // List methods\n    'list': [\n        { name: 'append', description: 'Add item to end' },\n        { name: 'extend', description: 'Add items from iterable to end' },\n        { name: 'insert', description: 'Insert item at position' },\n        { name: 'remove', description: 'Remove first occurrence of value' },\n        { name: 'pop', description: 'Remove and return item at index' },\n        { name: 'sort', description: 'Sort in place' },\n        { name: 'reverse', description: 'Reverse in place' }\n    ],\n\n    // Dictionary methods\n    'dict': [\n        { name: 'get', description: 'Get value for key with optional default' },\n        { name: 'items', description: 'View of (key, value) pairs' },\n        { name: 'keys', description: 'View of dictionary keys' },\n        { name: 'values', description: 'View of dictionary values' },\n        { name: 'update', description: 'Update with key/value pairs from another mapping' },\n        { name: 'pop', description: 'Remove and return value for key' }\n    ],\n\n    // Set methods\n    'set': [\n        { name: 'add', description: 'Add element to set' },\n        { name: 'remove', description: 'Remove element; raises KeyError if not found' },\n        { name: 'discard', description: 'Remove element if present' },\n        { name: 'union', description: 'Return union of sets' },\n        { name: 'intersection', description: 'Return intersection of sets' },\n        { name: 'difference', description: 'Return set difference' }\n    ]\n};\n\n/**\n * Gets related methods for a given type\n */\nexport function getRelatedMethods(type: string): RelatedMethod[] {\n    return TYPE_METHOD_MAP[type] || [];\n}\n\n/**\n * Gets related methods based on current method\n * For example, if using str.upper(), might suggest str.lower()\n */\nexport function getRelatedMethodsForMethod(type: string, method: string): RelatedMethod[] {\n    if (!type || !method || !(type in TYPE_METHOD_MAP)) {\n        return [];\n    }\n\n    // Return all methods for this type except the current one\n    return TYPE_METHOD_MAP[type].filter(m => m.name !== method);\n}\n","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","/**\n * Third-Party Library Documentation\n * Provides hover documentation for popular Python libraries\n */\n\nimport { Logger } from '../services/logger';\n\nexport interface LibraryDoc {\n    name: string;\n    description: string;\n    example?: string;\n    url?: string;\n    version?: string;\n}\n\nexport interface LibraryDocs {\n    [key: string]: {\n        [symbol: string]: LibraryDoc;\n    };\n}\n\nexport const THIRD_PARTY_LIBRARIES: LibraryDocs = {\n    numpy: {\n        'array': {\n            name: 'numpy.array',\n            description: 'Create an array from a Python list or tuple.',\n            example: `import numpy as np\n\n# Create 1D array\narr1d = np.array([1, 2, 3, 4, 5])\nprint(arr1d)  # [1 2 3 4 5]\n\n# Create 2D array\narr2d = np.array([[1, 2, 3], [4, 5, 6]])\nprint(arr2d)\n# [[1 2 3]\n#  [4 5 6]]\n\n# Specify dtype\narr_float = np.array([1, 2, 3], dtype=float)\nprint(arr_float)  # [1. 2. 3.]`,\n            url: 'https://numpy.org/doc/stable/reference/generated/numpy.array.html'\n        },\n        'zeros': {\n            name: 'numpy.zeros',\n            description: 'Return a new array of given shape and type, filled with zeros.',\n            example: `import numpy as np\n\n# 1D array of zeros\nz1 = np.zeros(5)\nprint(z1)  # [0. 0. 0. 0. 0.]\n\n# 2D array of zeros\nz2 = np.zeros((3, 4))\nprint(z2)\n# [[0. 0. 0. 0.]\n#  [0. 0. 0. 0.]\n#  [0. 0. 0. 0.]]\n\n# Integer zeros\nz_int = np.zeros(3, dtype=int)\nprint(z_int)  # [0 0 0]`,\n            url: 'https://numpy.org/doc/stable/reference/generated/numpy.zeros.html'\n        },\n        'ones': {\n            name: 'numpy.ones',\n            description: 'Return a new array of given shape and type, filled with ones.',\n            example: `import numpy as np\n\n# 1D array of ones\no1 = np.ones(5)\nprint(o1)  # [1. 1. 1. 1. 1.]\n\n# 2D array of ones\no2 = np.ones((3, 4))\nprint(o2)\n# [[1. 1. 1. 1.]\n#  [1. 1. 1. 1.]\n#  [1. 1. 1. 1.]]\n\n# Integer ones\no_int = np.ones(3, dtype=int)\nprint(o_int)  # [1 1 1]`,\n            url: 'https://numpy.org/doc/stable/reference/generated/numpy.ones.html'\n        },\n        'arange': {\n            name: 'numpy.arange',\n            description: 'Return evenly spaced values within a given interval.',\n            example: `import numpy as np\n\n# Similar to Python's range\narr1 = np.arange(10)\nprint(arr1)  # [0 1 2 3 4 5 6 7 8 9]\n\n# With start and stop\narr2 = np.arange(5, 10)\nprint(arr2)  # [5 6 7 8 9]\n\n# With step\narr3 = np.arange(0, 1, 0.2)\nprint(arr3)  # [0.  0.2 0.4 0.6 0.8]`,\n            url: 'https://numpy.org/doc/stable/reference/generated/numpy.arange.html'\n        },\n        'reshape': {\n            name: 'numpy.ndarray.reshape',\n            description: 'Gives a new shape to an array without changing its data.',\n            example: `import numpy as np\n\narr = np.arange(12)\nprint(arr)  # [ 0  1  2  3  4  5  6  7  8  9 10 11]\n\n# Reshape to 2D\narr_2d = arr.reshape(3, 4)\nprint(arr_2d)\n# [[ 0  1  2  3]\n#  [ 4  5  6  7]\n#  [ 8  9 10 11]]\n\n# Reshape to 3D\narr_3d = arr.reshape(2, 3, 2)\nprint(arr_3d.shape)  # (2, 3, 2)`,\n            url: 'https://numpy.org/doc/stable/reference/generated/numpy.reshape.html'\n        }\n    },\n    pandas: {\n        'DataFrame': {\n            name: 'pandas.DataFrame',\n            description: 'Two-dimensional, size-mutable, potentially heterogeneous tabular data.',\n            example: `import pandas as pd\n\n# From dictionary\ndf = pd.DataFrame({\n    'name': ['Alice', 'Bob', 'Charlie'],\n    'age': [25, 30, 35],\n    'city': ['NY', 'LA', 'Chicago']\n})\nprint(df)\n#       name  age     city\n# 0    Alice   25       NY\n# 1      Bob   30       LA\n# 2  Charlie   35  Chicago\n\n# Access columns\nprint(df['name'])  # Name column\nprint(df.age)      # Alternative access`,\n            url: 'https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html'\n        },\n        'read_csv': {\n            name: 'pandas.read_csv',\n            description: 'Read a comma-separated values (csv) file into DataFrame.',\n            example: `import pandas as pd\n\n# Read CSV file\ndf = pd.read_csv('data.csv')\n\n# With custom delimiter\ndf = pd.read_csv('data.tsv', sep='\\\\t')\n\n# Skip rows and use specific columns\ndf = pd.read_csv('data.csv',\n                 skiprows=1,\n                 usecols=['name', 'age'])\n\n# Parse dates\ndf = pd.read_csv('data.csv',\n                 parse_dates=['date_column'])`,\n            url: 'https://pandas.pydata.org/docs/reference/api/pandas.read_csv.html'\n        },\n        'groupby': {\n            name: 'pandas.DataFrame.groupby',\n            description: 'Group DataFrame using a mapper or by a Series of columns.',\n            example: `import pandas as pd\n\ndf = pd.DataFrame({\n    'category': ['A', 'B', 'A', 'B', 'A'],\n    'values': [10, 20, 30, 40, 50]\n})\n\n# Group by category and sum\ngrouped = df.groupby('category')['values'].sum()\nprint(grouped)\n# category\n# A    90\n# B    60\n\n# Multiple aggregations\nagg = df.groupby('category').agg({\n    'values': ['sum', 'mean', 'count']\n})\nprint(agg)`,\n            url: 'https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.groupby.html'\n        },\n        'merge': {\n            name: 'pandas.merge',\n            description: 'Merge DataFrame or named Series objects with a database-style join.',\n            example: `import pandas as pd\n\ndf1 = pd.DataFrame({\n    'id': [1, 2, 3],\n    'name': ['Alice', 'Bob', 'Charlie']\n})\n\ndf2 = pd.DataFrame({\n    'id': [1, 2, 4],\n    'score': [85, 92, 78]\n})\n\n# Inner join (default)\nmerged = pd.merge(df1, df2, on='id')\nprint(merged)\n#    id   name  score\n# 0   1  Alice     85\n# 1   2    Bob     92\n\n# Left join\nleft = pd.merge(df1, df2, on='id', how='left')`,\n            url: 'https://pandas.pydata.org/docs/reference/api/pandas.merge.html'\n        }\n    },\n    requests: {\n        'get': {\n            name: 'requests.get',\n            description: 'Sends a GET request to the specified URL.',\n            example: `import requests\n\n# Simple GET request\nresponse = requests.get('https://api.github.com')\nprint(response.status_code)  # 200\nprint(response.json())  # Parse JSON response\n\n# With parameters\nparams = {'q': 'python', 'sort': 'stars'}\nresponse = requests.get('https://api.github.com/search/repositories',\n                       params=params)\n\n# With headers\nheaders = {'Authorization': 'Bearer TOKEN'}\nresponse = requests.get('https://api.example.com/data',\n                       headers=headers)`,\n            url: 'https://requests.readthedocs.io/en/latest/api/#requests.get'\n        },\n        'post': {\n            name: 'requests.post',\n            description: 'Sends a POST request to the specified URL.',\n            example: `import requests\n\n# POST with JSON data\ndata = {'username': 'user', 'password': 'pass'}\nresponse = requests.post('https://api.example.com/login',\n                        json=data)\n\n# POST with form data\nform_data = {'key1': 'value1', 'key2': 'value2'}\nresponse = requests.post('https://api.example.com/form',\n                        data=form_data)\n\n# Check response\nif response.status_code == 200:\n    print('Success!')\n    print(response.json())`,\n            url: 'https://requests.readthedocs.io/en/latest/api/#requests.post'\n        }\n    },\n    flask: {\n        'Flask': {\n            name: 'flask.Flask',\n            description: 'The Flask object implements a WSGI application.',\n            example: `from flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef home():\n    return 'Hello, World!'\n\n@app.route('/user/<username>')\ndef show_user(username):\n    return f'User: {username}'\n\nif __name__ == '__main__':\n    app.run(debug=True)`,\n            url: 'https://flask.palletsprojects.com/en/latest/api/#flask.Flask'\n        },\n        'render_template': {\n            name: 'flask.render_template',\n            description: 'Renders a template from the template folder with the given context.',\n            example: `from flask import Flask, render_template\n\napp = Flask(__name__)\n\n@app.route('/hello/<name>')\ndef hello(name):\n    return render_template('hello.html',\n                          name=name,\n                          title='Greeting')\n\n# hello.html:\n# <!DOCTYPE html>\n# <html>\n# <head><title>{{ title }}</title></head>\n# <body><h1>Hello, {{ name }}!</h1></body>\n# </html>`,\n            url: 'https://flask.palletsprojects.com/en/latest/api/#flask.render_template'\n        }\n    },\n    django: {\n        'Model': {\n            name: 'django.db.models.Model',\n            description: 'Base class for all Django models.',\n            example: `from django.db import models\n\nclass Article(models.Model):\n    title = models.CharField(max_length=200)\n    content = models.TextField()\n    pub_date = models.DateTimeField(auto_now_add=True)\n    author = models.ForeignKey('auth.User',\n                              on_delete=models.CASCADE)\n\n    def __str__(self):\n        return self.title\n\n    class Meta:\n        ordering = ['-pub_date']\n\n# Usage:\narticle = Article.objects.create(\n    title='My Article',\n    content='Content here...',\n    author=user\n)`,\n            url: 'https://docs.djangoproject.com/en/stable/ref/models/instances/'\n        }\n    },\n    matplotlib: {\n        'pyplot': {\n            name: 'matplotlib.pyplot',\n            description: 'MATLAB-like plotting framework. Provides functions for creating visualizations.',\n            example: `import matplotlib.pyplot as plt\n\n# Simple line plot\nplt.plot([1, 2, 3, 4], [1, 4, 9, 16])\nplt.ylabel('y-axis')\nplt.xlabel('x-axis')\nplt.title('Simple Plot')\nplt.show()\n\n# Multiple plots\nx = [1, 2, 3, 4, 5]\ny1 = [1, 4, 9, 16, 25]\ny2 = [1, 2, 3, 4, 5]\n\nplt.plot(x, y1, label='squared')\nplt.plot(x, y2, label='linear')\nplt.legend()\nplt.show()`,\n            url: 'https://matplotlib.org/stable/api/pyplot_summary.html'\n        },\n        'figure': {\n            name: 'matplotlib.pyplot.figure',\n            description: 'Create a new figure or activate an existing figure.',\n            example: `import matplotlib.pyplot as plt\n\n# Create figure with specific size\nfig = plt.figure(figsize=(10, 6))\n\n# Add subplots\nax1 = fig.add_subplot(221)  # 2x2 grid, position 1\nax2 = fig.add_subplot(222)  # 2x2 grid, position 2\n\nax1.plot([1, 2, 3], [1, 4, 9])\nax2.plot([1, 2, 3], [1, 2, 3])\n\nplt.show()`,\n            url: 'https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.figure.html'\n        },\n        'scatter': {\n            name: 'matplotlib.pyplot.scatter',\n            description: 'Create a scatter plot of x vs y with varying marker size and/or color.',\n            example: `import matplotlib.pyplot as plt\nimport numpy as np\n\n# Simple scatter\nx = np.random.rand(50)\ny = np.random.rand(50)\nplt.scatter(x, y)\nplt.show()\n\n# With colors and sizes\ncolors = np.random.rand(50)\nsizes = 1000 * np.random.rand(50)\nplt.scatter(x, y, c=colors, s=sizes, alpha=0.5)\nplt.colorbar()\nplt.show()`,\n            url: 'https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.scatter.html'\n        }\n    },\n    scipy: {\n        'stats': {\n            name: 'scipy.stats',\n            description: 'Statistical functions and probability distributions.',\n            example: `from scipy import stats\nimport numpy as np\n\n# Normal distribution\ndata = stats.norm.rvs(loc=0, scale=1, size=1000)\n\n# T-test\nt_stat, p_value = stats.ttest_1samp(data, 0)\nprint(f'T-statistic: {t_stat}, P-value: {p_value}')\n\n# Descriptive statistics\nprint(stats.describe(data))`,\n            url: 'https://docs.scipy.org/doc/scipy/reference/stats.html'\n        },\n        'integrate': {\n            name: 'scipy.integrate',\n            description: 'Integration and ODE solvers.',\n            example: `from scipy import integrate\nimport numpy as np\n\n# Integrate a function\ndef f(x):\n    return x**2\n\nresult, error = integrate.quad(f, 0, 1)\nprint(f'Integral: {result}')  # 0.333...\n\n# Solve ODE\ndef deriv(y, t):\n    return -2 * y\n\nt = np.linspace(0, 4, 100)\ny = integrate.odeint(deriv, 1.0, t)`,\n            url: 'https://docs.scipy.org/doc/scipy/reference/integrate.html'\n        }\n    },\n    sklearn: {\n        'LinearRegression': {\n            name: 'sklearn.linear_model.LinearRegression',\n            description: 'Ordinary least squares Linear Regression.',\n            example: `from sklearn.linear_model import LinearRegression\nimport numpy as np\n\n# Create sample data\nX = np.array([[1], [2], [3], [4], [5]])\ny = np.array([2, 4, 5, 4, 5])\n\n# Fit model\nmodel = LinearRegression()\nmodel.fit(X, y)\n\n# Make predictions\npredictions = model.predict([[6]])\nprint(f'Prediction: {predictions[0]}')\n\n# Get coefficients\nprint(f'Slope: {model.coef_[0]}')\nprint(f'Intercept: {model.intercept_}')`,\n            url: 'https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html'\n        },\n        'train_test_split': {\n            name: 'sklearn.model_selection.train_test_split',\n            description: 'Split arrays or matrices into random train and test subsets.',\n            example: `from sklearn.model_selection import train_test_split\nimport numpy as np\n\n# Sample data\nX = np.arange(100).reshape((20, 5))\ny = np.arange(20)\n\n# Split data\nX_train, X_test, y_train, y_test = train_test_split(\n    X, y, test_size=0.2, random_state=42\n)\n\nprint(f'Train size: {len(X_train)}')  # 16\nprint(f'Test size: {len(X_test)}')    # 4`,\n            url: 'https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html'\n        }\n    },\n    bs4: {\n        'BeautifulSoup': {\n            name: 'bs4.BeautifulSoup',\n            description: 'Beautiful Soup parses HTML and XML documents, even with malformed markup.',\n            example: `from bs4 import BeautifulSoup\n\nhtml = \"\"\"\n<html>\n<head><title>Page Title</title></head>\n<body>\n    <p class=\"story\">Once upon a time...</p>\n    <a href=\"http://example.com\">Link</a>\n</body>\n</html>\n\"\"\"\n\nsoup = BeautifulSoup(html, 'html.parser')\n\n# Find elements\ntitle = soup.find('title')\nprint(title.text)  # \"Page Title\"\n\n# Find by class\nstory = soup.find('p', class_='story')\nprint(story.text)\n\n# Find all links\nlinks = soup.find_all('a')\nfor link in links:\n    print(link.get('href'))`,\n            url: 'https://www.crummy.com/software/BeautifulSoup/bs4/doc/'\n        }\n    },\n    sqlalchemy: {\n        'create_engine': {\n            name: 'sqlalchemy.create_engine',\n            description: 'Create a new Engine instance.',\n            example: `from sqlalchemy import create_engine\n\n# SQLite in-memory\nengine = create_engine('sqlite:///:memory:')\n\n# SQLite file\nengine = create_engine('sqlite:///database.db')\n\n# PostgreSQL\nengine = create_engine(\n    'postgresql://user:password@localhost/dbname'\n)\n\n# MySQL\nengine = create_engine(\n    'mysql+pymysql://user:password@localhost/dbname'\n)\n\n# Execute query\nwith engine.connect() as conn:\n    result = conn.execute(\"SELECT * FROM users\")`,\n            url: 'https://docs.sqlalchemy.org/en/20/core/engines.html'\n        }\n    },\n    fastapi: {\n        'FastAPI': {\n            name: 'fastapi.FastAPI',\n            description: 'Modern, fast web framework for building APIs with Python.',\n            example: `from fastapi import FastAPI\n\napp = FastAPI()\n\n@app.get(\"/\")\ndef read_root():\n    return {\"Hello\": \"World\"}\n\n@app.get(\"/items/{item_id}\")\ndef read_item(item_id: int, q: str = None):\n    return {\"item_id\": item_id, \"q\": q}\n\n# POST endpoint with body\nfrom pydantic import BaseModel\n\nclass Item(BaseModel):\n    name: str\n    price: float\n\n@app.post(\"/items/\")\ndef create_item(item: Item):\n    return {\"name\": item.name, \"price\": item.price}\n\n# Run with: uvicorn main:app --reload`,\n            url: 'https://fastapi.tiangolo.com/'\n        }\n    },\n    pytest: {\n        'fixture': {\n            name: 'pytest.fixture',\n            description: 'Decorator to mark a function as a fixture factory.',\n            example: `import pytest\n\n@pytest.fixture\ndef sample_data():\n    return [1, 2, 3, 4, 5]\n\n@pytest.fixture\ndef db_connection():\n    # Setup\n    conn = create_connection()\n    yield conn\n    # Teardown\n    conn.close()\n\ndef test_sum(sample_data):\n    assert sum(sample_data) == 15\n\ndef test_database(db_connection):\n    result = db_connection.query(\"SELECT 1\")\n    assert result == 1`,\n            url: 'https://docs.pytest.org/en/stable/fixture.html'\n        },\n        'mark': {\n            name: 'pytest.mark',\n            description: 'Mark test functions with metadata.',\n            example: `import pytest\n\n@pytest.mark.slow\ndef test_slow_function():\n    # This test is slow\n    pass\n\n@pytest.mark.parametrize(\"input,expected\", [\n    (1, 2),\n    (2, 4),\n    (3, 6),\n])\ndef test_multiply_by_2(input, expected):\n    assert input * 2 == expected\n\n@pytest.mark.skip(reason=\"Not implemented yet\")\ndef test_future_feature():\n    pass\n\n# Run with: pytest -m slow`,\n            url: 'https://docs.pytest.org/en/stable/mark.html'\n        }\n    },\n    selenium: {\n        'webdriver': {\n            name: 'selenium.webdriver',\n            description: 'WebDriver implementations for browser automation.',\n            example: `from selenium import webdriver\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\n\n# Chrome driver\ndriver = webdriver.Chrome()\n\n# Navigate to URL\ndriver.get(\"https://www.example.com\")\n\n# Find element\nelement = driver.find_element(By.ID, \"username\")\nelement.send_keys(\"myusername\")\n\n# Wait for element\nwait = WebDriverWait(driver, 10)\nelement = wait.until(\n    EC.presence_of_element_located((By.ID, \"submit\"))\n)\n\n# Click button\nelement.click()\n\ndriver.quit()`,\n            url: 'https://selenium-python.readthedocs.io/'\n        }\n    },\n    asyncio: {\n        'run': {\n            name: 'asyncio.run',\n            description: 'Execute the coroutine and return the result.',\n            example: `import asyncio\n\nasync def main():\n    print('Hello')\n    await asyncio.sleep(1)\n    print('World')\n\n# Run async function\nasyncio.run(main())\n\n# Multiple tasks\nasync def fetch_data(id):\n    await asyncio.sleep(1)\n    return f'Data {id}'\n\nasync def main():\n    tasks = [fetch_data(i) for i in range(3)]\n    results = await asyncio.gather(*tasks)\n    print(results)\n\nasyncio.run(main())`,\n            url: 'https://docs.python.org/3/library/asyncio-task.html#asyncio.run'\n        },\n        'gather': {\n            name: 'asyncio.gather',\n            description: 'Run awaitable objects in the sequence concurrently.',\n            example: `import asyncio\n\nasync def task1():\n    await asyncio.sleep(1)\n    return 'Task 1'\n\nasync def task2():\n    await asyncio.sleep(2)\n    return 'Task 2'\n\nasync def main():\n    # Run concurrently\n    results = await asyncio.gather(task1(), task2())\n    print(results)  # ['Task 1', 'Task 2']\n\nasyncio.run(main())`,\n            url: 'https://docs.python.org/3/library/asyncio-task.html#asyncio.gather'\n        }\n    },\n    pydantic: {\n        'BaseModel': {\n            name: 'pydantic.BaseModel',\n            description: 'Base class for creating data validation models.',\n            example: `from pydantic import BaseModel, validator\nfrom typing import Optional\n\nclass User(BaseModel):\n    id: int\n    name: str\n    email: str\n    age: Optional[int] = None\n\n    @validator('email')\n    def email_must_be_valid(cls, v):\n        if '@' not in v:\n            raise ValueError('Invalid email')\n        return v\n\n# Create instance\nuser = User(id=1, name='John', email='john@example.com')\nprint(user.dict())\n\n# Validation error\ntry:\n    User(id=1, name='John', email='invalid')\nexcept ValueError as e:\n    print(e)`,\n            url: 'https://docs.pydantic.dev/'\n        }\n    },\n    pillow: {\n        'Image': {\n            name: 'PIL.Image',\n            description: 'The Image module provides a class with the same name for representing a PIL image.',\n            example: `from PIL import Image\n\n# Open image\nimg = Image.open('photo.jpg')\n\n# Get info\nprint(img.size)     # (width, height)\nprint(img.format)   # JPEG\nprint(img.mode)     # RGB\n\n# Resize image\nimg_resized = img.resize((800, 600))\n\n# Crop image\nbox = (100, 100, 400, 400)\nimg_cropped = img.crop(box)\n\n# Save image\nimg.save('output.png')\n\n# Create new image\nnew_img = Image.new('RGB', (100, 100), color='red')`,\n            url: 'https://pillow.readthedocs.io/en/stable/reference/Image.html'\n        }\n    }\n};\n\n/**\n * Detect imported libraries and their aliases\n * Returns a Map of alias -> library name\n */\n/**\n * Check if a library is known (either has hardcoded docs or custom inventory)\n */\nfunction isKnownLibrary(libraryName: string, configManager?: any): boolean {\n    // Check hardcoded libraries\n    if (THIRD_PARTY_LIBRARIES[libraryName]) {\n        return true;\n    }\n\n    // Check custom libraries from config (if available)\n    if (configManager && typeof configManager.customLibraries !== 'undefined') {\n        const customLibs = configManager.customLibraries || [];\n        return customLibs.some((lib: any) => lib.name === libraryName);\n    }\n\n    return false;\n}\n\nexport function getImportedLibraries(documentText: string, configManager?: any): Map<string, string> {\n    const imports = new Map<string, string>(); // alias -> library name\n    const lines = documentText.split('\\n');\n\n    for (const line of lines) {\n        const trimmed = line.trim();\n\n        // Match: import numpy as np\n        const importAsMatch = trimmed.match(/^import\\s+(\\w+)(?:\\s+as\\s+(\\w+))?$/);\n        if (importAsMatch) {\n            const library = importAsMatch[1];\n            const alias = importAsMatch[2] || library;\n            if (isKnownLibrary(library, configManager)) {\n                imports.set(alias, library);\n            }\n            continue;\n        }\n\n        // Match: from numpy import array, zeros\n        // Also match: from jupyter_core import paths\n        const fromMatch = trimmed.match(/^from\\s+([\\w.]+)\\s+import\\s+(.+)$/);\n        if (fromMatch) {\n            const library = fromMatch[1].split('.')[0]; // Get base module (e.g., \"jupyter_core\" from \"jupyter_core.paths\")\n            const fullModule = fromMatch[1]; // Keep full module path (e.g., \"jupyter_core.paths\")\n            const importedItems = fromMatch[2]; // Everything after \"import\"\n\n            // Check if this is a library we track\n            if (isKnownLibrary(library, configManager)) {\n                // DON'T add imports.set(library, library) here!\n                // We're importing symbols FROM the library, not the library itself.\n                // Only map the individual imported symbols.\n\n                // Parse imported items (handle: name, name as alias, name1, name2, etc.)\n                const items = importedItems.split(',').map(item => item.trim());\n                for (const item of items) {\n                    // Skip parentheses and handle \"as\" aliases\n                    const cleanItem = item.replace(/[()]/g, '').trim();\n                    if (!cleanItem || cleanItem === '(' || cleanItem === ')') continue;\n\n                    const asMatch = cleanItem.match(/^(\\w+)(?:\\s+as\\s+(\\w+))?$/);\n                    if (asMatch) {\n                        const name = asMatch[1];\n                        const alias = asMatch[2] || name;\n                        // Map the imported symbol to the library\n                        // e.g., \"paths\" -> \"jupyter_core\" or \"KernelManager\" -> \"jupyter_client\"\n                        imports.set(alias, library);\n                        Logger.getInstance().debug(`Mapped import: ${alias} -> ${library} (from ${fullModule})`);\n                    }\n                }\n            }\n            continue;\n        }\n\n        // Match: import numpy (without alias)\n        const simpleImportMatch = trimmed.match(/^import\\s+(\\w+)$/);\n        if (simpleImportMatch) {\n            const library = simpleImportMatch[1];\n            if (isKnownLibrary(library, configManager)) {\n                imports.set(library, library);\n            }\n        }\n    }\n\n    return imports;\n}\n\n/**\n * Check if a library is imported (legacy function for backward compatibility)\n */\nexport function getImportedLibrariesSet(documentText: string, configManager?: any): Set<string> {\n    const importMap = getImportedLibraries(documentText, configManager);\n    return new Set(importMap.values());\n}\n\n/**\n * Get documentation for a third-party library symbol\n */\nexport function getThirdPartyDoc(library: string, symbol: string): LibraryDoc | null {\n    // Input validation\n    if (!library || !symbol || typeof library !== 'string' || typeof symbol !== 'string') {\n        return null;\n    }\n\n    const libraryDocs = THIRD_PARTY_LIBRARIES[library];\n    if (!libraryDocs) {\n        return null;\n    }\n\n    return libraryDocs[symbol] || null;\n}\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","module.exports = require(\"path\");","module.exports = require(\"crypto\");","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","'use strict';\n\n\nconst zlib_inflate = require('./zlib/inflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\nconst GZheader     = require('./zlib/gzheader');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = utils.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = zlib_inflate.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      zlib_inflate.inflateReset(strm);\n      status = zlib_inflate.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || msg[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = inflate;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 16209;       /* got a data error -- remain here until reset */\nconst TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"https\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"zlib\");","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","/**\n * Special methods (dunder methods) information provider\n */\n\nexport interface SpecialMethodEntry {\n    name: string;\n    kind?: 'object' | 'type';\n    desc?: string;\n}\n\n/**\n * Descriptions for special methods\n */\nexport const SPECIAL_METHOD_DESCRIPTIONS: Record<string, string> = {\n    '__init__': 'Constructor; called to initialize a newly created instance.',\n    '__repr__': 'Official string representation used for debugging.',\n    '__str__': 'User-friendly string representation.',\n    '__len__': 'Return the length of the container.',\n    '__iter__': 'Return an iterator over the container.',\n    '__contains__': 'Check membership (in operator).',\n    '__getitem__': 'Return item indexed by key.',\n    '__setitem__': 'Assign item for a key.',\n    '__enter__': 'Context manager entry (with).',\n    '__exit__': 'Context manager exit (with).',\n    '__call__': 'Make an instance callable like a function.',\n    '__new__': 'Low-level constructor; allocates instance.',\n    '__eq__': 'Equality comparison.',\n    '__lt__': 'Less-than comparison.',\n    '__getattr__': 'Fallback attribute access.',\n    '__getattribute__': 'Primary attribute access implementation.',\n    '__setattr__': 'Attribute assignment handler.',\n    '__delattr__': 'Attribute deletion handler.',\n    '__bool__': 'Boolean value of the instance.',\n    '__hash__': 'Hash value for dictionary keys.',\n    '__add__': 'Implement addition (+).',\n    '__sub__': 'Implement subtraction (-).',\n    '__mul__': 'Implement multiplication (*).',\n    '__truediv__': 'Implement division (/).',\n    '__floordiv__': 'Implement integer division (//).',\n    '__mod__': 'Implement modulo (%).',\n    '__pow__': 'Implement power (**).',\n    '__del__': 'Destructor; called when instance is about to be destroyed.',\n};\n\n/**\n * Default list of common special methods\n */\nexport const DEFAULT_SPECIAL_METHODS: SpecialMethodEntry[] = [\n    { name: '__init__' },\n    { name: '__repr__' },\n    { name: '__str__' },\n    { name: '__len__' },\n    { name: '__iter__' },\n    { name: '__contains__' },\n    { name: '__getitem__' },\n    { name: '__setitem__' },\n    { name: '__delitem__' },\n    { name: '__enter__' },\n    { name: '__exit__' },\n    { name: '__call__' },\n    { name: '__new__' },\n    { name: '__del__' }\n];\n\n/**\n * Builds a formatted section with information about special methods\n */\nexport function buildSpecialMethodsSection(className: string, methods: SpecialMethodEntry[] = DEFAULT_SPECIAL_METHODS): string {\n    const lines = [\n        `## Special Methods for \\`${className}\\` class`,\n        '',\n        'These methods have special meaning in Python:',\n        ''\n    ];\n\n    for (const method of methods) {\n        const desc = method.desc || SPECIAL_METHOD_DESCRIPTIONS[method.name] || 'Special method';\n        lines.push(`- \\`${method.name}\\`: ${desc}`);\n    }\n\n    lines.push('', 'Override these methods to customize class behavior.');\n    return lines.join('\\n');\n}\n\n/**\n * Gets information about a specific dunder method\n */\nexport function getDunderInfo(methodName: string): { description: string; example?: string } | undefined {\n    if (!methodName.startsWith('__') || !methodName.endsWith('__')) {\n        return undefined;\n    }\n\n    return {\n        description: SPECIAL_METHOD_DESCRIPTIONS[methodName] || 'Special method',\n        example: `class MyClass:\\n    def ${methodName}(self, ...):\\n        # Your implementation\\n        pass`\n    };\n}\n","import * as crypto from 'crypto';\nimport * as fs from 'fs/promises';\nimport * as path from 'path';\nimport * as vscode from 'vscode';\nimport { Logger } from './logger';\n\nexport interface CacheEntry<T> {\n    data: T;\n    timestamp: number;\n    etag?: string;\n    lastModified?: string;\n}\n\nexport class CacheManager {\n    private logger: Logger;\n    private cacheDir: string;\n\n    constructor(globalStorageUri: vscode.Uri) {\n        this.logger = Logger.getInstance();\n        this.cacheDir = path.join(globalStorageUri.fsPath, 'python-hover-cache');\n    }\n\n    private async ensureCacheDir(): Promise<void> {\n        try {\n            await fs.mkdir(this.cacheDir, { recursive: true });\n        } catch (error) {\n            // Directory might already exist\n        }\n    }\n\n    /**\n     * Generate a safe, unique cache file path using SHA256 hash\n     * This prevents collisions from similar keys (e.g., 'foo/bar' vs 'foo:bar')\n     */\n    private getCacheFilePath(key: string): string {\n        // Use SHA256 to create a unique, safe filename\n        const hash = crypto.createHash('sha256').update(key, 'utf8').digest('hex');\n        // Keep first 16 chars of hash for human readability during debugging\n        const shortHash = hash.substring(0, 16);\n        return path.join(this.cacheDir, `${shortHash}.json`);\n    }\n\n    public async get<T>(key: string): Promise<CacheEntry<T> | null> {\n        try {\n            const filePath = this.getCacheFilePath(key);\n            const content = await fs.readFile(filePath, 'utf-8');\n            return JSON.parse(content) as CacheEntry<T>;\n        } catch (error) {\n            return null;\n        }\n    }\n\n    public async set<T>(\n        key: string,\n        data: T,\n        etag?: string,\n        lastModified?: string\n    ): Promise<void> {\n        await this.ensureCacheDir();\n\n        const entry: CacheEntry<T> = {\n            data,\n            timestamp: Date.now(),\n            etag,\n            lastModified\n        };\n\n        const filePath = this.getCacheFilePath(key);\n        await fs.writeFile(filePath, JSON.stringify(entry, null, 2));\n    }\n\n    public async isExpired(key: string, maxAgeMs: number): Promise<boolean> {\n        const entry = await this.get(key);\n        if (!entry) {\n            return true;\n        }\n\n        return Date.now() - entry.timestamp > maxAgeMs;\n    }\n\n    public async delete(key: string): Promise<void> {\n        try {\n            const filePath = this.getCacheFilePath(key);\n            await fs.unlink(filePath);\n        } catch (error) {\n            // File might not exist\n        }\n    }\n\n    public async clear(): Promise<{ filesDeleted: number; success: boolean }> {\n        try {\n            this.logger.debug(`Clearing cache directory: ${this.cacheDir}`);\n            const files = await fs.readdir(this.cacheDir);\n            this.logger.debug(`Found ${files.length} cache files to delete`, files);\n\n            if (files.length === 0) {\n                this.logger.debug(`No cache files to delete`);\n                return { filesDeleted: 0, success: true };\n            }\n\n            await Promise.all(\n                files.map(async file => {\n                    const filePath = path.join(this.cacheDir, file);\n                    this.logger.debug(`Deleting cache file: ${filePath}`);\n                    return fs.unlink(filePath);\n                })\n            );\n            this.logger.debug(`Successfully deleted ${files.length} cache files`);\n            return { filesDeleted: files.length, success: true };\n        } catch (error) {\n            this.logger.error(`Error clearing cache:`, error as Error);\n            // Directory might not exist - this is not necessarily an error\n            if (error instanceof Error && 'code' in error && error.code === 'ENOENT') {\n                this.logger.debug(`Cache directory does not exist, nothing to clear`);\n                return { filesDeleted: 0, success: true };\n            }\n            return { filesDeleted: 0, success: false };\n        }\n    }\n\n    public async getStats(): Promise<{\n        fileCount: number;\n        totalSize: number;\n        cacheDir: string;\n    }> {\n        try {\n            await this.ensureCacheDir();\n            const files = await fs.readdir(this.cacheDir);\n            let totalSize = 0;\n\n            for (const file of files) {\n                try {\n                    const filePath = path.join(this.cacheDir, file);\n                    const stats = await fs.stat(filePath);\n                    totalSize += stats.size;\n                } catch (error) {\n                    // Skip files that can't be read\n                }\n            }\n\n            return {\n                fileCount: files.length,\n                totalSize,\n                cacheDir: this.cacheDir\n            };\n        } catch (error) {\n            return {\n                fileCount: 0,\n                totalSize: 0,\n                cacheDir: this.cacheDir\n            };\n        }\n    }\n\n    // Helper methods for common cache duration calculations\n    public static daysToMs(days: number): number {\n        return days * 24 * 60 * 60 * 1000;\n    }\n\n    public static hoursToMs(hours: number): number {\n        return hours * 60 * 60 * 1000;\n    }\n}\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = require('./trees');\nconst adler32 = require('./adler32');\nconst crc32   = require('./crc32');\nconst msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_PARTIAL_FLUSH, Z_FULL_FLUSH, Z_FINISH, Z_BLOCK,\n  Z_OK, Z_STREAM_END, Z_STREAM_ERROR, Z_DATA_ERROR, Z_BUF_ERROR,\n  Z_DEFAULT_COMPRESSION,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY,\n  Z_UNKNOWN,\n  Z_DEFLATED\n} = require('./constants');\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = msg[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH) ||\n                        flush === Z_NO_FLUSH ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH && flush !== Z_FINISH &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH) && flush !== Z_NO_FLUSH &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR;\n  }\n  strm.state.gzhead = head;\n  return Z_OK;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n};\n\n\n/* ========================================================================= */\nconst deflate = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n};\n\n\nmodule.exports.deflateInit = deflateInit;\nmodule.exports.deflateInit2 = deflateInit2;\nmodule.exports.deflateReset = deflateReset;\nmodule.exports.deflateResetKeep = deflateResetKeep;\nmodule.exports.deflateSetHeader = deflateSetHeader;\nmodule.exports.deflate = deflate;\nmodule.exports.deflateEnd = deflateEnd;\nmodule.exports.deflateSetDictionary = deflateSetDictionary;\nmodule.exports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n","/**\n * Utility for validating URLs and related configurations\n * Centralizes URL validation logic used across multiple components\n */\n\nexport interface URLValidationResult {\n    isValid: boolean;\n    errors: string[];\n    warnings: string[];\n}\n\nexport class URLValidator {\n    /**\n     * Validate a URL string\n     * Returns validation result with any errors or warnings\n     */\n    public static validateURL(url: string, options?: {\n        requireProtocol?: 'http' | 'https' | 'any';\n        mustEndWith?: string;\n        shouldContain?: string[];\n    }): URLValidationResult {\n        const result: URLValidationResult = {\n            isValid: true,\n            errors: [],\n            warnings: []\n        };\n\n        if (!url || typeof url !== 'string' || url.trim() === '') {\n            result.isValid = false;\n            result.errors.push('URL is empty or invalid');\n            return result;\n        }\n\n        // Parse URL\n        let parsedUrl: URL;\n        try {\n            parsedUrl = new URL(url);\n        } catch (e) {\n            result.isValid = false;\n            result.errors.push(`Invalid URL format: \"${url}\"`);\n            return result;\n        }\n\n        // Check protocol requirements\n        if (options?.requireProtocol) {\n            if (options.requireProtocol === 'any') {\n                if (!['http:', 'https:'].includes(parsedUrl.protocol)) {\n                    result.isValid = false;\n                    result.errors.push('URL must use http:// or https://');\n                }\n            } else {\n                const requiredProtocol = `${options.requireProtocol}:`;\n                if (parsedUrl.protocol !== requiredProtocol) {\n                    result.isValid = false;\n                    result.errors.push(`URL must use ${options.requireProtocol}://`);\n                }\n            }\n        }\n\n        // Check if URL ends with required string\n        if (options?.mustEndWith && !url.endsWith(options.mustEndWith)) {\n            result.warnings.push(`URL should end with ${options.mustEndWith} for proper URL resolution`);\n        }\n\n        // Check if URL contains required strings\n        if (options?.shouldContain) {\n            const missingPatterns = options.shouldContain.filter(pattern => !url.includes(pattern));\n            if (missingPatterns.length > 0) {\n                result.warnings.push(`URL may not be valid (expected to contain: ${missingPatterns.join(' or ')})`);\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Validate inventory URL (Intersphinx format)\n     */\n    public static validateInventoryURL(url: string): URLValidationResult {\n        return this.validateURL(url, {\n            requireProtocol: 'any',\n            shouldContain: ['objects.inv', '_objects']\n        });\n    }\n\n    /**\n     * Validate base URL (should end with /)\n     */\n    public static validateBaseURL(url: string): URLValidationResult {\n        return this.validateURL(url, {\n            requireProtocol: 'any',\n            mustEndWith: '/'\n        });\n    }\n\n    /**\n     * Validate a name field (alphanumeric, underscore, hyphen only)\n     */\n    public static validateName(name: string): URLValidationResult {\n        const result: URLValidationResult = {\n            isValid: true,\n            errors: [],\n            warnings: []\n        };\n\n        if (!name || typeof name !== 'string' || name.trim() === '') {\n            result.isValid = false;\n            result.errors.push('Name is empty or invalid');\n            return result;\n        }\n\n        if (!/^[a-zA-Z0-9_-]+$/.test(name)) {\n            result.warnings.push(`Name \"${name}\" contains unusual characters (expected alphanumeric, underscore, or hyphen)`);\n        }\n\n        return result;\n    }\n\n    /**\n     * Check if URL is potentially reachable (basic check)\n     * This is a synchronous check and doesn't actually make a request\n     */\n    public static isURLReachable(url: string): boolean {\n        try {\n            const parsedUrl = new URL(url);\n            // Basic checks: has protocol, has hostname\n            return ['http:', 'https:'].includes(parsedUrl.protocol) &&\n                parsedUrl.hostname.length > 0;\n        } catch {\n            return false;\n        }\n    }\n}\n","/**\n * Static examples for Python built-in functions, methods, and classes\n */\n\nexport interface ExampleEntry {\n    examples: string[];\n    description?: string;\n}\n\nexport const STATIC_EXAMPLES: Record<string, ExampleEntry> = {\n    // Built-in functions\n    'len': {\n        examples: [\n            'len(\"hello\")  # 5',\n            'len([1, 2, 3, 4])  # 4',\n            'len({\"a\": 1, \"b\": 2})  # 2'\n        ],\n        description: 'Returns the number of items in an object'\n    },\n\n    'str': {\n        examples: [\n            'str(42)  # \"42\"',\n            'str(3.14)  # \"3.14\"',\n            'str([1, 2, 3])  # \"[1, 2, 3]\"'\n        ],\n        description: 'Converts objects to string representation'\n    },\n\n    'int': {\n        examples: [\n            'int(\"42\")  # 42',\n            'int(3.14)  # 3',\n            'int(\"1010\", 2)  # 10 (binary to decimal)'\n        ],\n        description: 'Converts to integer'\n    },\n\n    'float': {\n        examples: [\n            'float(\"3.14\")  # 3.14',\n            'float(42)  # 42.0',\n            'float(\"inf\")  # inf'\n        ],\n        description: 'Converts to floating point number'\n    },\n\n    'list': {\n        examples: [\n            'list(\"abc\")  # [\"a\", \"b\", \"c\"]',\n            'list(range(3))  # [0, 1, 2]',\n            'list((1, 2, 3))  # [1, 2, 3]'\n        ],\n        description: 'Creates a list from an iterable'\n    },\n\n    'dict': {\n        examples: [\n            'dict(a=1, b=2)  # {\"a\": 1, \"b\": 2}',\n            'dict([(\"x\", 1), (\"y\", 2)])  # {\"x\": 1, \"y\": 2}',\n            'dict({\"a\": 1})  # {\"a\": 1}'\n        ],\n        description: 'Creates a dictionary'\n    },\n\n    'set': {\n        examples: [\n            'set([1, 2, 2, 3])  # {1, 2, 3}',\n            'set(\"hello\")  # {\"h\", \"e\", \"l\", \"o\"}',\n            'set()  # empty set'\n        ],\n        description: 'Creates a set from an iterable'\n    },\n\n    'range': {\n        examples: [\n            'list(range(5))  # [0, 1, 2, 3, 4]',\n            'list(range(1, 6))  # [1, 2, 3, 4, 5]',\n            'list(range(0, 10, 2))  # [0, 2, 4, 6, 8]'\n        ],\n        description: 'Creates a sequence of numbers'\n    },\n\n    'max': {\n        examples: [\n            'max(1, 3, 2)  # 3',\n            'max([1, 3, 2])  # 3',\n            'max(\"abc\", key=len)  # \"abc\"'\n        ],\n        description: 'Returns the largest item'\n    },\n\n    'min': {\n        examples: [\n            'min(1, 3, 2)  # 1',\n            'min([1, 3, 2])  # 1',\n            'min(\"hello\", \"hi\", key=len)  # \"hi\"'\n        ],\n        description: 'Returns the smallest item'\n    },\n\n    'sum': {\n        examples: [\n            'sum([1, 2, 3])  # 6',\n            'sum([1, 2, 3], 10)  # 16',\n            'sum(range(1, 5))  # 10'\n        ],\n        description: 'Sums numeric values in an iterable'\n    },\n\n    'print': {\n        examples: [\n            'print(\"Hello, World!\")',\n            'print(\"Value:\", 42)',\n            'print(\"A\", \"B\", \"C\", sep=\"-\")  # A-B-C'\n        ],\n        description: 'Prints objects to console'\n    },\n\n    'round': {\n        examples: [\n            'round(3.14159, 2)  # 3.14',\n            'round(3.7)  # 4',\n            'round(1234.5, -1)  # 1230.0'\n        ],\n        description: 'Rounds a number to given precision'\n    },\n\n    'abs': {\n        examples: [\n            'abs(-5)  # 5',\n            'abs(3.14)  # 3.14',\n            'abs(-2.7)  # 2.7'\n        ],\n        description: 'Returns the absolute value'\n    },\n\n    'all': {\n        examples: [\n            'all([True, True, True])  # True',\n            'all([True, False, True])  # False',\n            'all([1, 2, 3])  # True (all truthy)'\n        ],\n        description: 'Returns True if all elements are true'\n    },\n\n    'any': {\n        examples: [\n            'any([False, False, True])  # True',\n            'any([False, False, False])  # False',\n            'any([0, 1, 2])  # True (at least one truthy)'\n        ],\n        description: 'Returns True if any element is true'\n    },\n\n    'bool': {\n        examples: [\n            'bool(1)  # True',\n            'bool(0)  # False',\n            'bool(\"hello\")  # True'\n        ],\n        description: 'Converts to boolean value'\n    },\n\n    'next': {\n        examples: [\n            'it = iter([1, 2, 3]); next(it)  # 1',\n            'next(it, \"default\")  # returns \"default\" if exhausted',\n            'for item in my_list: break  # next() used internally'\n        ],\n        description: 'Gets next item from iterator'\n    },\n\n    'object': {\n        examples: [\n            'obj = object()  # creates empty object',\n            'class MyClass(object): pass',\n            'isinstance([], object)  # True (everything inherits from object)'\n        ],\n        description: 'Base class for all Python classes'\n    },\n\n    'oct': {\n        examples: [\n            'oct(8)  # \"0o10\"',\n            'oct(255)  # \"0o377\"',\n            'oct(-8)  # \"-0o10\"'\n        ],\n        description: 'Converts integer to octal string'\n    },\n\n    'open': {\n        examples: [\n            'with open(\"file.txt\", \"r\") as f: content = f.read()',\n            'with open(\"data.txt\", \"w\") as f: f.write(\"Hello\")',\n            'f = open(\"file.txt\", \"r\", encoding=\"utf-8\")'\n        ],\n        description: 'Opens a file and returns a file object'\n    },\n\n    'input': {\n        examples: [\n            'name = input(\"Enter name: \")',\n            'age = int(input(\"Enter age: \"))',\n            'data = input().strip()'\n        ],\n        description: 'Reads a line of input from user'\n    },\n\n    'type': {\n        examples: [\n            'type(42)  # <class \"int\">',\n            'type(\"hello\")  # <class \"str\">',\n            'type([1, 2, 3])  # <class \"list\">'\n        ],\n        description: 'Returns the type of an object'\n    },\n\n    'isinstance': {\n        examples: [\n            'isinstance(42, int)  # True',\n            'isinstance(\"hello\", str)  # True',\n            'isinstance([1, 2], (list, tuple))  # True'\n        ],\n        description: 'Checks if object is instance of class'\n    },\n\n    'hasattr': {\n        examples: [\n            'hasattr(\"hello\", \"upper\")  # True',\n            'hasattr([1, 2], \"append\")  # True',\n            'hasattr(42, \"split\")  # False'\n        ],\n        description: 'Checks if object has an attribute'\n    },\n\n    'getattr': {\n        examples: [\n            'getattr(\"hello\", \"upper\")  # <method \"upper\">',\n            'getattr(obj, \"name\", \"default\")',\n            'getattr([1, 2], \"append\")'\n        ],\n        description: 'Gets an attribute from an object'\n    },\n\n    'zip': {\n        examples: [\n            'list(zip([1, 2], [\"a\", \"b\"]))  # [(1, \"a\"), (2, \"b\")]',\n            'list(zip(\"abc\", \"123\"))  # [(\"a\", \"1\"), (\"b\", \"2\"), (\"c\", \"3\")]',\n            'dict(zip([\"x\", \"y\"], [1, 2]))  # {\"x\": 1, \"y\": 2}'\n        ],\n        description: 'Combines multiple iterables'\n    },\n\n    'enumerate': {\n        examples: [\n            'list(enumerate([\"a\", \"b\", \"c\"]))  # [(0, \"a\"), (1, \"b\"), (2, \"c\")]',\n            'list(enumerate(\"abc\", 1))  # [(1, \"a\"), (2, \"b\"), (3, \"c\")]',\n            'for i, val in enumerate(items): ...'\n        ],\n        description: 'Returns enumerated pairs of index and value'\n    },\n\n    'sorted': {\n        examples: [\n            'sorted([3, 1, 2])  # [1, 2, 3]',\n            'sorted(\"hello\")  # [\"e\", \"h\", \"l\", \"l\", \"o\"]',\n            'sorted([\"apple\", \"pie\"], key=len)  # [\"pie\", \"apple\"]'\n        ],\n        description: 'Returns a sorted list'\n    },\n\n    'reversed': {\n        examples: [\n            'list(reversed([1, 2, 3]))  # [3, 2, 1]',\n            'list(reversed(\"hello\"))  # [\"o\", \"l\", \"l\", \"e\", \"h\"]',\n            '\"\".join(reversed(\"hello\"))  # \"olleh\"'\n        ],\n        description: 'Returns a reverse iterator'\n    },\n\n    'filter': {\n        examples: [\n            'list(filter(lambda x: x > 0, [-1, 0, 1, 2]))  # [1, 2]',\n            'list(filter(str.isdigit, [\"a\", \"1\", \"b\", \"2\"]))  # [\"1\", \"2\"]',\n            'list(filter(None, [0, 1, \"\", \"hello\"]))  # [1, \"hello\"]'\n        ],\n        description: 'Filters items based on a function'\n    },\n\n    'map': {\n        examples: [\n            'list(map(str.upper, [\"a\", \"b\", \"c\"]))  # [\"A\", \"B\", \"C\"]',\n            'list(map(len, [\"hi\", \"hello\"]))  # [2, 5]',\n            'list(map(lambda x: x * 2, [1, 2, 3]))  # [2, 4, 6]'\n        ],\n        description: 'Applies function to all items'\n    },\n\n    // String methods\n    'str.upper': {\n        examples: [\n            '\"hello\".upper()  # \"HELLO\"',\n            '\"Hello World\".upper()  # \"HELLO WORLD\"',\n            'name.upper()'\n        ],\n        description: 'Converts to uppercase'\n    },\n\n    'str.lower': {\n        examples: [\n            '\"HELLO\".lower()  # \"hello\"',\n            '\"Hello World\".lower()  # \"hello world\"',\n            'text.lower()'\n        ],\n        description: 'Converts to lowercase'\n    },\n\n    'str.strip': {\n        examples: [\n            '\"  hello  \".strip()  # \"hello\"',\n            '\"...hello...\".strip(\".\")  # \"hello\"',\n            'user_input.strip()'\n        ],\n        description: 'Removes whitespace or specified characters'\n    },\n\n    'str.split': {\n        examples: [\n            '\"a,b,c\".split(\",\")  # [\"a\", \"b\", \"c\"]',\n            '\"hello world\".split()  # [\"hello\", \"world\"]',\n            '\"a:b:c\".split(\":\", 1)  # [\"a\", \"b:c\"]'\n        ],\n        description: 'Splits string into list'\n    },\n\n    'str.join': {\n        examples: [\n            '\",\".join([\"a\", \"b\", \"c\"])  # \"a,b,c\"',\n            '\" \".join([\"hello\", \"world\"])  # \"hello world\"',\n            '\"\".join([\"a\", \"b\", \"c\"])  # \"abc\"'\n        ],\n        description: 'Joins iterable with separator'\n    },\n\n    'str.replace': {\n        examples: [\n            '\"hello world\".replace(\"world\", \"Python\")  # \"hello Python\"',\n            '\"aaa\".replace(\"a\", \"b\", 2)  # \"bba\"',\n            'text.replace(\" \", \"_\")'\n        ],\n        description: 'Replaces occurrences of substring'\n    },\n\n    'str.find': {\n        examples: [\n            '\"hello\".find(\"ll\")  # 2',\n            '\"hello\".find(\"x\")  # -1',\n            '\"hello world\".find(\"world\")  # 6'\n        ],\n        description: 'Finds index of substring (-1 if not found)'\n    },\n\n    'str.startswith': {\n        examples: [\n            '\"hello\".startswith(\"he\")  # True',\n            '\"hello\".startswith(\"world\")  # False',\n            'filename.startswith(\"data_\")'\n        ],\n        description: 'Checks if string starts with prefix'\n    },\n\n    'str.endswith': {\n        examples: [\n            '\"hello.txt\".endswith(\".txt\")  # True',\n            '\"hello.txt\".endswith(\".py\")  # False',\n            'filename.endswith((\".txt\", \".csv\"))'\n        ],\n        description: 'Checks if string ends with suffix'\n    },\n\n    'str.format': {\n        examples: [\n            '\"Hello, {}!\".format(\"World\")  # \"Hello, World!\"',\n            '\"{0} {1}\".format(\"Hello\", \"World\")  # \"Hello World\"',\n            '\"{name} is {age}\".format(name=\"Alice\", age=30)'\n        ],\n        description: 'Formats string with placeholders'\n    },\n\n    // List methods\n    'list.append': {\n        examples: [\n            'lst = [1, 2]; lst.append(3)  # [1, 2, 3]',\n            'fruits.append(\"apple\")',\n            'numbers.append(len(data))'\n        ],\n        description: 'Adds item to end of list'\n    },\n\n    'list.extend': {\n        examples: [\n            'lst = [1, 2]; lst.extend([3, 4])  # [1, 2, 3, 4]',\n            'fruits.extend([\"apple\", \"banana\"])',\n            'numbers.extend(range(5))'\n        ],\n        description: 'Extends list with items from iterable'\n    },\n\n    'list.insert': {\n        examples: [\n            'lst = [1, 3]; lst.insert(1, 2)  # [1, 2, 3]',\n            'fruits.insert(0, \"apple\")',\n            'data.insert(len(data), item)'\n        ],\n        description: 'Inserts item at specified index'\n    },\n\n    'list.remove': {\n        examples: [\n            'lst = [1, 2, 3]; lst.remove(2)  # [1, 3]',\n            'fruits.remove(\"apple\")',\n            'if item in lst: lst.remove(item)'\n        ],\n        description: 'Removes first occurrence of item'\n    },\n\n    'list.pop': {\n        examples: [\n            'lst = [1, 2, 3]; lst.pop()  # 3, lst becomes [1, 2]',\n            'lst = [1, 2, 3]; lst.pop(0)  # 1, lst becomes [2, 3]',\n            'last_item = stack.pop()'\n        ],\n        description: 'Removes and returns item at index (last by default)'\n    },\n\n    'list.index': {\n        examples: [\n            '[1, 2, 3].index(2)  # 1',\n            'fruits.index(\"apple\")  # position of \"apple\"',\n            'data.index(target, start, end)'\n        ],\n        description: 'Returns index of first occurrence'\n    },\n\n    'list.count': {\n        examples: [\n            '[1, 2, 2, 3].count(2)  # 2',\n            'text.count(\"a\")  # count of \"a\" in text',\n            'votes.count(\"yes\")'\n        ],\n        description: 'Counts occurrences of item'\n    },\n\n    'list.sort': {\n        examples: [\n            'lst = [3, 1, 2]; lst.sort()  # [1, 2, 3]',\n            'names.sort(key=str.lower)',\n            'data.sort(reverse=True)'\n        ],\n        description: 'Sorts list in place'\n    },\n\n    'list.reverse': {\n        examples: [\n            'lst = [1, 2, 3]; lst.reverse()  # [3, 2, 1]',\n            'numbers.reverse()',\n            'words[::-1]  # alternative reversal'\n        ],\n        description: 'Reverses list in place'\n    },\n\n    'list.copy': {\n        examples: [\n            'original = [1, 2, 3]; copy = original.copy()',\n            'backup = data.copy()',\n            'new_list = old_list.copy()'\n        ],\n        description: 'Creates shallow copy of list'\n    },\n\n    'list.clear': {\n        examples: [\n            'lst = [1, 2, 3]; lst.clear()  # []',\n            'cache.clear()',\n            'temporary_data.clear()'\n        ],\n        description: 'Removes all items from list'\n    },\n\n    // Dictionary methods\n    'dict.get': {\n        examples: [\n            'data = {\"name\": \"Alice\"}; data.get(\"name\")  # \"Alice\"',\n            'data.get(\"age\", 0)  # 0 (default)',\n            'config.get(\"debug\", False)'\n        ],\n        description: 'Gets value for key with optional default'\n    },\n\n    'dict.keys': {\n        examples: [\n            'data = {\"a\": 1, \"b\": 2}; list(data.keys())  # [\"a\", \"b\"]',\n            'for key in data.keys(): ...',\n            'set(config.keys())'\n        ],\n        description: 'Returns view of dictionary keys'\n    },\n\n    'dict.values': {\n        examples: [\n            'data = {\"a\": 1, \"b\": 2}; list(data.values())  # [1, 2]',\n            'for value in data.values(): ...',\n            'sum(scores.values())'\n        ],\n        description: 'Returns view of dictionary values'\n    },\n\n    'dict.items': {\n        examples: [\n            'data = {\"a\": 1, \"b\": 2}; list(data.items())  # [(\"a\", 1), (\"b\", 2)]',\n            'for key, value in data.items(): ...',\n            'dict(reversed(data.items()))'\n        ],\n        description: 'Returns view of key-value pairs'\n    },\n\n    'dict.update': {\n        examples: [\n            'data = {\"a\": 1}; data.update({\"b\": 2})  # {\"a\": 1, \"b\": 2}',\n            'config.update(new_settings)',\n            'data.update(b=2, c=3)'\n        ],\n        description: 'Updates dictionary with key-value pairs'\n    },\n\n    'dict.pop': {\n        examples: [\n            'data = {\"a\": 1, \"b\": 2}; data.pop(\"a\")  # 1',\n            'value = cache.pop(\"key\", None)',\n            'last_item = data.pop(\"last\", \"default\")'\n        ],\n        description: 'Removes and returns value for key'\n    },\n\n    'dict.setdefault': {\n        examples: [\n            'data = {}; data.setdefault(\"count\", 0)  # 0',\n            'groups.setdefault(key, []).append(item)',\n            'cache.setdefault(url, fetch_data(url))'\n        ],\n        description: 'Gets value or sets default if key missing'\n    },\n\n    // Set methods\n    'set.add': {\n        examples: [\n            'data = {1, 2}; data.add(3)  # {1, 2, 3}',\n            'seen.add(item)',\n            'valid_ids.add(user_id)'\n        ],\n        description: 'Adds element to set'\n    },\n\n    'set.remove': {\n        examples: [\n            'data = {1, 2, 3}; data.remove(2)  # {1, 3}',\n            'active_users.remove(user_id)',\n            'if item in data: data.remove(item)'\n        ],\n        description: 'Removes element from set (raises KeyError if not found)'\n    },\n\n    'set.discard': {\n        examples: [\n            'data = {1, 2, 3}; data.discard(2)  # {1, 3}',\n            'data.discard(999)  # no error if not found',\n            'seen.discard(old_item)'\n        ],\n        description: 'Removes element from set (no error if not found)'\n    },\n\n    'set.union': {\n        examples: [\n            '{1, 2}.union({2, 3})  # {1, 2, 3}',\n            'set1 | set2  # alternative syntax',\n            'all_items = set1.union(set2, set3)'\n        ],\n        description: 'Returns union of sets'\n    },\n\n    'set.intersection': {\n        examples: [\n            '{1, 2, 3}.intersection({2, 3, 4})  # {2, 3}',\n            'set1 & set2  # alternative syntax',\n            'common = users1.intersection(users2)'\n        ],\n        description: 'Returns intersection of sets'\n    },\n\n    'set.difference': {\n        examples: [\n            '{1, 2, 3}.difference({2, 4})  # {1, 3}',\n            'set1 - set2  # alternative syntax',\n            'unique = all_items.difference(common)'\n        ],\n        description: 'Returns elements in set but not in others'\n    },\n\n    // Special/dunder methods\n    '__init__': {\n        examples: [\n            'def __init__(self, name): self.name = name',\n            'def __init__(self, x, y=0): ...',\n            'super().__init__(args)'\n        ],\n        description: 'Constructor method called when creating instances'\n    },\n\n    '__str__': {\n        examples: [\n            'def __str__(self): return f\"Person({self.name})\"',\n            'def __str__(self): return str(self.value)',\n            'str(obj)  # calls obj.__str__()'\n        ],\n        description: 'Returns string representation for humans'\n    },\n\n    '__repr__': {\n        examples: [\n            'def __repr__(self): return f\"Point({self.x}, {self.y})\"',\n            'def __repr__(self): return f\"{self.__class__.__name__}({self.data!r})\"',\n            'repr(obj)  # calls obj.__repr__()'\n        ],\n        description: 'Returns unambiguous string representation for developers'\n    },\n\n    '__len__': {\n        examples: [\n            'def __len__(self): return len(self.items)',\n            'def __len__(self): return self.size',\n            'len(obj)  # calls obj.__len__()'\n        ],\n        description: 'Returns length when len() is called'\n    },\n\n    '__getitem__': {\n        examples: [\n            'def __getitem__(self, key): return self.data[key]',\n            'def __getitem__(self, index): return self.items[index]',\n            'obj[key]  # calls obj.__getitem__(key)'\n        ],\n        description: 'Enables indexing with []'\n    },\n\n    '__setitem__': {\n        examples: [\n            'def __setitem__(self, key, value): self.data[key] = value',\n            'def __setitem__(self, index, value): self.items[index] = value',\n            'obj[key] = value  # calls obj.__setitem__(key, value)'\n        ],\n        description: 'Enables item assignment with []'\n    },\n\n    '__contains__': {\n        examples: [\n            'def __contains__(self, item): return item in self.data',\n            'def __contains__(self, value): return value in self.items',\n            'item in obj  # calls obj.__contains__(item)'\n        ],\n        description: 'Enables membership testing with \"in\"'\n    },\n\n    '__iter__': {\n        examples: [\n            'def __iter__(self): return iter(self.items)',\n            'def __iter__(self): yield from self.data',\n            'for item in obj:  # calls obj.__iter__()'\n        ],\n        description: 'Makes object iterable'\n    },\n\n    '__call__': {\n        examples: [\n            'def __call__(self, *args): return self.func(*args)',\n            'def __call__(self, x): return self.multiplier * x',\n            'obj()  # calls obj.__call__()'\n        ],\n        description: 'Makes object callable like a function'\n    },\n\n    '__enter__': {\n        examples: [\n            'def __enter__(self): return self',\n            'def __enter__(self): self.file = open(self.filename); return self.file',\n            'with obj:  # calls obj.__enter__()'\n        ],\n        description: 'Context manager entry'\n    },\n\n    '__exit__': {\n        examples: [\n            'def __exit__(self, exc_type, exc_val, exc_tb): return False',\n            'def __exit__(self, *args): self.cleanup(); return False',\n            '# called when exiting \"with\" statement'\n        ],\n        description: 'Context manager exit'\n    },\n\n    // More built-in functions\n    'bin': {\n        examples: [\n            'bin(8)  # \"0b1000\"',\n            'bin(255)  # \"0b11111111\"',\n            'bin(-8)  # \"-0b1000\"'\n        ],\n        description: 'Converts integer to binary string'\n    },\n\n    'hex': {\n        examples: [\n            'hex(255)  # \"0xff\"',\n            'hex(16)  # \"0x10\"',\n            'hex(-255)  # \"-0xff\"'\n        ],\n        description: 'Converts integer to hexadecimal string'\n    },\n\n    'ord': {\n        examples: [\n            'ord(\"A\")  # 65',\n            'ord(\"a\")  # 97',\n            'ord(\"€\")  # 8364'\n        ],\n        description: 'Returns Unicode code point of character'\n    },\n\n    'chr': {\n        examples: [\n            'chr(65)  # \"A\"',\n            'chr(97)  # \"a\"',\n            'chr(8364)  # \"€\"'\n        ],\n        description: 'Returns character for Unicode code point'\n    },\n\n    'id': {\n        examples: [\n            'x = [1, 2, 3]; id(x)  # unique object ID',\n            'id(\"hello\")  # memory address',\n            'a = b = []; id(a) == id(b)  # True'\n        ],\n        description: 'Returns unique identifier of an object'\n    },\n\n    'hash': {\n        examples: [\n            'hash(\"hello\")  # hash value of string',\n            'hash(42)  # hash value of integer',\n            'hash((1, 2, 3))  # hash value of tuple'\n        ],\n        description: 'Returns hash value of an object'\n    },\n\n    'pow': {\n        examples: [\n            'pow(2, 3)  # 8',\n            'pow(2, 3, 5)  # 3 (2**3 % 5)',\n            'pow(10, -2)  # 0.01'\n        ],\n        description: 'Returns x to the power of y, optionally modulo z'\n    },\n\n    'divmod': {\n        examples: [\n            'divmod(10, 3)  # (3, 1)',\n            'divmod(9, 4)  # (2, 1)',\n            'divmod(20, 6)  # (3, 2)'\n        ],\n        description: 'Returns quotient and remainder as tuple'\n    },\n\n    'callable': {\n        examples: [\n            'callable(len)  # True',\n            'callable(42)  # False',\n            'callable(lambda x: x)  # True'\n        ],\n        description: 'Checks if object is callable'\n    },\n\n    'iter': {\n        examples: [\n            'it = iter([1, 2, 3])',\n            'it = iter(\"hello\")',\n            'it = iter({\"a\": 1, \"b\": 2})'\n        ],\n        description: 'Creates an iterator from an iterable'\n    },\n\n    'globals': {\n        examples: [\n            'globals()  # dict of global variables',\n            'globals()[\"__name__\"]  # module name',\n            '\"my_var\" in globals()  # check if exists'\n        ],\n        description: 'Returns dictionary of global variables'\n    },\n\n    'locals': {\n        examples: [\n            'def func(): print(locals())  # local variables',\n            'locals()  # current local scope',\n            'x = 5; \"x\" in locals()  # True'\n        ],\n        description: 'Returns dictionary of local variables'\n    },\n\n    'vars': {\n        examples: [\n            'vars()  # same as locals()',\n            'vars(obj)  # obj.__dict__',\n            'class C: pass; vars(C())  # {}'\n        ],\n        description: 'Returns __dict__ attribute of object'\n    },\n\n    'dir': {\n        examples: [\n            'dir([])  # list methods and attributes',\n            'dir(str)  # string class methods',\n            'dir()  # names in current scope'\n        ],\n        description: 'Lists attributes of an object'\n    },\n\n    'eval': {\n        examples: [\n            'eval(\"2 + 3\")  # 5',\n            'eval(\"len([1, 2, 3])\")  # 3',\n            'x = 5; eval(\"x * 2\")  # 10'\n        ],\n        description: 'Evaluates a string as Python expression'\n    },\n\n    'exec': {\n        examples: [\n            'exec(\"print(\\'Hello\\')\")  # Hello',\n            'exec(\"x = 5\\\\nprint(x)\")  # 5',\n            'code = \"for i in range(3): print(i)\"; exec(code)'\n        ],\n        description: 'Executes Python code from string'\n    },\n\n    'compile': {\n        examples: [\n            'code = compile(\"2 + 3\", \"<string>\", \"eval\")',\n            'compiled = compile(\"print(x)\", \"<string>\", \"exec\")',\n            'eval(compile(\"1 + 1\", \"<string>\", \"eval\"))  # 2'\n        ],\n        description: 'Compiles source into code object'\n    },\n\n    'repr': {\n        examples: [\n            'repr(\"hello\")  # \"\\'hello\\'\"',\n            'repr([1, 2, 3])  # \"[1, 2, 3]\"',\n            'repr({\"a\": 1})  # \"{\\'a\\': 1}\"'\n        ],\n        description: 'Returns unambiguous string representation'\n    },\n\n    'ascii': {\n        examples: [\n            'ascii(\"hello\")  # \"\\'hello\\'\"',\n            'ascii(\"café\")  # \"\\'caf\\\\xe9\\'\"',\n            'ascii(\"🐍\")  # \"\\'\\\\U0001f40d\\'\"'\n        ],\n        description: 'Returns ASCII-only string representation'\n    },\n\n    'format': {\n        examples: [\n            'format(42, \"d\")  # \"42\"',\n            'format(3.14159, \".2f\")  # \"3.14\"',\n            'format(255, \"x\")  # \"ff\"'\n        ],\n        description: 'Formats a value using format specification'\n    },\n\n    'slice': {\n        examples: [\n            's = slice(1, 5); [1,2,3,4,5,6][s]  # [2,3,4,5]',\n            'slice(None, 3)  # equivalent to [:3]',\n            'slice(1, None, 2)  # equivalent to [1::2]'\n        ],\n        description: 'Creates a slice object'\n    },\n\n    'memoryview': {\n        examples: [\n            'mv = memoryview(b\"hello\")',\n            'mv = memoryview(bytearray(b\"hello\"))',\n            'list(memoryview(b\"abc\"))  # [97, 98, 99]'\n        ],\n        description: 'Creates a memory view object'\n    },\n\n    'bytearray': {\n        examples: [\n            'bytearray(b\"hello\")  # mutable bytes',\n            'bytearray([65, 66, 67])  # bytearray(b\"ABC\")',\n            'bytearray(5)  # 5 zero bytes'\n        ],\n        description: 'Creates a mutable byte array'\n    },\n\n    'bytes': {\n        examples: [\n            'bytes(\"hello\", \"utf-8\")  # b\"hello\"',\n            'bytes([65, 66, 67])  # b\"ABC\"',\n            'bytes(5)  # b\"\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\"'\n        ],\n        description: 'Creates immutable bytes object'\n    },\n\n    'complex': {\n        examples: [\n            'complex(3, 4)  # (3+4j)',\n            'complex(\"3+4j\")  # (3+4j)',\n            'complex(2.5)  # (2.5+0j)'\n        ],\n        description: 'Creates complex number'\n    },\n\n    'frozenset': {\n        examples: [\n            'frozenset([1, 2, 3, 2])  # frozenset({1, 2, 3})',\n            'frozenset(\"hello\")  # frozenset({\"h\", \"e\", \"l\", \"o\"})',\n            'frozenset()  # empty frozenset'\n        ],\n        description: 'Creates immutable set'\n    },\n\n    'property': {\n        examples: [\n            '@property\\\\ndef name(self): return self._name',\n            'name = property(get_name, set_name)',\n            'class C: x = property(lambda self: self._x)'\n        ],\n        description: 'Creates a property attribute'\n    },\n\n    'staticmethod': {\n        examples: [\n            '@staticmethod\\\\ndef add(x, y): return x + y',\n            'add = staticmethod(lambda x, y: x + y)',\n            'class Math: add = staticmethod(lambda x, y: x + y)'\n        ],\n        description: 'Creates static method'\n    },\n\n    'classmethod': {\n        examples: [\n            '@classmethod\\\\ndef from_string(cls, s): return cls(s)',\n            'from_str = classmethod(lambda cls, s: cls(s))',\n            'class Person: create = classmethod(lambda cls, name: cls(name))'\n        ],\n        description: 'Creates class method'\n    },\n\n    'super': {\n        examples: [\n            'super().__init__(args)',\n            'super(Child, self).method()',\n            'class Child(Parent): def __init__(self): super().__init__()'\n        ],\n        description: 'Returns proxy object for method calls to parent'\n    },\n\n    // Keywords and control structures\n    'if': {\n        examples: [\n            'if x > 0: print(\"positive\")',\n            'if condition: do_something() else: do_other()',\n            'value = x if x > 0 else 0  # ternary operator'\n        ],\n        description: 'Conditional statement'\n    },\n\n    'else': {\n        examples: [\n            '# If-else statement',\n            'if age >= 18:',\n            '    print(\"Adult\")',\n            'else:',\n            '    print(\"Minor\")',\n            '',\n            '# Multiple conditions',\n            'if score >= 90:',\n            '    grade = \"A\"',\n            'elif score >= 80:',\n            '    grade = \"B\"',\n            'else:',\n            '    grade = \"C\"',\n            '',\n            '# For-else loop',\n            'for item in search_list:',\n            '    if item == target:',\n            '        print(\"Found!\")',\n            '        break',\n            'else:',\n            '    print(\"Not found\")',\n            '',\n            '# While-else loop',\n            'while attempts < max_attempts:',\n            '    if try_operation():',\n            '        print(\"Success!\")',\n            '        break',\n            '    attempts += 1',\n            'else:',\n            '    print(\"Failed after all attempts\")',\n            '',\n            '# Try-else (no exception)',\n            'try:',\n            '    result = risky_operation()',\n            'except ValueError:',\n            '    print(\"Error occurred\")',\n            'else:',\n            '    print(\"No exception, result:\", result)',\n            '',\n            '# Ternary operator with else',\n            'status = \"pass\" if score >= 60 else \"fail\"',\n            'max_val = a if a > b else b'\n        ],\n        description: 'Else clause used with if, for, while, and try statements'\n    },\n\n    'for': {\n        examples: [\n            '# Basic iteration',\n            'for i in range(5): print(i)  # 0, 1, 2, 3, 4',\n            'for item in [1, 2, 3]: print(item)',\n            'for char in \"hello\": print(char)',\n            '',\n            '# Dictionary iteration',\n            'for key in my_dict: print(key)',\n            'for key, value in my_dict.items(): print(key, value)',\n            'for value in my_dict.values(): print(value)',\n            '',\n            '# Enumerate with index',\n            'for i, item in enumerate(my_list): print(i, item)',\n            'for i, char in enumerate(\"abc\", 1): print(i, char)  # start=1',\n            '',\n            '# Multiple iterables',\n            'for x, y in zip(list1, list2): print(x, y)',\n            'for item in itertools.chain(list1, list2): print(item)',\n            '',\n            '# List comprehensions',\n            'squares = [x**2 for x in range(5)]',\n            'evens = [x for x in range(10) if x % 2 == 0]',\n            'pairs = [(x, y) for x in range(3) for y in range(3)]',\n            '',\n            '# Nested loops',\n            'for i in range(3):',\n            '    for j in range(3):',\n            '        print(f\"({i}, {j})\")',\n            '',\n            '# With else clause',\n            'for item in my_list:',\n            '    if condition(item): break',\n            'else:',\n            '    print(\"No item found\")',\n            '',\n            '# Advanced patterns',\n            'for line in open(\"file.txt\"): print(line.strip())',\n            'for match in re.finditer(pattern, text): print(match.group())',\n            'for item in reversed(my_list): print(item)'\n        ],\n        description: 'For loop statement with comprehensive iteration patterns'\n    },\n\n    'while': {\n        examples: [\n            '# Basic while loop',\n            'x = 5',\n            'while x > 0:',\n            '    print(x)',\n            '    x -= 1',\n            '',\n            '# Infinite loop with break',\n            'while True:',\n            '    user_input = input(\"Enter command: \")',\n            '    if user_input == \"quit\":',\n            '        break',\n            '    process_command(user_input)',\n            '',\n            '# While with else clause',\n            'while condition:',\n            '    if found_what_we_need:',\n            '        break',\n            '    do_something()',\n            'else:',\n            '    print(\"Loop completed without break\")',\n            '',\n            '# Common patterns',\n            'while items:  # while list is not empty',\n            '    item = items.pop()',\n            '    process(item)',\n            '',\n            'while line := file.readline():  # walrus operator',\n            '    process_line(line)'\n        ],\n        description: 'While loop with comprehensive patterns'\n    },\n\n    'def': {\n        examples: [\n            '# Basic function',\n            'def greet(name):',\n            '    return f\"Hello, {name}!\"',\n            '',\n            '# Function with default arguments',\n            'def power(base, exponent=2):',\n            '    return base ** exponent',\n            '',\n            '# Function with *args and **kwargs',\n            'def flexible_func(*args, **kwargs):',\n            '    print(f\"Args: {args}, Kwargs: {kwargs}\")',\n            '',\n            '# Type hints',\n            'def add_numbers(a: int, b: int) -> int:',\n            '    return a + b',\n            '',\n            '# Nested functions',\n            'def outer_func(x):',\n            '    def inner_func(y):',\n            '        return x + y',\n            '    return inner_func',\n            '',\n            '# Decorators',\n            '@staticmethod',\n            'def utility_func():',\n            '    return \"I am a static method\"',\n            '',\n            '# Lambda functions',\n            'square = lambda x: x ** 2',\n            'sorted(items, key=lambda x: x.name)',\n            '',\n            '# Generator functions',\n            'def countdown(n):',\n            '    while n > 0:',\n            '        yield n',\n            '        n -= 1'\n        ],\n        description: 'Function definition with comprehensive patterns'\n    },\n\n    'class': {\n        examples: [\n            '# Basic class',\n            'class Person:',\n            '    def __init__(self, name, age):',\n            '        self.name = name',\n            '        self.age = age',\n            '',\n            '    def greet(self):',\n            '        return f\"Hi, I\\'m {self.name}\"',\n            '',\n            '# Class with inheritance',\n            'class Student(Person):',\n            '    def __init__(self, name, age, student_id):',\n            '        super().__init__(name, age)',\n            '        self.student_id = student_id',\n            '',\n            '# Class with properties',\n            'class Circle:',\n            '    def __init__(self, radius):',\n            '        self._radius = radius',\n            '',\n            '    @property',\n            '    def area(self):',\n            '        return 3.14159 * self._radius ** 2',\n            '',\n            '# Class with class methods',\n            'class MathUtils:',\n            '    PI = 3.14159',\n            '',\n            '    @classmethod',\n            '    def from_diameter(cls, diameter):',\n            '        return cls(diameter / 2)',\n            '',\n            '    @staticmethod',\n            '    def degrees_to_radians(degrees):',\n            '        return degrees * MathUtils.PI / 180',\n            '',\n            '# Abstract base class',\n            'from abc import ABC, abstractmethod',\n            '',\n            'class Shape(ABC):',\n            '    @abstractmethod',\n            '    def area(self):',\n            '        pass',\n            '',\n            '# Data classes (Python 3.7+)',\n            'from dataclasses import dataclass',\n            '',\n            '@dataclass',\n            'class Point:',\n            '    x: float',\n            '    y: float',\n            '',\n            '    def distance(self, other):',\n            '        return ((self.x - other.x)**2 + (self.y - other.y)**2)**0.5'\n        ],\n        description: 'Class definition with comprehensive patterns'\n    },\n\n    'try': {\n        examples: [\n            'try: risky_operation() except Exception: handle_error()',\n            'try: x = int(s) except ValueError: x = 0',\n            'try: do_something() finally: cleanup()'\n        ],\n        description: 'Exception handling'\n    },\n\n    'except': {\n        examples: [\n            'except ValueError: print(\"Invalid value\")',\n            'except (TypeError, ValueError): handle_error()',\n            'except Exception as e: print(f\"Error: {e}\")'\n        ],\n        description: 'Exception handler'\n    },\n\n    'finally': {\n        examples: [\n            'try: do_work() finally: cleanup()',\n            'finally: close_file()',\n            'try: risky() except: handle() finally: cleanup()'\n        ],\n        description: 'Always executed cleanup code'\n    },\n\n    'with': {\n        examples: [\n            'with open(\"file.txt\") as f: content = f.read()',\n            'with lock: critical_section()',\n            'with context_manager as cm: use(cm)'\n        ],\n        description: 'Context manager statement'\n    },\n\n    'import': {\n        examples: [\n            'import os',\n            'import json as js',\n            'import sys, os, re'\n        ],\n        description: 'Module import statement'\n    },\n\n    'from': {\n        examples: [\n            'from os import path',\n            'from json import loads, dumps',\n            'from . import module  # relative import'\n        ],\n        description: 'Selective import statement'\n    },\n\n    'return': {\n        examples: [\n            'def func(): return 42',\n            'return x + y',\n            'return  # returns None'\n        ],\n        description: 'Function return statement'\n    },\n\n    'yield': {\n        examples: [\n            'def gen(): yield 1; yield 2',\n            'yield from range(5)',\n            'result = yield value  # generator receives value'\n        ],\n        description: 'Generator yield statement'\n    },\n\n    'lambda': {\n        examples: [\n            'square = lambda x: x ** 2',\n            'sorted(items, key=lambda x: x.name)',\n            'map(lambda x: x * 2, [1, 2, 3])'\n        ],\n        description: 'Anonymous function expression'\n    },\n\n    'pass': {\n        examples: [\n            'if condition: pass  # placeholder',\n            'def todo(): pass  # not implemented yet',\n            'class EmptyClass: pass'\n        ],\n        description: 'No-operation placeholder'\n    },\n\n    'break': {\n        examples: [\n            'for i in range(10): if i == 5: break',\n            'while True: if done: break',\n            'for item in items: if item is None: break'\n        ],\n        description: 'Exit from loop'\n    },\n\n    'continue': {\n        examples: [\n            'for i in range(10): if i % 2: continue; print(i)',\n            'while True: if skip_condition: continue',\n            'for item in items: if not valid(item): continue'\n        ],\n        description: 'Skip to next loop iteration'\n    },\n\n    'raise': {\n        examples: [\n            'raise ValueError(\"Invalid input\")',\n            'raise  # re-raise current exception',\n            'raise CustomError(\"Something went wrong\") from e'\n        ],\n        description: 'Raise an exception'\n    },\n\n    'assert': {\n        examples: [\n            'assert x > 0, \"x must be positive\"',\n            'assert len(items) == 5',\n            'assert callable(func), \"func must be callable\"'\n        ],\n        description: 'Debug assertion statement'\n    },\n\n    'del': {\n        examples: [\n            'del my_list[0]  # delete first element',\n            'del my_dict[\"key\"]  # delete dictionary entry',\n            'del variable  # delete variable'\n        ],\n        description: 'Delete statement'\n    },\n\n    'global': {\n        examples: [\n            'def func(): global x; x = 10',\n            'global counter; counter += 1',\n            'def reset(): global data; data = []'\n        ],\n        description: 'Declare global variable'\n    },\n\n    'nonlocal': {\n        examples: [\n            'def outer(): x = 1; def inner(): nonlocal x; x = 2',\n            'nonlocal counter; counter += 1',\n            'def closure(): nonlocal state; state = \"changed\"'\n        ],\n        description: 'Declare nonlocal variable'\n    },\n\n    // Boolean and None\n    'True': {\n        examples: [\n            'x = True',\n            'if True: print(\"always runs\")',\n            'bool(1) == True  # True'\n        ],\n        description: 'Boolean true value'\n    },\n\n    'False': {\n        examples: [\n            'x = False',\n            'if not False: print(\"runs\")',\n            'bool(0) == False  # True'\n        ],\n        description: 'Boolean false value'\n    },\n\n    'None': {\n        examples: [\n            'x = None',\n            'if x is None: print(\"x is None\")',\n            'def func(): return None  # implicit'\n        ],\n        description: 'Null value'\n    },\n\n    // Common exceptions\n    'Exception': {\n        examples: [\n            'try: risky() except Exception: handle()',\n            'raise Exception(\"Generic error\")',\n            'class CustomError(Exception): pass'\n        ],\n        description: 'Base exception class'\n    },\n\n    'ValueError': {\n        examples: [\n            'try: int(\"not_a_number\") except ValueError: handle()',\n            'raise ValueError(\"Invalid value provided\")',\n            'if x < 0: raise ValueError(\"x must be non-negative\")'\n        ],\n        description: 'Invalid value exception'\n    },\n\n    'TypeError': {\n        examples: [\n            'try: \"string\" + 5 except TypeError: handle()',\n            'raise TypeError(\"Expected string, got int\")',\n            'if not isinstance(x, str): raise TypeError(\"x must be string\")'\n        ],\n        description: 'Type-related exception'\n    },\n\n    'KeyError': {\n        examples: [\n            'try: my_dict[\"missing_key\"] except KeyError: handle()',\n            'raise KeyError(\"Key not found\")',\n            'if key not in my_dict: raise KeyError(f\"Missing key: {key}\")'\n        ],\n        description: 'Dictionary key not found exception'\n    },\n\n    'IndexError': {\n        examples: [\n            'try: my_list[100] except IndexError: handle()',\n            'raise IndexError(\"List index out of range\")',\n            'if i >= len(my_list): raise IndexError(\"Index too large\")'\n        ],\n        description: 'Sequence index out of range exception'\n    },\n\n    'AttributeError': {\n        examples: [\n            'try: obj.missing_attr except AttributeError: handle()',\n            'raise AttributeError(\"Object has no attribute \\'x\\'\")',\n            'if not hasattr(obj, \"attr\"): raise AttributeError(\"Missing attr\")'\n        ],\n        description: 'Attribute not found exception'\n    },\n\n    'FileNotFoundError': {\n        examples: [\n            'try: open(\"missing.txt\") except FileNotFoundError: handle()',\n            'raise FileNotFoundError(\"File does not exist\")',\n            'if not os.path.exists(path): raise FileNotFoundError(path)'\n        ],\n        description: 'File not found exception'\n    },\n\n    'ImportError': {\n        examples: [\n            'try: import missing_module except ImportError: handle()',\n            'raise ImportError(\"Cannot import required module\")',\n            'try: from module import func except ImportError: func = None'\n        ],\n        description: 'Module import failed exception'\n    },\n\n    'ZeroDivisionError': {\n        examples: [\n            'try: x / 0 except ZeroDivisionError: handle()',\n            'raise ZeroDivisionError(\"Division by zero\")',\n            'if divisor == 0: raise ZeroDivisionError(\"Cannot divide by zero\")'\n        ],\n        description: 'Division by zero exception'\n    },\n\n    'StopIteration': {\n        examples: [\n            'try: next(iterator) except StopIteration: handle()',\n            'raise StopIteration(\"Iterator exhausted\")',\n            'def my_generator(): yield 1; raise StopIteration'\n        ],\n        description: 'Iterator exhausted exception'\n    },\n\n    // File operations (comprehensive)\n    'file-operations': {\n        examples: [\n            '# Reading files',\n            'with open(\"file.txt\", \"r\") as f: content = f.read()',\n            'with open(\"file.txt\", \"r\", encoding=\"utf-8\") as f: lines = f.readlines()',\n            'with open(\"data.json\", \"r\") as f: data = json.load(f)',\n            '',\n            '# Writing files',\n            'with open(\"output.txt\", \"w\") as f: f.write(\"Hello\")',\n            'with open(\"data.json\", \"w\") as f: json.dump(data, f)',\n            'with open(\"log.txt\", \"a\") as f: f.write(\"New entry\\\\n\")',\n            '',\n            '# Binary files',\n            'with open(\"image.jpg\", \"rb\") as f: data = f.read()',\n            'with open(\"output.bin\", \"wb\") as f: f.write(bytes_data)',\n            '',\n            '# Advanced modes',\n            'f = open(\"file.txt\", \"r+\")  # read and write',\n            'f = open(\"file.txt\", \"x\")   # exclusive creation'\n        ],\n        description: 'Comprehensive file operation patterns'\n    },\n\n    // String formatting\n    'f-string': {\n        examples: [\n            'name = \"Alice\"; f\"Hello, {name}!\"  # \"Hello, Alice!\"',\n            'x = 42; f\"The answer is {x}\"  # \"The answer is 42\"',\n            'pi = 3.14159; f\"Pi is {pi:.2f}\"  # \"Pi is 3.14\"',\n            'items = [1, 2, 3]; f\"Items: {items}\"  # \"Items: [1, 2, 3]\"',\n            '',\n            '# Expressions in f-strings',\n            'f\"{2 + 3}\"  # \"5\"',\n            'f\"{len([1, 2, 3])}\"  # \"3\"',\n            'f\"{\\'hello\\'.upper()}\"  # \"HELLO\"',\n            '',\n            '# Format specifiers',\n            'f\"{42:05d}\"  # \"00042\" (zero-padded)',\n            'f\"{3.14159:.3f}\"  # \"3.142\" (3 decimal places)',\n            'f\"{255:x}\"  # \"ff\" (hexadecimal)',\n            'f\"{1000000:,}\"  # \"1,000,000\" (thousands separator)'\n        ],\n        description: 'F-string literal for formatted string expressions'\n    },\n\n    // Comprehensions\n    'list-comprehension': {\n        examples: [\n            '# Basic list comprehensions',\n            '[x**2 for x in range(5)]  # [0, 1, 4, 9, 16]',\n            '[x for x in range(10) if x % 2 == 0]  # [0, 2, 4, 6, 8]',\n            '[len(word) for word in [\"hello\", \"world\"]]  # [5, 5]',\n            '',\n            '# Nested comprehensions',\n            '[[x*y for x in range(3)] for y in range(3)]',\n            '[x for sublist in lists for x in sublist]  # flatten',\n            '',\n            '# With functions',\n            '[word.upper() for word in words]',\n            '[int(x) for x in \"12345\"]  # [1, 2, 3, 4, 5]',\n            '',\n            '# Complex conditions',\n            '[x for x in range(20) if x % 2 == 0 if x % 3 == 0]',\n            '[x if x > 0 else 0 for x in numbers]  # conditional expression'\n        ],\n        description: 'List comprehension syntax for creating lists'\n    },\n\n    'dict-comprehension': {\n        examples: [\n            '# Basic dict comprehensions',\n            '{x: x**2 for x in range(5)}  # {0: 0, 1: 1, 2: 4, 3: 9, 4: 16}',\n            '{word: len(word) for word in [\"hello\", \"world\"]}',\n            '{k: v.upper() for k, v in my_dict.items()}',\n            '',\n            '# With conditions',\n            '{x: x**2 for x in range(10) if x % 2 == 0}',\n            '{k: v for k, v in my_dict.items() if v is not None}',\n            '',\n            '# From sequences',\n            '{i: chr(65+i) for i in range(26)}  # {0: \"A\", 1: \"B\", ...}',\n            'dict(enumerate([\"a\", \"b\", \"c\"]))  # {0: \"a\", 1: \"b\", 2: \"c\"}'\n        ],\n        description: 'Dictionary comprehension syntax for creating dictionaries'\n    },\n\n    'set-comprehension': {\n        examples: [\n            '# Basic set comprehensions',\n            '{x**2 for x in range(5)}  # {0, 1, 4, 9, 16}',\n            '{len(word) for word in words}',\n            '{x % 3 for x in range(10)}  # {0, 1, 2}',\n            '',\n            '# With conditions',\n            '{x for x in range(20) if x % 2 == 0}',\n            '{word.lower() for word in words if len(word) > 3}'\n        ],\n        description: 'Set comprehension syntax for creating sets'\n    },\n\n    // Generator expressions\n    'generator-expression': {\n        examples: [\n            '# Basic generator expressions',\n            'gen = (x**2 for x in range(5))',\n            'sum(x for x in range(100) if x % 2 == 0)',\n            'max(len(line) for line in file)',\n            '',\n            '# Memory efficient',\n            'total = sum(x**2 for x in huge_list)  # no intermediate list',\n            'any(x > 100 for x in numbers)  # stops at first True',\n            'all(x > 0 for x in numbers)  # stops at first False',\n            '',\n            '# Chaining',\n            'words = (line.strip() for line in file)',\n            'lengths = (len(word) for word in words)',\n            'result = list(lengths)'\n        ],\n        description: 'Generator expression for memory-efficient iteration'\n    },\n\n    // Advanced string methods\n    'str.format_map': {\n        examples: [\n            'template = \"Hello {name}, you are {age} years old\"',\n            'data = {\"name\": \"Alice\", \"age\": 30}',\n            'template.format_map(data)  # \"Hello Alice, you are 30 years old\"',\n            '',\n            'class SafeDict(dict):',\n            '    def __missing__(self, key): return \"{\" + key + \"}\"',\n            'template.format_map(SafeDict(name=\"Bob\"))  # missing keys safe'\n        ],\n        description: 'Formats string using mapping object'\n    },\n\n    'str.partition': {\n        examples: [\n            '\"hello-world-python\".partition(\"-\")  # (\"hello\", \"-\", \"world-python\")',\n            '\"no-separator\".partition(\"-\")  # (\"no-separator\", \"\", \"\")',\n            'email = \"user@domain.com\"',\n            'username, sep, domain = email.partition(\"@\")'\n        ],\n        description: 'Splits string into three parts around separator'\n    },\n\n    'str.rpartition': {\n        examples: [\n            '\"hello-world-python\".rpartition(\"-\")  # (\"hello-world\", \"-\", \"python\")',\n            'path = \"/home/user/file.txt\"',\n            'directory, sep, filename = path.rpartition(\"/\")'\n        ],\n        description: 'Splits string into three parts around last separator'\n    },\n\n    'str.expandtabs': {\n        examples: [\n            '\"hello\\\\tworld\".expandtabs()  # \"hello   world\" (8 spaces)',\n            '\"hello\\\\tworld\".expandtabs(4)  # \"hello   world\" (4 spaces)',\n            'code = \"def\\\\tfunc():\\\\n\\\\tpass\"',\n            'print(code.expandtabs(4))  # proper indentation'\n        ],\n        description: 'Expands tabs to spaces'\n    },\n\n    'str.translate': {\n        examples: [\n            '# Create translation table',\n            'table = str.maketrans(\"aeiou\", \"12345\")',\n            '\"hello world\".translate(table)  # \"h2ll4 w4rld\"',\n            '',\n            '# Remove characters',\n            'table = str.maketrans(\"\", \"\", \"aeiou\")',\n            '\"hello world\".translate(table)  # \"hll wrld\"',\n            '',\n            '# Unicode translation',\n            'table = str.maketrans(\"αβγ\", \"abc\")',\n            '\"αβγδε\".translate(table)  # \"abcδε\"'\n        ],\n        description: 'Translates characters using translation table'\n    },\n\n    // Advanced list operations\n    'list-advanced': {\n        examples: [\n            '# Shallow copy',\n            'original = [1, [2, 3], 4]',\n            'copy = original.copy()',\n            'copy[0] = 99  # original unchanged',\n            'copy[1][0] = 99  # original[1] also changes!',\n            '',\n            '# Alternative methods',\n            'copy = original[:]  # slice copy',\n            'copy = list(original)  # constructor copy',\n            '',\n            '# Deep copy (for nested structures)',\n            'import copy',\n            'deep_copy = copy.deepcopy(original)'\n        ],\n        description: 'Advanced list operations and copying'\n    },\n\n    // Dictionary advanced methods\n    'dict.fromkeys': {\n        examples: [\n            '# Create dict with same value',\n            'dict.fromkeys([\"a\", \"b\", \"c\"], 0)  # {\"a\": 0, \"b\": 0, \"c\": 0}',\n            'dict.fromkeys(\"abc\")  # {\"a\": None, \"b\": None, \"c\": None}',\n            'dict.fromkeys(range(3), [])  # {0: [], 1: [], 2: []}',\n            '',\n            '# Warning: mutable defaults share reference!',\n            'd = dict.fromkeys([\"a\", \"b\"], [])',\n            'd[\"a\"].append(1)  # d becomes {\"a\": [1], \"b\": [1]}',\n            '',\n            '# Safe pattern for mutable defaults',\n            'd = {k: [] for k in [\"a\", \"b\"]}  # each gets own list'\n        ],\n        description: 'Creates dictionary from keys with same default value'\n    },\n\n    // Advanced iteration tools\n    'itertools.chain': {\n        examples: [\n            'import itertools',\n            'list1 = [1, 2, 3]',\n            'list2 = [4, 5, 6]',\n            'list(itertools.chain(list1, list2))  # [1, 2, 3, 4, 5, 6]',\n            '',\n            '# Chain multiple iterables',\n            'itertools.chain([1, 2], \"abc\", [3, 4])  # 1, 2, \"a\", \"b\", \"c\", 3, 4',\n            '',\n            '# Chain from iterable of iterables',\n            'lists = [[1, 2], [3, 4], [5, 6]]',\n            'list(itertools.chain.from_iterable(lists))  # [1, 2, 3, 4, 5, 6]'\n        ],\n        description: 'Chains multiple iterables together'\n    },\n\n    'itertools.combinations': {\n        examples: [\n            'import itertools',\n            'items = [\"A\", \"B\", \"C\", \"D\"]',\n            'list(itertools.combinations(items, 2))',\n            '# [(\"A\", \"B\"), (\"A\", \"C\"), (\"A\", \"D\"), (\"B\", \"C\"), (\"B\", \"D\"), (\"C\", \"D\")]',\n            '',\n            '# All possible pairs',\n            'for pair in itertools.combinations(range(4), 2):',\n            '    print(pair)  # (0,1), (0,2), (0,3), (1,2), (1,3), (2,3)',\n            '',\n            '# Combinations of different lengths',\n            'list(itertools.combinations(\"abc\", 1))  # [(\"a\",), (\"b\",), (\"c\",)]'\n        ],\n        description: 'Returns combinations of elements'\n    },\n\n    'itertools.permutations': {\n        examples: [\n            'import itertools',\n            'items = [\"A\", \"B\", \"C\"]',\n            'list(itertools.permutations(items))',\n            '# [(\"A\",\"B\",\"C\"), (\"A\",\"C\",\"B\"), (\"B\",\"A\",\"C\"), (\"B\",\"C\",\"A\"), (\"C\",\"A\",\"B\"), (\"C\",\"B\",\"A\")]',\n            '',\n            '# Permutations of specific length',\n            'list(itertools.permutations(\"abc\", 2))',\n            '# [(\"a\",\"b\"), (\"a\",\"c\"), (\"b\",\"a\"), (\"b\",\"c\"), (\"c\",\"a\"), (\"c\",\"b\")]',\n            '',\n            '# Generate all arrangements',\n            'for perm in itertools.permutations(range(3)):',\n            '    print(perm)'\n        ],\n        description: 'Returns permutations of elements'\n    },\n\n    'itertools.product': {\n        examples: [\n            'import itertools',\n            'colors = [\"red\", \"blue\"]',\n            'sizes = [\"S\", \"M\", \"L\"]',\n            'list(itertools.product(colors, sizes))',\n            '# [(\"red\",\"S\"), (\"red\",\"M\"), (\"red\",\"L\"), (\"blue\",\"S\"), (\"blue\",\"M\"), (\"blue\",\"L\")]',\n            '',\n            '# Cartesian product with repeat',\n            'list(itertools.product(\"AB\", repeat=2))  # [(\"A\",\"A\"), (\"A\",\"B\"), (\"B\",\"A\"), (\"B\",\"B\")]',\n            '',\n            '# Multiple iterables',\n            'list(itertools.product([1, 2], [\"a\", \"b\"], [10, 20]))'\n        ],\n        description: 'Cartesian product of iterables'\n    },\n\n    // More advanced built-ins\n    'setattr': {\n        examples: [\n            '# Set attribute on object',\n            'setattr(obj, \"name\", \"Alice\")',\n            'setattr(obj, \"age\", 30)',\n            '',\n            '# Dynamic attribute setting',\n            'attr_name = \"dynamic_attr\"',\n            'setattr(obj, attr_name, \"dynamic_value\")',\n            '',\n            '# Set method on class',\n            'def new_method(self): return \"hello\"',\n            'setattr(MyClass, \"greet\", new_method)'\n        ],\n        description: 'Sets attribute on object'\n    },\n\n    'delattr': {\n        examples: [\n            '# Delete attribute from object',\n            'delattr(obj, \"name\")',\n            '',\n            '# Conditional deletion',\n            'if hasattr(obj, \"temp_attr\"):',\n            '    delattr(obj, \"temp_attr\")',\n            '',\n            '# Dynamic attribute deletion',\n            'attr_to_delete = \"unwanted_attr\"',\n            'delattr(obj, attr_to_delete)'\n        ],\n        description: 'Deletes attribute from object'\n    },\n\n    // Type checking (comprehensive)\n    'type-checking': {\n        examples: [\n            '# Basic type checking',\n            'isinstance(42, int)  # True',\n            'isinstance(\"hello\", str)  # True',\n            'isinstance([1, 2, 3], list)  # True',\n            '',\n            '# Multiple types',\n            'isinstance(value, (int, float))  # True if int OR float',\n            'isinstance(obj, (list, tuple, set))  # True if any sequence type',\n            '',\n            '# Class inheritance',\n            'class Animal: pass',\n            'class Dog(Animal): pass',\n            'my_dog = Dog()',\n            'isinstance(my_dog, Animal)  # True (inheritance)',\n            'isinstance(my_dog, Dog)     # True (exact type)'\n        ],\n        description: 'Comprehensive type checking with isinstance'\n    },\n\n    'issubclass': {\n        examples: [\n            '# Check inheritance',\n            'class Animal: pass',\n            'class Dog(Animal): pass',\n            'issubclass(Dog, Animal)  # True',\n            'issubclass(Animal, Dog)  # False',\n            '',\n            '# Multiple parent classes',\n            'issubclass(bool, int)  # True (bool inherits from int)',\n            'issubclass(Dog, (Animal, object))  # True if subclass of any',\n            '',\n            '# Built-in types',\n            'issubclass(list, object)  # True (everything inherits from object)',\n            'issubclass(int, (int, float))  # True'\n        ],\n        description: 'Checks if class is subclass of another class'\n    },\n\n    // Context managers\n    'contextlib.contextmanager': {\n        examples: [\n            'from contextlib import contextmanager',\n            '',\n            '@contextmanager',\n            'def my_context():',\n            '    print(\"Entering context\")',\n            '    try:',\n            '        yield \"resource\"',\n            '    finally:',\n            '        print(\"Exiting context\")',\n            '',\n            '# Usage',\n            'with my_context() as resource:',\n            '    print(f\"Using {resource}\")',\n            '',\n            '# Error handling context',\n            '@contextmanager',\n            'def database_transaction():',\n            '    try:',\n            '        db.begin()',\n            '        yield db',\n            '        db.commit()',\n            '    except Exception:',\n            '        db.rollback()',\n            '        raise'\n        ],\n        description: 'Decorator to create context managers from generators'\n    },\n\n    // Decorators\n    'functools.wraps': {\n        examples: [\n            'from functools import wraps',\n            '',\n            'def my_decorator(func):',\n            '    @wraps(func)',\n            '    def wrapper(*args, **kwargs):',\n            '        print(f\"Calling {func.__name__}\")',\n            '        return func(*args, **kwargs)',\n            '    return wrapper',\n            '',\n            '@my_decorator',\n            'def greet(name):',\n            '    \"\"\"Greets a person\"\"\"',\n            '    return f\"Hello, {name}!\"',\n            '',\n            '# Preserves original function metadata',\n            'print(greet.__name__)  # \"greet\" (not \"wrapper\")',\n            'print(greet.__doc__)   # \"Greets a person\"'\n        ],\n        description: 'Preserves function metadata when decorating'\n    },\n\n    'functools.lru_cache': {\n        examples: [\n            'from functools import lru_cache',\n            '',\n            '@lru_cache(maxsize=128)',\n            'def fibonacci(n):',\n            '    if n < 2:',\n            '        return n',\n            '    return fibonacci(n-1) + fibonacci(n-2)',\n            '',\n            '# Faster recursive calls due to caching',\n            'print(fibonacci(100))',\n            '',\n            '# Cache info',\n            'print(fibonacci.cache_info())  # hits, misses, maxsize, currsize',\n            'fibonacci.cache_clear()  # clear cache'\n        ],\n        description: 'LRU (Least Recently Used) cache decorator'\n    },\n\n    // Pattern matching (Python 3.10+)\n    'match': {\n        examples: [\n            '# Basic pattern matching',\n            'match value:',\n            '    case 1:',\n            '        print(\"one\")',\n            '    case 2:',\n            '        print(\"two\")',\n            '    case _:',\n            '        print(\"other\")',\n            '',\n            '# Pattern with conditions',\n            'match point:',\n            '    case (x, y) if x == y:',\n            '        print(\"Diagonal\")',\n            '    case (x, 0):',\n            '        print(\"On x-axis\")',\n            '    case (0, y):',\n            '        print(\"On y-axis\")',\n            '',\n            '# Class patterns',\n            'match shape:',\n            '    case Circle(radius=r):',\n            '        print(f\"Circle with radius {r}\")',\n            '    case Rectangle(width=w, height=h):',\n            '        print(f\"Rectangle {w}x{h}\")'\n        ],\n        description: 'Structural pattern matching (Python 3.10+)'\n    },\n\n    // Additional operators and keywords\n    'and': {\n        examples: [\n            '# Logical AND',\n            'if age >= 18 and has_license:',\n            '    print(\"Can drive\")',\n            '',\n            '# Multiple conditions',\n            'if x > 0 and x < 100 and x % 2 == 0:',\n            '    print(\"Even number between 0 and 100\")',\n            '',\n            '# Short-circuit evaluation',\n            'if user and user.is_active():',\n            '    print(\"Active user\")',\n            '',\n            '# In expressions',\n            'result = condition1 and condition2 and condition3',\n            'valid = name and email and password'\n        ],\n        description: 'Logical AND operator'\n    },\n\n    'or': {\n        examples: [\n            '# Logical OR',\n            'if is_admin or is_moderator:',\n            '    print(\"Has elevated privileges\")',\n            '',\n            '# Default values',\n            'name = user_name or \"Anonymous\"',\n            'config = custom_config or default_config',\n            '',\n            '# Multiple conditions',\n            'if status == \"error\" or status == \"failed\" or status == \"timeout\":',\n            '    handle_error()',\n            '',\n            '# Function parameters',\n            'def greet(name=None):',\n            '    name = name or \"World\"',\n            '    print(f\"Hello, {name}!\")'\n        ],\n        description: 'Logical OR operator'\n    },\n\n    'not': {\n        examples: [\n            '# Logical NOT',\n            'if not is_empty(list):',\n            '    process(list)',\n            '',\n            '# Negating conditions',\n            'if not (age < 18 or age > 65):',\n            '    print(\"Working age\")',\n            '',\n            '# Boolean negation',\n            'active = not inactive',\n            'visible = not hidden',\n            '',\n            '# Membership testing',\n            'if item not in forbidden_items:',\n            '    allow_item(item)',\n            '',\n            '# Identity testing',\n            'if response is not None:',\n            '    process_response(response)'\n        ],\n        description: 'Logical NOT operator'\n    },\n\n    'in': {\n        examples: [\n            '# List membership',\n            'if item in shopping_list:',\n            '    print(\"Already in cart\")',\n            '',\n            '# String containment',\n            'if \"error\" in log_message:',\n            '    handle_error()',\n            '',\n            '# Dictionary keys',\n            'if \"name\" in user_data:',\n            '    name = user_data[\"name\"]',\n            '',\n            '# Range checking',\n            'if score in range(90, 101):',\n            '    grade = \"A\"',\n            '',\n            '# Multiple containers',\n            'valid_extensions = [\".txt\", \".csv\", \".json\"]',\n            'if file_extension in valid_extensions:',\n            '    process_file()'\n        ],\n        description: 'Membership testing operator'\n    },\n\n    'is': {\n        examples: [\n            '# Identity comparison',\n            'if value is None:',\n            '    print(\"No value provided\")',\n            '',\n            '# Boolean literals',\n            'if flag is True:',\n            '    activate_feature()',\n            'if status is False:',\n            '    show_error()',\n            '',\n            '# Same object check',\n            'if current_user is admin_user:',\n            '    print(\"Admin logged in\")',\n            '',\n            '# Type checking',\n            'if type(obj) is list:',\n            '    process_list(obj)',\n            '',\n            '# Singleton comparison',\n            'if result is not None:',\n            '    return result'\n        ],\n        description: 'Identity comparison operator'\n    },\n\n    // Async/await keywords for modern Python\n    'async': {\n        examples: [\n            '# Async function definition',\n            'async def fetch_data():',\n            '    response = await http_client.get(url)',\n            '    return response.json()',\n            '',\n            '# Async context manager',\n            'async def process_file():',\n            '    async with aiofiles.open(\"file.txt\") as f:',\n            '        content = await f.read()',\n            '        return content',\n            '',\n            '# Async generator',\n            'async def async_range(n):',\n            '    for i in range(n):',\n            '        await asyncio.sleep(0.1)',\n            '        yield i',\n            '',\n            '# Async comprehension',\n            'results = [item async for item in async_generator()]'\n        ],\n        description: 'Async function and coroutine definition'\n    },\n\n    'await': {\n        examples: [\n            '# Await coroutine',\n            'async def main():',\n            '    result = await fetch_data()',\n            '    return result',\n            '',\n            '# Await with error handling',\n            'async def safe_operation():',\n            '    try:',\n            '        result = await risky_async_operation()',\n            '        return result',\n            '    except Exception as e:',\n            '        print(f\"Error: {e}\")',\n            '        return None',\n            '',\n            '# Multiple awaits',\n            'async def parallel_tasks():',\n            '    task1 = asyncio.create_task(fetch_data())',\n            '    task2 = asyncio.create_task(process_data())',\n            '    result1 = await task1',\n            '    result2 = await task2',\n            '    return result1, result2'\n        ],\n        description: 'Await expression for coroutines'\n    }\n};\n\n/**\n * Get static examples for a given symbol name\n */\nexport function getStaticExamples(symbolName: string): ExampleEntry | null {\n    // Direct match\n    if (STATIC_EXAMPLES[symbolName]) {\n        return STATIC_EXAMPLES[symbolName];\n    }\n\n    // Try without module prefix (e.g., \"builtins.len\" -> \"len\")\n    const withoutModule = symbolName.split('.').pop();\n    if (withoutModule && STATIC_EXAMPLES[withoutModule]) {\n        return STATIC_EXAMPLES[withoutModule];\n    }\n\n    // Try common method patterns\n    const methodPatterns = [\n        symbolName,\n        symbolName.replace(/^object\\./, ''),  // object.__str__ -> __str__\n        symbolName.replace(/^.*\\./, '')       // any.module.method -> method\n    ];\n\n    for (const pattern of methodPatterns) {\n        if (STATIC_EXAMPLES[pattern]) {\n            return STATIC_EXAMPLES[pattern];\n        }\n    }\n\n    return null;\n}\n","module.exports = require(\"util\");","/**\n * Service for detecting Python types from code patterns\n * Centralizes type detection logic used across multiple components\n */\n\nexport interface TypeDetectionResult {\n    type: string;\n    confidence: 'high' | 'medium' | 'low';\n}\n\nexport class TypeDetectionService {\n    /**\n     * Detect type from an assignment value (right-hand side of =  or :=)\n     * Returns the detected type or undefined if cannot determine\n     */\n    public static detectTypeFromValue(value: string): string | undefined {\n        const trimmedValue = value.trim();\n\n        // String literals (including raw, formatted, bytes)\n        if (this.isStringLiteral(trimmedValue)) {\n            return 'str';\n        }\n\n        // Comprehensions (must check before regular literals)\n        if (this.isListComprehension(trimmedValue)) {\n            return 'list';\n        }\n\n        if (this.isDictComprehension(trimmedValue)) {\n            return 'dict';\n        }\n\n        if (this.isSetComprehension(trimmedValue)) {\n            return 'set';\n        }\n\n        if (this.isGeneratorExpression(trimmedValue)) {\n            return 'generator';\n        }\n\n        // Collection literals\n        if (trimmedValue.startsWith('[')) {\n            return 'list';\n        }\n\n        if (trimmedValue.startsWith('{') && trimmedValue.includes(':')) {\n            return 'dict';\n        }\n\n        if (trimmedValue.startsWith('{')) {\n            return 'set';\n        }\n\n        if (trimmedValue.startsWith('(')) {\n            return 'tuple';\n        }\n\n        // Lambda expressions\n        if (this.isLambdaExpression(trimmedValue)) {\n            return 'function';\n        }\n\n        // Numeric literals\n        if (/^-?\\d+$/.test(trimmedValue)) {\n            return 'int';\n        }\n\n        if (/^-?\\d+\\.\\d+$/.test(trimmedValue)) {\n            return 'float';\n        }\n\n        // Boolean literals\n        if (trimmedValue === 'True' || trimmedValue === 'False') {\n            return 'bool';\n        }\n\n        // None\n        if (trimmedValue === 'None') {\n            return 'NoneType';\n        }\n\n        // Constructor calls\n        const constructorType = this.detectConstructorCall(trimmedValue);\n        if (constructorType) {\n            return constructorType;\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Check if value is a string literal\n     */\n    private static isStringLiteral(value: string): boolean {\n        return (\n            value.startsWith('\"') || value.startsWith(\"'\") ||\n            value.startsWith('r\"') || value.startsWith(\"r'\") ||\n            value.startsWith('f\"') || value.startsWith(\"f'\") ||\n            value.startsWith('b\"') || value.startsWith(\"b'\")\n        );\n    }\n\n    /**\n     * Check if value is a list comprehension\n     */\n    private static isListComprehension(value: string): boolean {\n        return value.startsWith('[') && value.includes(' for ');\n    }\n\n    /**\n     * Check if value is a dict comprehension\n     */\n    private static isDictComprehension(value: string): boolean {\n        return value.startsWith('{') && value.includes(':') && value.includes(' for ');\n    }\n\n    /**\n     * Check if value is a set comprehension\n     */\n    private static isSetComprehension(value: string): boolean {\n        return value.startsWith('{') && !value.includes(':') && value.includes(' for ');\n    }\n\n    /**\n     * Check if value is a generator expression\n     */\n    private static isGeneratorExpression(value: string): boolean {\n        return value.startsWith('(') && value.includes(' for ');\n    }\n\n    /**\n     * Check if value is a lambda expression\n     */\n    private static isLambdaExpression(value: string): boolean {\n        return value.startsWith('lambda ') || /^lambda\\s*:/.test(value);\n    }\n\n    /**\n     * Detect constructor call type\n     */\n    private static detectConstructorCall(value: string): string | undefined {\n        const constructorMatch = value.match(/^(\\w+)\\(/);\n        if (constructorMatch) {\n            const constructorName = constructorMatch[1];\n            if (['str', 'int', 'float', 'list', 'dict', 'set', 'tuple', 'bool'].includes(constructorName)) {\n                return constructorName;\n            }\n        }\n        return undefined;\n    }\n\n    /**\n     * Common Python built-in types\n     */\n    public static readonly BUILTIN_TYPES = [\n        'str', 'int', 'float', 'list', 'dict', 'set', 'tuple', 'bool',\n        'bytes', 'bytearray', 'frozenset', 'complex', 'NoneType',\n        'generator', 'function'\n    ];\n\n    /**\n     * Check if a type name is a built-in type\n     */\n    public static isBuiltinType(typeName: string): boolean {\n        return this.BUILTIN_TYPES.includes(typeName);\n    }\n}\n","import * as vscode from 'vscode';\nimport { Logger } from '../services/logger';\nimport { TypeDetectionService } from '../services/typeDetectionService';\n\n/**\n * Provides context-aware type detection for Python variables and expressions\n * Uses TypeDetectionService for the actual type inference logic\n */\nexport class ContextDetector {\n    // Cache for compiled regex patterns to improve performance\n    private regexCache = new Map<string, RegExp>();\n\n    /**\n     * Get a cached regex pattern or create and cache it\n     */\n    private getCachedRegex(pattern: string, flags?: string): RegExp {\n        const key = `${pattern}:${flags || ''}`;\n        if (!this.regexCache.has(key)) {\n            try {\n                this.regexCache.set(key, new RegExp(pattern, flags));\n            } catch (error) {\n                Logger.getInstance().error(`Invalid regex pattern: ${pattern}`, error as Error);\n                // Return a safe fallback regex that never matches\n                return /(?!)/;\n            }\n        }\n        return this.regexCache.get(key)!;\n    }\n\n    /**\n     * Determines the likely type of a variable based on context\n     */\n    public detectVariableTypeFromContext(document: vscode.TextDocument, position: vscode.Position, variableName: string): string | undefined {\n        if (!variableName) return undefined;\n\n        const maxLines = 100; // Limit search to prevent performance issues\n        const startLine = Math.max(0, position.line - maxLines);\n        const endLine = Math.min(document.lineCount - 1, position.line + 5);\n\n        // Search backward for variable assignments\n        for (let i = position.line; i >= startLine; i--) {\n            const line = document.lineAt(i).text;\n\n            // Check for variable assignments (var = value)\n            const assignmentRegex = this.getCachedRegex(`${variableName}\\\\s*=\\\\s*(.+)$`);\n            const assignmentMatch = line.match(assignmentRegex);\n\n            if (assignmentMatch) {\n                const value = assignmentMatch[1].trim();\n                const detectedType = TypeDetectionService.detectTypeFromValue(value);\n                if (detectedType) {\n                    return detectedType;\n                }\n            }\n\n            // Check for walrus operator assignments (var := value)\n            const walrusRegex = this.getCachedRegex(`${variableName}\\\\s*:=\\\\s*(.+)$`);\n            const walrusMatch = line.match(walrusRegex);\n\n            if (walrusMatch) {\n                const value = walrusMatch[1].trim();\n                const detectedType = TypeDetectionService.detectTypeFromValue(value);\n                if (detectedType) {\n                    return detectedType;\n                }\n            }\n\n            // Check for type annotations (var: Type)\n            const annotationRegex = this.getCachedRegex(`${variableName}\\\\s*:\\\\s*(\\\\w+)`);\n            const annotationMatch = line.match(annotationRegex);\n\n            if (annotationMatch) {\n                const typeName = annotationMatch[1];\n                if (TypeDetectionService.isBuiltinType(typeName)) {\n                    return typeName;\n                }\n            }\n        }\n\n        // If backward search didn't find anything, search forward a few lines\n        // This helps when cursor is at the start of a variable name before assignment\n        for (let i = position.line + 1; i <= endLine; i++) {\n            const line = document.lineAt(i).text;\n\n            // Check for variable assignments (var = value)\n            const assignmentRegex = this.getCachedRegex(`${variableName}\\\\s*=\\\\s*(.+)$`);\n            const assignmentMatch = line.match(assignmentRegex);\n\n            if (assignmentMatch) {\n                const value = assignmentMatch[1].trim();\n                const detectedType = TypeDetectionService.detectTypeFromValue(value);\n                if (detectedType) {\n                    return detectedType;\n                }\n            }\n\n            // Check for walrus operator in forward search too\n            const walrusRegex = this.getCachedRegex(`${variableName}\\\\s*:=\\\\s*(.+)$`);\n            const walrusMatch = line.match(walrusRegex);\n\n            if (walrusMatch) {\n                const value = walrusMatch[1].trim();\n                const detectedType = TypeDetectionService.detectTypeFromValue(value);\n                if (detectedType) {\n                    return detectedType;\n                }\n            }\n\n            // Check for type annotations in forward search\n            const annotationRegex = this.getCachedRegex(`${variableName}\\\\s*:\\\\s*(\\\\w+)`);\n            const annotationMatch = line.match(annotationRegex);\n\n            if (annotationMatch) {\n                const typeName = annotationMatch[1];\n                if (TypeDetectionService.isBuiltinType(typeName)) {\n                    return typeName;\n                }\n            }\n        }\n\n        // If we reach here, we couldn't determine the type\n        return undefined;\n    }\n\n    /**\n     * Detects if we are in a method call context and identifies the object type\n     */\n    public detectMethodContext(document: vscode.TextDocument, position: vscode.Position, methodName: string): string | undefined {\n        const line = document.lineAt(position.line).text;\n        const beforePosition = line.substring(0, position.character);\n\n        // Check for method calls (obj.method)\n        const dotMatch = beforePosition.match(this.getCachedRegex(`(\\\\w+)\\\\s*\\\\.\\\\s*${methodName}\\\\s*$`));\n        if (dotMatch) {\n            const objectName = dotMatch[1];\n            return this.detectVariableTypeFromContext(document, position, objectName);\n        }\n\n        // Common method-to-type inference as a fallback\n        if (['strip', 'split', 'join', 'replace', 'find', 'startswith', 'endswith', 'upper', 'lower',\n            'capitalize', 'title', 'isdigit', 'isalpha', 'isalnum', 'format'].includes(methodName)) {\n            return 'str';\n        } else if (['append', 'extend', 'insert', 'remove', 'pop', 'clear', 'copy', 'reverse', 'sort'].includes(methodName)) {\n            return 'list';\n        } else if (['keys', 'values', 'items', 'get', 'setdefault', 'update', 'popitem', 'fromkeys'].includes(methodName)) {\n            return 'dict';\n        } else if (['add', 'update', 'remove', 'discard', 'clear', 'copy', 'union', 'intersection'].includes(methodName)) {\n            return 'set';\n        }\n\n        return undefined;\n    }\n}\n","/**\n * Hover Theme System - Visual customization for hover tooltips\n *\n * @author KiidxAtlas\n * @copyright 2025 KiidxAtlas. All rights reserved.\n * @license MIT\n *\n * This theme system provides beautiful, customizable hover tooltips\n * for Python documentation with syntax highlighting and visual enhancements.\n */\n\nimport * as vscode from 'vscode';\n\n// Theme signature - Original design by KiidxAtlas\nconst THEME_SIGNATURE = 'HoverTheme-KiidxAtlas-2025';\n\nexport type FontSize = 'small' | 'medium' | 'large';\n\nexport interface ThemeConfig {\n    fontSize: 'small' | 'medium' | 'large';\n    showEmojis: boolean;\n    showColors: boolean;\n    showBorders: boolean;\n}\n\nexport class HoverTheme {\n    private config: ThemeConfig;\n\n    constructor() {\n        this.config = this.loadConfig();\n    }\n\n    private loadConfig(): ThemeConfig {\n        const config = vscode.workspace.getConfiguration('pythonHover');\n        return {\n            fontSize: config.get<FontSize>('fontSize', 'medium'),\n            showEmojis: config.get<boolean>('showEmojis', true),\n            showColors: config.get<boolean>('showColors', true),\n            showBorders: config.get<boolean>('showBorders', true)\n        };\n    }\n\n    public refresh(): void {\n        this.config = this.loadConfig();\n    }\n\n    public getConfig(): ThemeConfig {\n        return { ...this.config };\n    }\n\n    /**\n     * Create a themed markdown string\n     */\n    public createMarkdown(): vscode.MarkdownString {\n        const md = new vscode.MarkdownString();\n        md.isTrusted = true;\n        md.supportHtml = true;\n        md.supportThemeIcons = true;\n\n        // Note: VS Code hover doesn't support custom CSS\n        // We rely on markdown formatting and theme icons instead\n\n        return md;\n    }\n\n    /**\n     * Get emoji for symbol type\n     */\n    public getSymbolEmoji(type: string): string {\n        if (!this.config.showEmojis) {\n            return '';\n        }\n\n        const emojiMap: Record<string, string> = {\n            'function': '🔧',\n            'method': '⚙️',\n            'class': '📦',\n            'module': '📚',\n            'keyword': '🔑',\n            'builtin': '🐍',\n            'exception': '⚠️',\n            'constant': '💎',\n            'variable': '📊',\n            'typing': '🏷️',\n            'decorator': '✨'\n        };\n        return emojiMap[type] || '📝';\n    }\n\n    /**\n     * Get VS Code theme icon for symbol type\n     */\n    public getSymbolIcon(type: string): string {\n        const iconMap: Record<string, string> = {\n            'function': '$(symbol-function)',\n            'method': '$(symbol-method)',\n            'class': '$(symbol-class)',\n            'module': '$(symbol-namespace)',\n            'keyword': '$(symbol-keyword)',\n            'builtin': '$(symbol-constant)',\n            'exception': '$(error)',\n            'constant': '$(symbol-constant)',\n            'variable': '$(symbol-variable)',\n            'typing': '$(symbol-interface)',\n            'decorator': '$(symbol-event)'\n        };\n        return iconMap[type] || '$(symbol-misc)';\n    }\n\n    /**\n     * Format header based on theme\n     */\n    public formatHeader(symbolName: string, symbolType: string): string {\n        const icon = this.getSymbolIcon(symbolType);\n\n        // Use only VS Code theme icon (not emoji) for clean look\n        return `## ${icon} \\`${symbolName}\\`\\n\\n`;\n    }    /**\n     * Format section header\n     */\n    public formatSectionHeader(title: string, _icon?: string): string {\n        // Map section types to VS Code theme icons\n        const iconMap: Record<string, string> = {\n            'Parameters': '$(symbol-parameter)',\n            'Returns': '$(output)',\n            'Example': '$(lightbulb)',\n            'Signature': '$(code)',\n            'Description': '$(book)',\n            'Related': '$(link)',\n            'Version': '$(info)'\n        };\n\n        // Use only VS Code theme icon (not emoji)\n        const themeIcon = iconMap[title] || '$(chevron-right)';\n\n        // Always use rich theme\n        return `### ${themeIcon} ${title}\\n\\n`;\n    }\n\n    /**\n     * Format divider/separator\n     */\n    public formatDivider(): string {\n        if (!this.config.showBorders) {\n            return '\\n';\n        }\n\n        // Always use rich theme\n        return '\\n---\\n\\n';\n    }\n\n    /**\n     * Format badge (for version info, etc.)\n     */\n    public formatBadge(text: string, type?: 'info' | 'success' | 'warning' | 'error'): string {\n        // Use colored Unicode blocks for visual distinction\n        if (this.config.showColors && type) {\n            const colorMap: Record<string, string> = {\n                'info': '🔵',      // Blue\n                'success': '🟢',   // Green\n                'warning': '🟡',   // Yellow\n                'error': '🔴'      // Red\n            };\n            const colorIcon = colorMap[type] || '';\n            return `${colorIcon} **\\`${text}\\`**`;\n        }\n\n        return `**\\`${text}\\`**`;\n    }\n\n    /**\n     * Format code block\n     */\n    public formatCodeBlock(code: string, language: string = 'python'): string {\n        return `\\`\\`\\`${language}\\n${code}\\n\\`\\`\\`\\n\\n`;\n    }\n\n    /**\n     * Format link\n     */\n    public formatLink(text: string, url: string, icon?: string): string {\n        // Use VS Code theme icon for links\n        const linkIcon = icon || '$(link-external)';\n        const displayIcon = this.config.showEmojis && icon ? icon : linkIcon;\n        return `[${displayIcon} ${text}](${url})`;\n    }\n\n    /**\n     * Format list item\n     */\n    public formatListItem(text: string, bullet?: string): string {\n        // Use VS Code theme icons for bullets\n        const bulletMap: Record<string, string> = {\n            'required': '$(circle-filled)',\n            'optional': '$(circle-outline)',\n            'default': '$(chevron-right)'\n        };\n\n        const actualBullet = bullet && bulletMap[bullet]\n            ? bulletMap[bullet]\n            : (this.config.showEmojis && bullet ? bullet : '$(chevron-right)');\n\n        return `${actualBullet} ${text}\\n`;\n    }\n\n    /**\n     * Format type hint\n     */\n    public formatTypeHint(type: string): string {\n        const typeIcon = '$(symbol-interface)';\n        const displayIcon = this.config.showEmojis ? `🏷️ ${typeIcon}` : typeIcon;\n        return `${displayIcon} **Type:** \\`${type}\\``;\n    }\n\n    /**\n     * Format a tip or note with blockquote\n     */\n    public formatTip(text: string, icon?: string): string {\n        const tipIcon = icon || '💡';\n        const displayIcon = this.config.showEmojis ? tipIcon : '';\n        return `> ${displayIcon} **Tip:** ${text}\\n\\n`;\n    }\n\n    /**\n     * Format a note with blockquote\n     */\n    public formatNote(text: string, icon?: string): string {\n        const noteIcon = icon || '📝';\n        const displayIcon = this.config.showEmojis ? noteIcon : '';\n        return `> ${displayIcon} **Note:** ${text}\\n\\n`;\n    }\n\n    /**\n     * Format a warning with blockquote\n     */\n    public formatWarning(text: string): string {\n        const icon = this.config.showEmojis ? '⚠️' : '';\n        return `> ${icon} **Warning:** ${text}\\n\\n`;\n    }\n\n    /**\n     * Format action links (enhanced with icons)\n     */\n    public formatActionLinks(links: Array<{ text: string, url?: string, command?: string, icon?: string }>): string {\n        const formattedLinks = links.map(link => {\n            const icon = link.icon || '$(link)';\n            if (link.command) {\n                return `$(${icon.replace(/\\$\\(|\\)/g, '')}) [${link.text}](${link.command})`;\n            } else if (link.url) {\n                return `$(link-external) [${link.text}](${link.url})`;\n            }\n            return `- ${link.text}`;\n        });\n\n        return formattedLinks.join(' · ') + '\\n';\n    }\n\n    /**\n     * Format a badge group (multiple badges in a row)\n     */\n    public formatBadgeGroup(badges: Array<{ text: string, type?: 'info' | 'success' | 'warning' | 'error' }>): string {\n        const formattedBadges = badges.map(badge => this.formatBadge(badge.text, badge.type));\n        return formattedBadges.join(' ') + '\\n\\n';\n    }\n\n    /**\n     * Format a parameter list item\n     */\n    public formatParameter(name: string, description: string, required: boolean = true): string {\n        const bullet = required ? 'required' : 'optional';\n        const prefix = required ? '**Required:**' : '**Optional:**';\n        return this.formatListItem(`${prefix} \\`${name}\\` — ${description}`, bullet);\n    }\n\n    /**\n     * Format content with proper spacing\n     */\n    public formatContent(content: string): string {\n        // Ensure consistent spacing - always end with double newline\n        return content.trim() + '\\n\\n';\n    }\n\n    /**\n     * Format a signature code block\n     */\n    public formatSignature(signature: string): string {\n        return this.formatCodeBlock(signature, 'python');\n    }\n\n    /**\n     * Format a parameter table (markdown table)\n     */\n    public formatParameterTable(params: Array<{\n        name: string;\n        type?: string;\n        required?: boolean;\n        description: string;\n    }>): string {\n        if (params.length === 0) {\n            return '';\n        }\n\n        let table = '| Parameter | Type | Description |\\n';\n        table += '|-----------|------|-------------|\\n';\n\n        for (const param of params) {\n            const nameDisplay = param.required !== false\n                ? `\\`${param.name}\\` ✓`\n                : `\\`${param.name}\\` ○`;\n            const typeDisplay = param.type ? `\\`${param.type}\\`` : '—';\n            const descDisplay = param.description || '—';\n\n            table += `| ${nameDisplay} | ${typeDisplay} | ${descDisplay} |\\n`;\n        }\n\n        return table + '\\n';\n    }\n\n    /**\n     * Format signature with prominent display\n     */\n    public formatSignatureBox(signature: string, symbolName: string): string {\n        // Add section header\n        let result = this.formatSectionHeader('Signature', '$(code)');\n\n        // Add signature code block\n        result += this.formatCodeBlock(signature, 'python');\n\n        return result;\n    }\n\n    /**\n     * Format deprecation warning with high visibility\n     */\n    public formatDeprecation(version: string, message: string, alternative?: string): string {\n        const icon = this.config.showEmojis ? '⚠️' : '$(warning)';\n        let result = `\\n> ${icon} **DEPRECATED`;\n\n        if (version) {\n            result += ` (since ${version})`;\n        }\n\n        result += '**\\n>\\n';\n        result += `> ${message}`;\n\n        if (alternative) {\n            result += `\\n>\\n> **Use instead:** \\`${alternative}\\``;\n        }\n\n        result += '\\n\\n';\n\n        return result;\n    }\n\n    /**\n     * Format return type with icon and description\n     */\n    public formatReturnType(returnType: string, description?: string): string {\n        const icon = '$(output)';\n        let result = `${icon} **Returns:** \\`${returnType}\\``;\n\n        if (description) {\n            result += ` — ${description}`;\n        }\n\n        return result + '\\n\\n';\n    }\n\n    /**\n     * Format quick actions bar at top\n     */\n    public formatQuickActions(actions: Array<{\n        text: string;\n        icon: string;\n        command?: string;\n        url?: string;\n    }>): string {\n        const formattedActions = actions.map(action => {\n            const icon = `$(${action.icon.replace(/\\$\\(|\\)/g, '')})`;\n            const target = action.command || action.url;\n            return `[${icon} ${action.text}](${target})`;\n        });\n\n        return '🎯 ' + formattedActions.join(' · ') + '\\n\\n';\n    }\n\n    /**\n     * Format See Also section with related symbols\n     */\n    public formatSeeAlso(related: Array<{\n        name: string;\n        description: string;\n        type?: string;\n    }>): string {\n        if (related.length === 0) {\n            return '';\n        }\n\n        let result = this.formatSectionHeader('See Also', '$(link)');\n\n        for (const item of related) {\n            const typeIcon = item.type ? this.getSymbolIcon(item.type) : '$(symbol-misc)';\n            result += `- ${typeIcon} \\`${item.name}\\` — ${item.description}\\n`;\n        }\n\n        return result + '\\n';\n    }\n\n    /**\n     * Format performance/complexity hint\n     */\n    public formatPerformance(complexity: string, note?: string): string {\n        const icon = this.config.showEmojis ? '⚡' : '$(zap)';\n        let result = `${icon} **Performance:** ${complexity}`;\n\n        if (note) {\n            result += ` — ${note}`;\n        }\n\n        return result + '\\n\\n';\n    }\n\n    /**\n     * Format keyboard shortcut hint\n     */\n    public formatKeyboardHint(shortcuts: Array<{ keys: string; description: string }>): string {\n        if (shortcuts.length === 0) {\n            return '';\n        }\n\n        const icon = this.config.showEmojis ? '⌨️' : '$(keyboard)';\n        const hints = shortcuts.map(s => `**${s.keys}**: ${s.description}`).join(' | ');\n\n        return `\\n---\\n\\n${icon} ${hints}\\n`;\n    }\n\n    /**\n     * Format content with smart truncation\n     */\n    public formatContentWithTruncation(content: string, maxLength: number, readMoreCommand?: string): string {\n        if (content.length <= maxLength) {\n            return this.formatContent(content);\n        }\n\n        // Find a good breaking point (end of sentence, paragraph)\n        let truncated = content.substring(0, maxLength);\n        const lastPeriod = truncated.lastIndexOf('. ');\n        const lastNewline = truncated.lastIndexOf('\\n');\n\n        const breakPoint = Math.max(lastPeriod, lastNewline);\n        if (breakPoint > maxLength * 0.7) {\n            truncated = content.substring(0, breakPoint + 1);\n        }\n\n        let result = truncated.trim();\n\n        if (readMoreCommand) {\n            result += ` [...read more](${readMoreCommand})`;\n        } else {\n            result += ' [...]';\n        }\n\n        return this.formatContent(result);\n    }\n}\n","/**\n * Documentation Fetcher - Fetches Python documentation from various sources\n *\n * @author KiidxAtlas\n * @copyright 2025 KiidxAtlas. All rights reserved.\n * @license MIT\n */\n\nimport { getDunderInfo, IMPORT_INFO, MAP, MODULES, OPERATORS } from '../data/documentationUrls';\nimport { CacheManager } from '../services/cache';\nimport { InventoryEntry } from '../services/inventory';\nimport { Logger } from '../services/logger';\nimport { Info } from '../types';\nimport { FetchWithTimeout } from '../utils/fetchWithTimeout';\nimport { ExampleEnricher } from './exampleEnricher';\n\nexport interface DocumentationSnippet {\n    title: string;\n    content: string;\n    url: string;\n    anchor: string;\n}\n\n// Documentation fetcher - Developed by KiidxAtlas\nconst FETCHER_SIGNATURE = 'DocFetcher-KiidxAtlas';\n\n/**\n * Helper functions for working with documentation mappings\n */\n\n/**\n * Get the documentation URL for a third-party module\n */\nfunction getModuleDocumentationUrl(moduleName: string): string {\n    const moduleUrls: { [key: string]: string } = {\n        'numpy': 'https://numpy.org/doc/stable/',\n        'pandas': 'https://pandas.pydata.org/docs/',\n        'requests': 'https://docs.python-requests.org/',\n        'flask': 'https://flask.palletsprojects.com/',\n        'django': 'https://docs.djangoproject.com/',\n        'scipy': 'https://docs.scipy.org/doc/scipy/',\n        'matplotlib': 'https://matplotlib.org/stable/',\n        'sklearn': 'https://scikit-learn.org/stable/',\n        'pytest': 'https://docs.pytest.org/',\n        'sqlalchemy': 'https://docs.sqlalchemy.org/',\n        'pydantic': 'https://docs.pydantic.dev/',\n        'fastapi': 'https://fastapi.tiangolo.com/',\n        'beautifulsoup4': 'https://www.crummy.com/software/BeautifulSoup/bs4/doc/',\n        'bs4': 'https://www.crummy.com/software/BeautifulSoup/bs4/doc/',\n        'selenium': 'https://www.selenium.dev/selenium/docs/api/py/',\n        'pillow': 'https://pillow.readthedocs.io/en/stable/',\n        'pil': 'https://pillow.readthedocs.io/en/stable/',\n        'torch': 'https://pytorch.org/docs/stable/',\n        'pytorch': 'https://pytorch.org/docs/stable/',\n        'aiohttp': 'https://docs.aiohttp.org/en/stable/',\n        'click': 'https://click.palletsprojects.com/en/stable/',\n    };\n\n    return moduleUrls[moduleName] || `https://pypi.org/project/${moduleName}/`;\n}\n\n/**\n * Check if a symbol has a direct documentation mapping\n */\nfunction hasDocumentationMapping(symbol: string): boolean {\n    const hasMapping = symbol in MAP || symbol in MODULES || !!getDunderInfo(symbol);\n    Logger.getInstance().debug(`hasDocumentationMapping(\"${symbol}\"): ${hasMapping} (in MAP: ${symbol in MAP}, in MODULES: ${symbol in MODULES})`);\n    return hasMapping;\n}\n\n/**\n * Get the documentation info for a symbol\n */\nfunction getDocumentationInfo(symbol: string): Info | null {\n    // First check main MAP\n    if (symbol in MAP) {\n        return MAP[symbol];\n    }\n\n    // Map 'import' and 'from' keywords to the import system documentation\n    if (symbol === 'from' || symbol === 'import') {\n        return IMPORT_INFO;\n    }\n\n    // Then check MODULES\n    if (symbol in MODULES) {\n        return MODULES[symbol];\n    }\n\n    // Finally check for dunder methods\n    const dungerInfo = getDunderInfo(symbol);\n    if (dungerInfo) {\n        return dungerInfo;\n    }\n\n    return null;\n}\n\n/**\n * Build full URL from Info object\n */\nfunction buildFullUrlFromInfo(info: Info): string {\n    const baseUrl = 'https://docs.python.org/3/';\n    const fullUrl = baseUrl + info.url;\n    return info.anchor ? `${fullUrl}#${info.anchor}` : fullUrl;\n}\n\nexport class DocumentationFetcher {\n    private logger: Logger;\n    private exampleEnricher: ExampleEnricher;\n\n    constructor(private cacheManager: CacheManager) {\n        this.logger = Logger.getInstance();\n        this.exampleEnricher = new ExampleEnricher();\n    }\n\n    /**\n     * Primary method that first tries direct URL mapping, then falls back to intersphinx\n     */\n    public async fetchDocumentationForSymbol(\n        symbol: string,\n        entry?: InventoryEntry,\n        maxLines: number = 25,\n        context?: string\n    ): Promise<DocumentationSnippet> {\n        this.logger.debug(`Fetching documentation for symbol: ${symbol}, context: ${context}, hasEntry: ${!!entry}`);\n\n        // First, try the direct URL mapping system\n        let docSnippet: DocumentationSnippet;\n\n        if (hasDocumentationMapping(symbol)) {\n            this.logger.debug(`Using direct URL mapping for symbol: ${symbol}`);\n            docSnippet = await this.fetchFromDirectMapping(symbol, maxLines);\n        }\n        // Fall back to intersphinx inventory entry if provided\n        else if (entry) {\n            this.logger.debug(`Using intersphinx inventory for symbol: ${symbol}`);\n            docSnippet = await this.fetchDocumentation(entry, maxLines);\n        }\n        // No documentation source available\n        else {\n            this.logger.debug(`No documentation source found for symbol: ${symbol}`);\n\n            // Determine the appropriate fallback URL based on context\n            let fallbackUrl = 'https://docs.python.org/3/';\n            let fallbackMessage = `No documentation found for '${symbol}'.`;\n\n            if (context) {\n                // Extract the base module name (e.g., 'numpy' from 'numpy.linalg')\n                const baseModule = context.split('.')[0];\n                fallbackUrl = getModuleDocumentationUrl(baseModule);\n                fallbackMessage = `No documentation found for '${symbol}'. See the ${baseModule} documentation for details.`;\n            } else {\n                fallbackMessage = `No documentation found for '${symbol}'. See the official Python documentation for details.`;\n            }\n\n            docSnippet = {\n                title: symbol,\n                content: fallbackMessage,\n                url: fallbackUrl,\n                anchor: ''\n            };\n        }\n\n        // Enrich with examples\n        return this.exampleEnricher.enrichWithExamples(docSnippet, symbol, context);\n    }\n\n    /**\n     * Fetch documentation using direct URL mappings\n     */\n    private async fetchFromDirectMapping(\n        symbol: string,\n        maxLines: number\n    ): Promise<DocumentationSnippet> {\n        const mapping = getDocumentationInfo(symbol);\n        if (!mapping) {\n            throw new Error(`No mapping found for symbol: ${symbol}`);\n        }\n\n        const fullUrl = buildFullUrlFromInfo(mapping);\n        const cacheKey = `direct-doc-v1-${symbol}-${fullUrl}`;\n        const maxAge = CacheManager.hoursToMs(48); // 48 hours cache\n\n        // Check cache first\n        const cached = await this.cacheManager.get<DocumentationSnippet>(cacheKey);\n        if (cached && !await this.cacheManager.isExpired(cacheKey, maxAge)) {\n            this.logger.debug(`Returning cached direct mapping for symbol: ${symbol}`);\n            return cached.data;\n        }\n\n        try {\n            const baseUrl = 'https://docs.python.org/3/' + mapping.url;\n            this.logger.debug(`Fetching from direct URL: ${baseUrl}`);\n\n            const response = await FetchWithTimeout.fetch(baseUrl);\n\n            if (!response.ok) {\n                throw new Error(`Failed to fetch documentation: ${response.status}`);\n            }\n\n            const html = await response.text();\n            const snippet = await this.extractDirectMappingContent(html, mapping, symbol, maxLines);\n\n            await this.cacheManager.set(cacheKey, snippet);\n            return snippet;\n        } catch (error) {\n            this.logger.error(`Error fetching direct mapping for ${symbol}:`, error as Error);\n\n            // Return cached data if available\n            if (cached) {\n                return cached.data;\n            }\n\n            // Return minimal snippet\n            return {\n                title: symbol,\n                content: `Documentation for '${symbol}' - ${mapping.title}`,\n                url: fullUrl,\n                anchor: mapping.anchor || ''\n            };\n        }\n    }\n\n    /**\n     * Legacy method for intersphinx inventory entries\n     */\n    public async fetchDocumentation(\n        entry: InventoryEntry,\n        maxLines: number\n    ): Promise<DocumentationSnippet> {\n        const cacheKey = `doc-v11-${entry.uri}#${entry.anchor}`; // v11 with examples support\n        const maxAge = CacheManager.hoursToMs(48); // 48 hours cache\n\n        // Check cache first\n        const cached = await this.cacheManager.get<DocumentationSnippet>(cacheKey);\n        if (cached && !await this.cacheManager.isExpired(cacheKey, maxAge)) {\n            return cached.data;\n        }\n\n        try {\n            const snippet = await this.fetchAndExtractSnippet(entry, maxLines);\n            await this.cacheManager.set(cacheKey, snippet);\n            return snippet;\n        } catch (error) {\n            // If fetch fails but we have cached data, use it\n            if (cached) {\n                return cached.data;\n            }\n\n            this.logger.error(`Failed to fetch or extract documentation for ${entry.name}:`, error as Error);\n\n            // Return a snippet that indicates documentation is available but extraction failed\n            return {\n                title: entry.name,\n                content: ``, // Empty content - hover provider will show fallback message\n                url: this.buildFullUrl(entry),\n                anchor: entry.anchor\n            };\n        }\n    }\n\n    private async fetchAndExtractSnippet(\n        entry: InventoryEntry,\n        maxLines: number\n    ): Promise<DocumentationSnippet> {\n        const url = this.buildFullUrl(entry);\n        this.logger.debug(`Fetching documentation from: ${url}`);\n\n        const response = await FetchWithTimeout.fetch(url);\n\n        if (!response.ok) {\n            throw new Error(`Failed to fetch documentation: ${response.status}`);\n        }\n\n        const html = await response.text();\n        this.logger.debug(`Fetched HTML length: ${html.length} characters`);\n\n        const snippet = this.extractRelevantSection(html, entry.anchor, maxLines, url, entry.name);\n        this.logger.debug(`Extracted snippet length: ${snippet.length} characters`);\n        this.logger.debug(`Snippet preview: ${snippet.substring(0, 200)}...`);\n\n        return {\n            title: entry.name,\n            content: snippet,\n            url: url,\n            anchor: entry.anchor\n        };\n    }\n\n    private buildFullUrl(entry: InventoryEntry): string {\n        if (entry.anchor) {\n            return `${entry.uri}#${entry.anchor}`;\n        }\n        return entry.uri;\n    }\n\n    private extractRelevantSection(html: string, anchor: string, maxLines: number, baseUrl: string, symbolName: string): string {\n        try {\n            // If there's an anchor, try to find the specific section\n            if (anchor) {\n                const section = this.extractAnchoredSection(html, anchor);\n                if (section) {\n                    const md = this.htmlToMarkdown(section, maxLines, baseUrl, symbolName);\n                    // If the extracted markdown is very short (e.g. only a heading), try a paragraph fallback\n                    if (md.trim().length < 40) {\n                        this.logger.debug(`Extracted markdown very short (${md.trim().length} chars), attempting paragraph fallback for anchor: ${anchor}`);\n                        const paraFallback = this.extractParagraphsAfterAnchor(html, anchor, 2);\n                        if (paraFallback) {\n                            return this.htmlToMarkdown(paraFallback, maxLines, baseUrl, symbolName);\n                        }\n                    }\n                    return md;\n                }\n            }\n\n            // Fallback: try to extract just the main content\n            const extracted = this.extractMainContent(html);\n            return this.htmlToMarkdown(extracted, maxLines, baseUrl, symbolName);\n        } catch (error) {\n            this.logger.error(`Error extracting section:`, error as Error);\n            return '';\n        }\n    }\n\n    /**\n     * When anchored extraction yields too little content (common for std:label entries),\n     * try to pull the first N paragraph elements immediately after the anchor occurrence.\n     */\n    private extractParagraphsAfterAnchor(html: string, anchor: string, count = 2): string | null {\n        try {\n            // Find anchor as an id attribute first\n            const idRegex = new RegExp(`id=[\"']${this.escapeRegex(anchor)}[\"']`, 'i');\n            const idMatch = html.match(idRegex);\n            let startPos = -1;\n\n            if (idMatch && typeof idMatch.index === 'number') {\n                startPos = idMatch.index;\n            } else {\n                // Try to find anchor in href fragments (<a href=\"#anchor\">)\n                const hrefRegex = new RegExp(`<a[^>]+href=[\"'][^\"']*#${this.escapeRegex(anchor)}[\"'][^>]*>`, 'i');\n                const hrefMatch = html.match(hrefRegex);\n                if (hrefMatch && typeof hrefMatch.index === 'number') {\n                    startPos = hrefMatch.index;\n                }\n            }\n\n            if (startPos === -1) {\n                this.logger.debug(`Paragraph fallback: anchor '${anchor}' not found by id or href`);\n                return null;\n            }\n\n            // Search forward for paragraph tags after the anchor position\n            const searchArea = html.substring(startPos, Math.min(html.length, startPos + 8000));\n            const paraRegex = /<p[^>]*>[\\s\\S]*?<\\/p>/gi;\n            const paragraphs: string[] = [];\n            let match;\n            while ((match = paraRegex.exec(searchArea)) !== null && paragraphs.length < count) {\n                paragraphs.push(match[0]);\n            }\n\n            if (paragraphs.length === 0) {\n                this.logger.debug(`Paragraph fallback: no <p> found after anchor '${anchor}'`);\n                return null;\n            }\n\n            const combined = paragraphs.join('\\n\\n');\n            this.logger.debug(`Paragraph fallback: extracted ${paragraphs.length} paragraphs for anchor '${anchor}'`);\n            return combined;\n        } catch (error) {\n            this.logger.error(`Error in paragraph fallback for anchor '${anchor}':`, error as Error);\n            return null;\n        }\n    }\n\n    /**\n     * Fetch documentation for Python operators\n     */\n    public async fetchOperatorDocumentation(symbol: string): Promise<DocumentationSnippet> {\n        const operatorInfo = OPERATORS.find(op => op === symbol);\n        if (!operatorInfo) {\n            return {\n                title: symbol,\n                content: `No documentation found for operator '${symbol}'.`,\n                url: 'https://docs.python.org/3/reference/expressions.html',\n                anchor: ''\n            };\n        }\n\n        return {\n            title: operatorInfo,\n            content: `Documentation for operator '${operatorInfo}'.`,\n            url: 'https://docs.python.org/3/reference/expressions.html',\n            anchor: ''\n        };\n    }\n\n    /**\n     * Extract content from HTML using direct URL mapping\n     */\n    private async extractDirectMappingContent(\n        html: string,\n        mapping: Info,\n        symbol: string,\n        maxLines: number\n    ): Promise<DocumentationSnippet> {\n        const fullUrl = buildFullUrlFromInfo(mapping);\n\n        try {\n            let content: string;\n\n            if (mapping.anchor) {\n                // Try to extract the anchored section\n                const section = this.extractAnchoredSection(html, mapping.anchor);\n                if (section) {\n                    const baseUrl = 'https://docs.python.org/3/' + mapping.url;\n                    content = this.htmlToMarkdown(section, maxLines, baseUrl, symbol);\n                } else {\n                    // Fallback to main content if anchor not found\n                    this.logger.debug(`Anchor ${mapping.anchor} not found, using main content`);\n                    const extracted = this.extractMainContent(html);\n                    const baseUrl = 'https://docs.python.org/3/' + mapping.url;\n                    content = this.htmlToMarkdown(extracted, maxLines, baseUrl, symbol);\n                }\n            } else {\n                // No anchor, extract main content\n                const extracted = this.extractMainContent(html);\n                const baseUrl = 'https://docs.python.org/3/' + mapping.url;\n                content = this.htmlToMarkdown(extracted, maxLines, baseUrl, symbol);\n            }\n\n            return {\n                title: symbol,\n                content: content || `Documentation for '${symbol}' - ${mapping.title}`,\n                url: fullUrl,\n                anchor: mapping.anchor || ''\n            };\n        } catch (error) {\n            this.logger.error(`Error extracting direct mapping content for ${symbol}:`, error as Error);\n            return {\n                title: symbol,\n                content: `Documentation for '${symbol}' - ${mapping.title}`,\n                url: fullUrl,\n                anchor: mapping.anchor || ''\n            };\n        }\n    }\n\n    private extractAnchoredSection(html: string, anchor: string): string | null {\n        this.logger.debug(`Looking for anchor: ${anchor}`);\n\n        // Look for the anchored element\n        const anchorRegex = new RegExp(`<[^>]+id=[\"']${this.escapeRegex(anchor)}[\"'][^>]*>`, 'i');\n        const match = html.match(anchorRegex);\n\n        if (!match) {\n            this.logger.debug(`Anchor ${anchor} not found in HTML`);\n            // Try to find the anchor in href attributes as well\n            const hrefRegex = new RegExp(`<a[^>]+href=[\"'][^\"']*#${this.escapeRegex(anchor)}[\"'][^>]*>`, 'i');\n            const hrefMatch = html.match(hrefRegex);\n            if (hrefMatch) {\n                this.logger.debug(`Found anchor in href, but not as id`);\n            }\n\n            // Fallback: try to find a header that matches a readable form of the anchor\n            // e.g. 'the-with-statement' -> 'with statement' or 'with statement' -> header text\n            try {\n                const readable = anchor.replace(/[-_]+/g, ' ').replace(/^the\\s+/i, '').trim();\n                if (readable.length > 2) {\n                    const headerSearch = new RegExp(`<h[1-6][^>]*>[^<]*${this.escapeRegex(readable)}[^<]*<\\/h[1-6]>`, 'i');\n                    const headerMatch = html.match(headerSearch);\n                    if (headerMatch) {\n                        this.logger.debug(`Found header by readable anchor fallback: ${readable}`);\n                        const headerIndex = headerMatch.index!;\n                        const startIndex = headerIndex;\n\n                        // Extract from header forward similar to the header-based extraction above\n                        const headerEnd = startIndex + headerMatch[0].length;\n                        const remainingHtml = html.substring(headerEnd);\n                        const nextHeaderRegex = /<h[1-6][^>]*>/i;\n                        const nextMatch = remainingHtml.match(nextHeaderRegex);\n                        const sectionEndPos = nextMatch ? headerEnd + nextMatch.index! : Math.min(html.length, headerEnd + 3500);\n                        const sectionContent = headerMatch[0] + html.substring(headerEnd, sectionEndPos);\n                        return sectionContent;\n                    }\n                }\n            } catch (e) {\n                this.logger.debug(`Readable anchor fallback failed for '${anchor}'`, e);\n            }\n\n            return null;\n        }\n\n        this.logger.debug(`Found anchor at position ${match.index}`);\n        const startIndex = match.index!;\n\n        // For data model special methods, we need a very precise approach\n        if (html.includes('datamodel.html') && anchor.startsWith('object.')) {\n            return this.extractDataModelMethod(html, anchor, startIndex);\n        }\n\n        // Special handling for compound statement keywords that share sections\n        if (html.includes('compound_stmts.html') && ['else', 'elif', 'finally', 'except', 'break', 'continue', 'for', 'while', 'if', 'try'].includes(anchor)) {\n            return this.extractCompoundStatementKeyword(html, anchor, startIndex);\n        }\n\n        // The anchor might be on a small element like <span> or <a>\n        // We need to find the containing section or meaningful content block\n        let sectionStart = this.findSectionStart(html, startIndex, anchor);\n        let sectionEnd = this.findSectionEnd(html, startIndex);\n\n        this.logger.debug(`Section from ${sectionStart} to ${sectionEnd} (length: ${sectionEnd - sectionStart})`);\n        this.logger.debug(`Section start preview: ${html.substring(sectionStart, sectionStart + 200)}...`);\n\n        const extractedHtml = html.substring(sectionStart, sectionEnd);\n        this.logger.debug(`Extracted HTML length: ${extractedHtml.length}`);\n        this.logger.debug(`Extracted HTML preview: ${extractedHtml.substring(0, 500)}...`);\n\n        return extractedHtml;\n    }\n\n    private extractDataModelMethod(html: string, anchor: string, anchorPosition: number): string | null {\n        this.logger.debug(`Using specialized data model extraction for: ${anchor}`);\n\n        // Look backwards from the anchor to find the <dt> tag that defines this method\n        let searchStart = Math.max(0, anchorPosition - 2000);\n        let searchEnd = anchorPosition + 500;\n        let searchArea = html.substring(searchStart, searchEnd);\n\n        // Find all <dt> tags in the search area\n        const dtRegex = /<dt[^>]*>/gi;\n        let dtMatch;\n        let methodStart = searchStart;\n\n        while ((dtMatch = dtRegex.exec(searchArea)) !== null) {\n            const dtPosition = searchStart + dtMatch.index;\n            const dtEndPosition = searchStart + dtMatch.index + dtMatch[0].length;\n\n            // Check if this dt contains our anchor or if the anchor is shortly after\n            if (dtPosition <= anchorPosition && anchorPosition <= dtEndPosition + 200) {\n                methodStart = dtPosition;\n                this.logger.debug(`Found method definition dt at position: ${methodStart}`);\n                break;\n            }\n        }\n\n        // Find the end of this method definition (next <dt> or major section)\n        const endPatterns = [\n            /<dt[^>]*>/gi,        // Next method definition\n            /<\\/dl>/gi,           // End of method list\n            /<h[2-6][^>]*>/gi     // Next heading\n        ];\n\n        let methodEnd = Math.min(html.length, anchorPosition + 5000);\n        const searchAreaForEnd = html.substring(anchorPosition + 100); // Start after current anchor\n\n        for (const pattern of endPatterns) {\n            pattern.lastIndex = 0;\n            const endMatch = pattern.exec(searchAreaForEnd);\n            if (endMatch) {\n                const endPosition = anchorPosition + 100 + endMatch.index;\n                methodEnd = Math.min(methodEnd, endPosition);\n            }\n        }\n\n        this.logger.debug(`Data model method section from ${methodStart} to ${methodEnd} (length: ${methodEnd - methodStart})`);\n        this.logger.debug(`Data model section start preview: ${html.substring(methodStart, methodStart + 200)}...`);\n\n        const extractedHtml = html.substring(methodStart, methodEnd);\n        return extractedHtml;\n    }\n\n    private extractCompoundStatementKeyword(html: string, anchor: string, anchorPosition: number): string | null {\n        this.logger.debug(`Using specialized compound statement extraction for: ${anchor}`);\n\n        // Look ONLY forward from the anchor position to find content specifically about this keyword\n        const searchArea = html.substring(anchorPosition, anchorPosition + 20000);\n\n        // First, try to find the exact section header that mentions this keyword\n        // Look for patterns like \"8.3. The for statement\" or \"7.10. The continue statement\"\n        const sectionHeaderRegex = new RegExp(`<h[1-6][^>]*>([^<]*\\\\b${anchor}\\\\b[^<]*statement[^<]*)<\\/h[1-6]>`, 'gi');\n        const headerMatch = sectionHeaderRegex.exec(searchArea);\n\n        if (headerMatch) {\n            this.logger.debug(`Found section header for ${anchor}: ${headerMatch[1]}`);\n\n            // Extract content ONLY from this header forward until the next section\n            const headerStartPos = anchorPosition + headerMatch.index!;\n            const headerEndPos = headerStartPos + headerMatch[0].length;\n            const remainingHtml = html.substring(headerEndPos);\n\n            // Find where this section ends - look for next numbered section (like \"8.4\" or \"7.11\")\n            const nextNumberedSectionRegex = /<h[1-6][^>]*>[^<]*\\d+\\.\\d+\\.[^<]*<\\/h[1-6]>/i;\n            const nextSectionMatch = remainingHtml.match(nextNumberedSectionRegex);\n\n            const sectionEndPos = nextSectionMatch ?\n                headerEndPos + nextSectionMatch.index! :\n                headerEndPos + 3500; // Reasonable limit for one section\n\n            const sectionContent = headerMatch[0] + html.substring(headerEndPos, sectionEndPos);\n\n            this.logger.debug(`Extracted section content length: ${sectionContent.length}`);\n            this.logger.debug(`Section content preview: ${sectionContent.substring(0, 200)}...`);\n            return sectionContent;\n        }\n\n        // Fallback: Look for alternative header patterns\n        const alternativeHeaderRegex = new RegExp(`<h[1-6][^>]*>([^<]*\\\\b${anchor}\\\\b[^<]*)<\\/h[1-6]>`, 'gi');\n        const altHeaderMatch = alternativeHeaderRegex.exec(searchArea);\n\n        if (altHeaderMatch) {\n            this.logger.debug(`Found alternative header for ${anchor}: ${altHeaderMatch[1]}`);\n\n            const headerStartPos = anchorPosition + altHeaderMatch.index!;\n            const headerEndPos = headerStartPos + altHeaderMatch[0].length;\n            const remainingHtml = html.substring(headerEndPos);\n\n            // Find the next header of same or higher level\n            const headerLevel = altHeaderMatch[0].match(/<h([1-6])/)?.[1];\n            const nextHeaderRegex = new RegExp(`<h[1-${headerLevel}][^>]*>`, 'i');\n            const nextHeaderMatch = remainingHtml.match(nextHeaderRegex);\n\n            const sectionEndPos = nextHeaderMatch ?\n                headerEndPos + nextHeaderMatch.index! :\n                headerEndPos + 3000;\n\n            const sectionContent = altHeaderMatch[0] + html.substring(headerEndPos, sectionEndPos);\n\n            this.logger.debug(`Extracted alternative section content length: ${sectionContent.length}`);\n            return sectionContent;\n        }\n\n        // Last resort: Look for specific content patterns\n        this.logger.debug(`No header found, looking for specific content patterns for ${anchor}`);\n        const relevantContent: string[] = [];\n\n        // Look for the syntax definition first\n        const syntaxRegex = new RegExp(`${anchor}_stmt\\\\s*::=`, 'i');\n        const syntaxMatch = searchArea.match(syntaxRegex);\n        if (syntaxMatch) {\n            this.logger.debug(`Found syntax definition for ${anchor}`);\n            const syntaxPos = syntaxMatch.index!;\n            const syntaxArea = searchArea.substring(Math.max(0, syntaxPos - 100), syntaxPos + 800);\n            const syntaxBlockRegex = /<(?:p|pre|div)[^>]*>[\\s\\S]*?<\\/(?:p|pre|div)>/gi;\n            let syntaxBlockMatch;\n            while ((syntaxBlockMatch = syntaxBlockRegex.exec(syntaxArea)) !== null) {\n                if (syntaxBlockMatch[0].includes(syntaxMatch[0])) {\n                    relevantContent.push(syntaxBlockMatch[0]);\n                    break;\n                }\n            }\n        }\n\n        // Find paragraphs that specifically discuss this statement\n        const paragraphRegex = /<p[^>]*>[\\s\\S]*?<\\/p>/gi;\n        let match;\n        let paragraphCount = 0;\n\n        while ((match = paragraphRegex.exec(searchArea)) !== null && paragraphCount < 2) {\n            const paragraph = match[0];\n            const paragraphText = paragraph.replace(/<[^>]*>/g, '').trim();\n\n            // Only include paragraphs that clearly discuss this specific statement\n            const isRelevant =\n                paragraphText.toLowerCase().includes(`the ${anchor} statement is used`) ||\n                paragraphText.toLowerCase().includes(`${anchor} statement is used`) ||\n                paragraphText.toLowerCase().startsWith(`the ${anchor} statement`) ||\n                paragraphText.toLowerCase().startsWith(`${anchor} may only`);\n\n            if (isRelevant) {\n                // Skip if too close to anchor (navigation elements)\n                if (match.index < 200) continue;\n\n                relevantContent.push(paragraph);\n                paragraphCount++;\n                this.logger.debug(`Found relevant paragraph for ${anchor}: ${paragraphText.substring(0, 100)}...`);\n            }\n        }\n\n        if (relevantContent.length === 0) {\n            this.logger.debug(`No specific content found for ${anchor}, falling back to null`);\n            return null;\n        }\n\n        // Combine relevant content\n        const combinedContent = relevantContent.join('\\n\\n');\n        this.logger.debug(`Final fallback content length: ${combinedContent.length}`);\n        return combinedContent;\n    }\n\n    private findSectionStart(_html: string, anchorPosition: number, _anchor: string): number {\n        // Always start from the anchor position - never look backwards\n        // The anchor marks where the content for this symbol begins\n        this.logger.debug(`Starting section from anchor position: ${anchorPosition} (forward-only)`);\n        return anchorPosition;\n    }\n\n    private findSectionEnd(html: string, anchorPosition: number): number {\n        // For compound statements, we need to look for the NEXT section or major heading\n        // The structure is: <section><span id=\"keyword\"></span>..content..</section>\n\n        // First, check if we're in a compound statements page or data model page\n        const isCompoundStmt = html.includes('compound_stmts.html') || html.includes('Compound statements');\n        const isDataModel = html.includes('datamodel.html') || html.includes('Data model');\n\n        if (isCompoundStmt) {\n            // For compound statements, find the next major section boundary\n            const endPatterns = [\n                /<section[^>]*id=\"[^\"]*\"[^>]*>/gi,  // Next section with id\n                /<h[2-4][^>]*>/gi,                  // Next major heading\n            ];\n\n            let earliestEnd = Math.min(html.length, anchorPosition + 20000); // Look much further for compound statements\n\n            for (const pattern of endPatterns) {\n                pattern.lastIndex = 0;\n                const searchText = html.substring(anchorPosition + 200); // Skip past current anchor area\n                const match = pattern.exec(searchText);\n                if (match) {\n                    const matchPosition = anchorPosition + 200 + match.index;\n                    earliestEnd = Math.min(earliestEnd, matchPosition);\n                }\n            }\n\n            return earliestEnd;\n        } else if (isDataModel) {\n            // For data model documentation, find the next method or major heading\n            const endPatterns = [\n                /<\\/dd>/gi,                        // End of method description\n                /<dt[^>]*id=\"[^\"]*\"[^>]*>/gi,     // Next method definition\n                /<h[2-6][^>]*>/gi,                // Next heading\n                /<\\/dl>/gi                        // End of method list\n            ];\n\n            let earliestEnd = Math.min(html.length, anchorPosition + 8000); // Reasonable size for method docs\n\n            for (const pattern of endPatterns) {\n                pattern.lastIndex = 0;\n                const searchText = html.substring(anchorPosition + 100); // Skip past current anchor area\n                const match = pattern.exec(searchText);\n                if (match) {\n                    const matchPosition = anchorPosition + 100 + match.index;\n                    if (match[0].includes('</dd>')) {\n                        earliestEnd = Math.min(earliestEnd, matchPosition + match[0].length);\n                    } else {\n                        earliestEnd = Math.min(earliestEnd, matchPosition);\n                    }\n                }\n            }\n\n            return earliestEnd;\n        } else {\n            // Original logic for function documentation\n            const endPatterns = [\n                /<\\/section>/gi,\n                /<h[1-6][^>]*>/gi,\n                /<div[^>]+class=\"[^\"]*section[^\"]*\"[^>]*>/gi,\n                /<section[^>]*>/gi,\n                /<\\/article>/gi,\n                /<\\/main>/gi\n            ];\n\n            let earliestEnd = Math.min(html.length, anchorPosition + 10000);\n\n            for (const pattern of endPatterns) {\n                pattern.lastIndex = 0;\n                const searchText = html.substring(anchorPosition + 1);\n                const match = pattern.exec(searchText);\n                if (match) {\n                    const matchPosition = anchorPosition + 1 + match.index;\n                    if (match[0].includes('</section>')) {\n                        earliestEnd = Math.min(earliestEnd, matchPosition + match[0].length);\n                    } else {\n                        earliestEnd = Math.min(earliestEnd, matchPosition);\n                    }\n                }\n            }\n\n            return earliestEnd;\n        }\n    }\n\n    private extractMainContent(html: string): string {\n        // Try to find the main content area\n        const contentSelectors = [\n            /<div[^>]+class=\"[^\"]*body[^\"]*\"[^>]*>(.*?)<\\/div>/is,\n            /<main[^>]*>(.*?)<\\/main>/is,\n            /<article[^>]*>(.*?)<\\/article>/is,\n            /<div[^>]+class=\"[^\"]*content[^\"]*\"[^>]*>(.*?)<\\/div>/is,\n            /<section[^>]*>(.*?)<\\/section>/is\n        ];\n\n        for (const regex of contentSelectors) {\n            const match = html.match(regex);\n            if (match) {\n                return match[1];\n            }\n        }\n\n        // Fallback: take the body content\n        const bodyMatch = html.match(/<body[^>]*>(.*?)<\\/body>/is);\n        return bodyMatch ? bodyMatch[1] : html;\n    }\n\n    private htmlToMarkdown(html: string, maxLines: number, baseUrl: string, _symbolName: string): string {\n        // Note: static example support was removed. We still convert HTML to Markdown\n        // and return a substantive excerpt; hover rendering will include additional\n        // contextual paragraphs to avoid barren tooltips.\n\n        // Simple HTML to markdown conversion\n        let text = html\n            // Remove script and style tags\n            .replace(/<(?:script|style)[^>]*>.*?<\\/(?:script|style)>/gis, '')\n            // Convert links BEFORE removing other tags\n            .replace(/<a[^>]+href=[\"']([^\"']+)[\"'][^>]*>(.*?)<\\/a>/gi, (_match, href, content) => {\n                // Convert relative URLs to absolute URLs using baseUrl context\n                let resolvedUrl = href;\n\n                // Log specific examples we care about\n                const cleanContent = this.stripTags(content);\n                if (cleanContent === 'if' || cleanContent === 'else' || cleanContent === 'break' || cleanContent === 'continue') {\n                    this.logger.debug(`IMPORTANT LINK - content: \"${cleanContent}\", href: \"${href}\", baseUrl: \"${baseUrl}\"`);\n                }\n\n                if (href.startsWith('#')) {\n                    // Fragment-only URLs - resolve relative to base page (remove any existing fragment from baseUrl)\n                    const baseUrlWithoutFragment = baseUrl.split('#')[0];\n                    resolvedUrl = `${baseUrlWithoutFragment}${href}`;\n\n                    if (cleanContent === 'if' || cleanContent === 'else' || cleanContent === 'break' || cleanContent === 'continue') {\n                        this.logger.debug(`IMPORTANT LINK RESOLVED - \"${cleanContent}\": ${resolvedUrl}`);\n                    }\n                } else if (href.startsWith('/')) {\n                    // Root-relative URLs - make absolute to docs.python.org\n                    resolvedUrl = `https://docs.python.org${href}`;\n                } else if (href.startsWith('http')) {\n                    // Already absolute\n                    resolvedUrl = href;\n                } else if (href.startsWith('../')) {\n                    // Parent directory relative URLs - resolve relative to current page directory\n                    // For these, use the base URL without fragment for proper resolution\n                    const baseUrlWithoutFragment = baseUrl.split('#')[0];\n                    const baseUrlParts = baseUrlWithoutFragment.split('/');\n                    const pathParts = baseUrlParts.slice(0, -1); // Remove current file name\n                    const relativeParts = href.split('/');\n\n                    for (const part of relativeParts) {\n                        if (part === '..') {\n                            pathParts.pop(); // Go up one directory\n                        } else if (part !== '.') {\n                            pathParts.push(part);\n                        }\n                    }\n                    resolvedUrl = pathParts.join('/');\n                } else {\n                    // Same directory relative URLs - resolve relative to current page directory\n                    const baseUrlWithoutFragment = baseUrl.split('#')[0];\n                    const basePath = baseUrlWithoutFragment.substring(0, baseUrlWithoutFragment.lastIndexOf('/') + 1);\n                    resolvedUrl = `${basePath}${href}`;\n                }\n\n                return `[${cleanContent}](${resolvedUrl})`;\n            })\n            // Convert headers\n            .replace(/<h([1-6])[^>]*>(.*?)<\\/h[1-6]>/gi, (_, level, content) => {\n                const hashes = '#'.repeat(parseInt(level));\n                return `\\n${hashes} ${this.stripTags(content)}\\n`;\n            })\n            // Convert paragraphs\n            .replace(/<p[^>]*>(.*?)<\\/p>/gi, '\\n$1\\n')\n            // Convert code blocks\n            .replace(/<pre[^>]*><code[^>]*>(.*?)<\\/code><\\/pre>/gis, '\\n```\\n$1\\n```\\n')\n            // Convert inline code\n            .replace(/<code[^>]*>(.*?)<\\/code>/gi, '`$1`')\n            // Convert lists\n            .replace(/<li[^>]*>(.*?)<\\/li>/gi, '- $1\\n')\n            // Convert line breaks\n            .replace(/<br\\s*\\/?>/gi, '\\n')\n            // Remove all other HTML tags\n            .replace(/<[^>]*>/g, '')\n            // Decode HTML entities\n            .replace(/&quot;/g, '\"')\n            .replace(/&apos;/g, \"'\")\n            .replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&amp;/g, '&')\n            // Clean up whitespace\n            .replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n')\n            .trim();\n\n        // Limit to max lines\n        const lines = text.split('\\n');\n        if (lines.length > maxLines) {\n            const truncated = lines.slice(0, maxLines).join('\\n');\n            return `${truncated}\\n\\n*[Truncated - see full documentation for more details]*`;\n        }\n\n        return text;\n    }\n\n    private stripTags(html: string): string {\n        return html.replace(/<[^>]*>/g, '').trim();\n    }\n\n    private escapeRegex(string: string): string {\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n    }\n}\n","// CommonJS import for node-fetch\nimport * as nodeFetch from 'node-fetch';\nconst fetch = nodeFetch.default || nodeFetch;\n\n/**\n * Utility for making HTTP requests with timeout support\n * Centralizes the AbortController + timeout pattern used throughout the codebase\n */\n\nexport interface FetchWithTimeoutOptions {\n    timeoutMs?: number;\n    headers?: Record<string, string>;\n    signal?: AbortSignal;\n}\n\nexport class FetchWithTimeout {\n    /**\n     * Default timeout in milliseconds\n     */\n    private static readonly DEFAULT_TIMEOUT_MS = 10000; // 10 seconds\n\n    /**\n     * Fetch a URL with automatic timeout handling\n     * Ensures proper cleanup of timeout handlers in all code paths\n     *\n     * @param url - The URL to fetch\n     * @param options - Fetch options including timeout\n     * @returns Promise that resolves to the Response\n     * @throws Error if request times out or fails\n     */\n    public static async fetch(\n        url: string,\n        options: FetchWithTimeoutOptions = {}\n    ): Promise<nodeFetch.Response> {\n        const timeoutMs = options.timeoutMs ?? this.DEFAULT_TIMEOUT_MS;\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n\n        try {\n            const response = await fetch(url, {\n                signal: options.signal ?? controller.signal,\n                headers: {\n                    'User-Agent': 'VSCode-Python-Hover-Extension',\n                    ...options.headers\n                }\n            });\n\n            return response as nodeFetch.Response;\n        } catch (error: any) {\n            if (error.name === 'AbortError') {\n                throw new Error(`Request timed out after ${timeoutMs}ms: ${url}`);\n            }\n            throw error;\n        } finally {\n            // Always clear timeout to prevent memory leaks\n            clearTimeout(timeoutId);\n        }\n    }\n\n    /**\n     * Fetch a URL and get the response text\n     * Convenience method that handles both fetch and text parsing\n     *\n     * @param url - The URL to fetch\n     * @param options - Fetch options including timeout\n     * @returns Promise that resolves to the response text\n     * @throws Error if request fails or times out\n     */\n    public static async fetchText(\n        url: string,\n        options: FetchWithTimeoutOptions = {}\n    ): Promise<string> {\n        const response = await this.fetch(url, options);\n\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status}: Failed to fetch ${url}`);\n        }\n\n        return await response.text();\n    }\n\n    /**\n     * Fetch a URL and parse JSON response\n     * Convenience method that handles both fetch and JSON parsing\n     *\n     * @param url - The URL to fetch\n     * @param options - Fetch options including timeout\n     * @returns Promise that resolves to the parsed JSON\n     * @throws Error if request fails, times out, or JSON is invalid\n     */\n    public static async fetchJson<T = any>(\n        url: string,\n        options: FetchWithTimeoutOptions = {}\n    ): Promise<T> {\n        const response = await this.fetch(url, options);\n\n        if (!response.ok) {\n            throw new Error(`HTTP ${response.status}: Failed to fetch ${url}`);\n        }\n\n        return await response.json() as T;\n    }\n\n    /**\n     * Check if a URL is reachable (HEAD request)\n     * Useful for validation without downloading full content\n     *\n     * @param url - The URL to check\n     * @param timeoutMs - Timeout in milliseconds (default: 5000)\n     * @returns Promise that resolves to true if reachable, false otherwise\n     */\n    public static async isReachable(\n        url: string,\n        timeoutMs: number = 5000\n    ): Promise<boolean> {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), timeoutMs);\n\n        try {\n            const response = await fetch(url, {\n                method: 'HEAD',\n                signal: controller.signal,\n                headers: { 'User-Agent': 'VSCode-Python-Hover-Extension' }\n            });\n\n            return response.ok;\n        } catch {\n            return false;\n        } finally {\n            clearTimeout(timeoutId);\n        }\n    }\n}\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Python Hover - Enhanced Documentation Extension for VS Code\n *\n * @author KiidxAtlas\n * @copyright 2025 KiidxAtlas. All rights reserved.\n * @license MIT\n * @version 0.4.2\n *\n * This extension provides instant Python documentation with enhanced examples,\n * smart context detection, and support for 300+ constructs and 19+ libraries.\n */\n\nimport * as vscode from 'vscode';\nimport { CacheManager } from './services/cache';\nimport { ConfigurationManager } from './services/config';\nimport { ErrorNotifier } from './services/errorNotifier';\nimport { InventoryManager } from './services/inventory';\nimport { Logger } from './services/logger';\nimport { PackageDetector } from './services/packageDetector';\nimport { PythonHoverProvider } from './ui/hoverProvider';\nimport { VersionDetector } from './ui/versionDetector';\n\n// Extension metadata - DO NOT REMOVE\nconst EXTENSION_AUTHOR = 'KiidxAtlas';\nconst EXTENSION_ID = 'python-hover-kiidxatlas-2025';\n\nexport function activate(context: vscode.ExtensionContext) {\n    // Initialize configuration first\n    const configManager = new ConfigurationManager();\n\n    // Initialize logger with configuration\n    const logger = Logger.getInstance(configManager);\n    logger.info('🐍 Extension activating...');\n\n    // Initialize managers\n    const cacheManager = new CacheManager(context.globalStorageUri);\n    const packageDetector = new PackageDetector();\n    const inventoryManager = new InventoryManager(cacheManager, logger, configManager, packageDetector);\n    const versionDetector = new VersionDetector(configManager);\n\n    // Register hover provider\n    const hoverProvider = new PythonHoverProvider(\n        configManager,\n        inventoryManager,\n        versionDetector,\n        cacheManager\n    );\n\n    const hoverProviderDisposable = vscode.languages.registerHoverProvider(\n        { language: 'python' },\n        hoverProvider\n    );\n\n    context.subscriptions.push(hoverProviderDisposable);\n\n    // Ensure proper disposal\n    context.subscriptions.push({\n        dispose: () => hoverProvider.dispose()\n    });\n\n    // Register logger disposal\n    context.subscriptions.push({\n        dispose: () => logger.dispose()\n    });\n\n    // Create status bar item\n    const statusBarItem = vscode.window.createStatusBarItem(\n        vscode.StatusBarAlignment.Right,\n        100\n    );\n\n    statusBarItem.text = '$(database) Python Docs';\n    statusBarItem.tooltip = 'Python Hover: Click to view cache info';\n    statusBarItem.command = 'pythonHover.showCacheInfo';\n    statusBarItem.show();\n\n    context.subscriptions.push(statusBarItem);\n\n    // Function to update status bar with cache stats\n    async function updateStatusBar() {\n        try {\n            const stats = await cacheManager.getStats();\n            if (stats && stats.totalSize !== undefined) {\n                const sizeMB = (stats.totalSize / (1024 * 1024)).toFixed(1);\n                statusBarItem.text = `$(database) ${sizeMB}MB`;\n                statusBarItem.tooltip = `Python Hover Cache\\n${stats.fileCount} files • ${sizeMB}MB\\nClick for details`;\n            }\n        } catch (error) {\n            logger.error('Failed to update status bar:', error);\n            statusBarItem.text = '$(database) Python Docs';\n        }\n    }\n\n    // Update status bar every 30 seconds\n    const statusBarInterval = setInterval(updateStatusBar, 30000);\n    context.subscriptions.push({\n        dispose: () => clearInterval(statusBarInterval)\n    });\n\n    // Initial update\n    updateStatusBar();\n\n    // Listen for Python environment changes\n    // Watch for changes to Python interpreter setting\n    context.subscriptions.push(\n        vscode.workspace.onDidChangeConfiguration(event => {\n            if (event.affectsConfiguration('python.defaultInterpreterPath')) {\n                logger.info('Python interpreter changed, clearing version cache');\n                hoverProvider.clearVersionCache();\n            }\n        })\n    );\n\n    // Listen for Python extension environment changes\n    // The Python extension activates and exposes an API that includes environment change events\n    async function setupPythonExtensionListener() {\n        try {\n            const pythonExt = vscode.extensions.getExtension('ms-python.python');\n            if (pythonExt) {\n                if (!pythonExt.isActive) {\n                    await pythonExt.activate();\n                }\n\n                const pythonApi = pythonExt.exports;\n                // The Python extension API exposes an onDidChangePythonInterpreter event\n                if (pythonApi && pythonApi.environments && pythonApi.environments.onDidChangeActiveEnvironmentPath) {\n                    const disposable = pythonApi.environments.onDidChangeActiveEnvironmentPath(() => {\n                        logger.info('Active Python environment changed, clearing version cache');\n                        hoverProvider.clearVersionCache();\n                    });\n                    context.subscriptions.push(disposable);\n                    logger.info('Python environment change listener registered');\n                } else {\n                    logger.debug('Python extension API does not expose environment change events');\n                }\n            } else {\n                logger.debug('Python extension not found, skipping environment change listener');\n            }\n        } catch (error) {\n            logger.error('Failed to setup Python extension listener:', error);\n        }\n    }\n\n    // Setup listener after a short delay to ensure Python extension is ready\n    setTimeout(setupPythonExtensionListener, 1000);\n\n    // Register command to show cache info\n    context.subscriptions.push(\n        vscode.commands.registerCommand('pythonHover.showCacheInfo', async () => {\n            try {\n                const stats = await cacheManager.getStats();\n                const sizeMB = (stats.totalSize / (1024 * 1024)).toFixed(2);\n                const sizeKB = (stats.totalSize / 1024).toFixed(0);\n\n                const message = `📦 **Python Hover Cache**\\n\\n` +\n                    `📁 Files: ${stats.fileCount}\\n` +\n                    `💾 Size: ${sizeMB} MB (${sizeKB} KB)\\n` +\n                    `📍 Location: ${stats.cacheDir || 'Global storage'}\\n\\n` +\n                    `Cache includes documentation snippets and Intersphinx inventories for faster hover responses.`;\n\n                const action = await ErrorNotifier.showInfo(\n                    message,\n                    'Clear Cache',\n                    'Open Location',\n                    'Close'\n                );\n\n                if (action === 'Clear Cache') {\n                    await vscode.commands.executeCommand('pythonHover.clearCache');\n                    updateStatusBar();\n                } else if (action === 'Open Location' && stats.cacheDir) {\n                    await vscode.commands.executeCommand('revealFileInOS', vscode.Uri.file(stats.cacheDir));\n                }\n            } catch (error) {\n                logger.error('Failed to show cache info:', error);\n                await ErrorNotifier.showError('Failed to retrieve cache information');\n            }\n        })\n    );\n\n    // Register clear cache command\n    context.subscriptions.push(\n        vscode.commands.registerCommand('pythonHover.clearCache', async () => {\n            try {\n                const stats = await cacheManager.clear();\n                await inventoryManager.invalidateCache();\n                updateStatusBar(); // Update status bar after clearing cache\n                await ErrorNotifier.showInfo(\n                    `✅ Cache cleared! Deleted ${stats.filesDeleted} files.`\n                );\n            } catch (error) {\n                await ErrorNotifier.showError(`Failed to clear cache: ${error}`);\n                logger.error('Cache clear error:', error);\n            }\n        })\n    );\n\n    // Register command to open documentation URL (respects openDocsInEditor setting)\n    context.subscriptions.push(\n        vscode.commands.registerCommand('pythonHover.openDocs', (url: string) => {\n            if (url && url.startsWith('http')) {\n                const config = vscode.workspace.getConfiguration('pythonHover');\n                const openInEditor = config.get<boolean>('openDocsInEditor', false);\n\n                if (openInEditor) {\n                    // Open in VS Code's Simple Browser\n                    vscode.commands.executeCommand('simpleBrowser.show', url);\n                } else {\n                    // Open in external browser\n                    vscode.env.openExternal(vscode.Uri.parse(url));\n                }\n            }\n        })\n    );\n\n    // Register command to copy documentation URL\n    context.subscriptions.push(\n        vscode.commands.registerCommand('pythonHover.copyUrl', (url: string) => {\n            if (url) {\n                vscode.env.clipboard.writeText(url);\n                ErrorNotifier.showInfo('📋 URL copied to clipboard!');\n            }\n        })\n    );\n\n    // Register insert example command\n    context.subscriptions.push(\n        vscode.commands.registerCommand('pythonHover.insertExample', (code: string) => {\n            const editor = vscode.window.activeTextEditor;\n            if (editor && code) {\n                const snippet = new vscode.SnippetString(code);\n                editor.insertSnippet(snippet);\n                ErrorNotifier.showInfo('✅ Example inserted!');\n            }\n        })\n    );\n\n    // Register font size increase command\n    context.subscriptions.push(\n        vscode.commands.registerCommand('pythonHover.increaseFontSize', async () => {\n            const config = vscode.workspace.getConfiguration('pythonHover');\n            const sizes = ['small', 'medium', 'large'];\n            const currentSize = config.get<string>('fontSize', 'medium');\n            const currentIndex = sizes.indexOf(currentSize);\n\n            if (currentIndex < sizes.length - 1) {\n                const newSize = sizes[currentIndex + 1];\n                await config.update('fontSize', newSize, vscode.ConfigurationTarget.Global);\n                hoverProvider.refreshTheme();\n                ErrorNotifier.showInfo(`🔤 Font size: ${newSize}`);\n            } else {\n                ErrorNotifier.showInfo('Already at maximum font size');\n            }\n        })\n    );\n\n    // Register font size decrease command\n    context.subscriptions.push(\n        vscode.commands.registerCommand('pythonHover.decreaseFontSize', async () => {\n            const config = vscode.workspace.getConfiguration('pythonHover');\n            const sizes = ['small', 'medium', 'large'];\n            const currentSize = config.get<string>('fontSize', 'medium');\n            const currentIndex = sizes.indexOf(currentSize);\n\n            if (currentIndex > 0) {\n                const newSize = sizes[currentIndex - 1];\n                await config.update('fontSize', newSize, vscode.ConfigurationTarget.Global);\n                hoverProvider.refreshTheme();\n                ErrorNotifier.showInfo(`🔤 Font size: ${newSize}`);\n            } else {\n                ErrorNotifier.showInfo('Already at minimum font size');\n            }\n        })\n    );\n\n    // Register show supported libraries command\n    context.subscriptions.push(\n        vscode.commands.registerCommand('pythonHover.showSupportedLibraries', async () => {\n            const allLibraries = inventoryManager.getAllSupportedLibraries();\n            const counts = inventoryManager.getSupportedLibrariesCount();\n            const autoDetectEnabled = configManager.autoDetectLibrariesEnabled;\n\n            // Group libraries by category\n            const dataScience = ['numpy', 'pandas', 'scipy', 'matplotlib', 'sklearn', 'torch', 'pytorch'];\n            const webFrameworks = ['flask', 'django', 'fastapi', 'aiohttp', 'requests'];\n            const testing = ['pytest', 'selenium'];\n            const database = ['sqlalchemy', 'pydantic'];\n            const utilities = ['beautifulsoup4', 'bs4', 'pillow', 'click', 'sphinx'];\n\n            const categorized: { [key: string]: string[] } = {\n                'Data Science & ML': [],\n                'Web Development': [],\n                'Testing & Automation': [],\n                'Database & Validation': [],\n                'Utilities': [],\n                'Custom Libraries': [],\n                'Other': []\n            };\n\n            // Categorize libraries\n            const customLibNames = new Set((configManager.customLibraries ?? []).map(l => l.name));\n\n            for (const lib of allLibraries) {\n                const name = lib.name;\n                if (customLibNames.has(name)) {\n                    categorized['Custom Libraries'].push(name);\n                } else if (dataScience.includes(name)) {\n                    categorized['Data Science & ML'].push(name);\n                } else if (webFrameworks.includes(name)) {\n                    categorized['Web Development'].push(name);\n                } else if (testing.includes(name)) {\n                    categorized['Testing & Automation'].push(name);\n                } else if (database.includes(name)) {\n                    categorized['Database & Validation'].push(name);\n                } else if (utilities.includes(name)) {\n                    categorized['Utilities'].push(name);\n                } else {\n                    categorized['Other'].push(name);\n                }\n            }\n\n            // Build markdown content\n            let content = `# 📚 Supported Python Libraries\\n\\n`;\n            content += `**Total Libraries:** ${counts.total}\\n`;\n            content += `- Built-in: ${counts.builtIn}\\n`;\n            content += `- Custom: ${counts.custom}\\n\\n`;\n\n            if (autoDetectEnabled) {\n                content += `🧪 **Auto-detect:** ✅ Enabled - Any library with Intersphinx docs is supported!\\n\\n`;\n            } else {\n                content += `🧪 **Auto-detect:** ❌ Disabled - Only pre-configured libraries shown\\n\\n`;\n            }\n\n            content += `---\\n\\n`;\n\n            // Add categorized libraries\n            for (const [category, libs] of Object.entries(categorized)) {\n                if (libs.length > 0) {\n                    content += `## ${category}\\n\\n`;\n                    // Sort alphabetically within each category\n                    const sortedLibs = libs.sort();\n                    content += sortedLibs.map(lib => `- \\`${lib}\\``).join('\\n');\n                    content += `\\n\\n`;\n                }\n            }\n\n            content += `---\\n\\n`;\n            content += `💡 **Tip:** Add your own libraries in settings:\\n`;\n            content += `\\`pythonHover.customLibraries\\`\\n\\n`;\n            content += `🧪 **Auto-detect:** Toggle in settings:\\n`;\n            content += `\\`pythonHover.experimental.autoDetectLibraries\\`\\n\\n`;\n            content += `📖 [Learn more about custom libraries](command:vscode.open?${encodeURIComponent(JSON.stringify('https://github.com/KiidxAtlas/python-hover/blob/main/CUSTOM_LIBRARIES.md'))})\\n`;\n\n            // Create and show in new editor\n            const doc = await vscode.workspace.openTextDocument({\n                content,\n                language: 'markdown'\n            });\n\n            await vscode.window.showTextDocument(doc, {\n                preview: true,\n                viewColumn: vscode.ViewColumn.Beside\n            });\n        })\n    );\n\n    // Handle configuration changes\n    context.subscriptions.push(\n        vscode.workspace.onDidChangeConfiguration((event: vscode.ConfigurationChangeEvent) => {\n            if (event.affectsConfiguration('pythonHover')) {\n                configManager.refresh();\n                hoverProvider.refreshTheme();\n\n                // Invalidate inventories when library-related settings change\n                if (event.affectsConfiguration('pythonHover.customLibraries') ||\n                    event.affectsConfiguration('pythonHover.experimental.autoDetectLibraries')) {\n                    logger.info('Library configuration changed, invalidating inventory cache');\n                    inventoryManager.invalidateCache().catch(error => {\n                        logger.error('Failed to invalidate inventory cache:', error);\n                    });\n                }\n\n                // Clear version cache when docs version setting changes\n                if (event.affectsConfiguration('pythonHover.docsVersion')) {\n                    logger.info('Documentation version setting changed, clearing version cache');\n                    hoverProvider.clearVersionCache();\n                }\n\n                logger.info('Configuration reloaded successfully');\n            }\n        })\n    );\n\n    logger.info('✅ Extension activated successfully');\n}\n\nexport function deactivate() {\n    Logger.getInstance().info('Extension deactivated');\n}\n"],"names":["doc","parts","push","symbol","category","description","example","tags","length","map","t","join","url","CustomDocumentationLoader","customDocs","Map","configFiles","loadCustomDocs","workspaceFolder","this","clear","folders","vscode","workspace","workspaceFolders","configFile","configPath","path","uri","fsPath","fs","existsSync","content","readFileSync","config","JSON","parse","docs","Array","isArray","set","toLowerCase","Logger","getInstance","debug","error","getCustomDoc","get","hasCustomDocs","size","getAllCustomDocs","from","values","createSampleConfig","version","createSampleConfigFile","sampleConfig","writeFileSync","stringify","openTextDocument","window","showTextDocument","enrichWithExamples","docSnippet","context","enrichedSnippet","bareSymbol","split","pop","exampleContent","exampleFound","ENHANCED_EXAMPLES","formatEnhancedExample","STATIC_EXAMPLES","formatStaticExample","examples","module","exports","require","adler32","crc32","inflate_fast","inflate_table","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_DEFLATED","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","BAD","MEM","zswap32","q","InflateState","strm","mode","last","wrap","havedict","flags","dmax","check","total","head","wbits","wsize","whave","wnext","hold","bits","offset","extra","lencode","distcode","lenbits","distbits","ncode","nlen","ndist","have","next","lens","Uint16Array","work","lendyn","distdyn","sane","back","was","inflateStateCheck","state","inflateResetKeep","total_in","total_out","msg","adler","Int32Array","inflateReset","inflateReset2","windowBits","inflateInit2","ret","lenfix","distfix","virgin","fixedtables","sym","updatewindow","src","end","copy","dist","Uint8Array","subarray","inflateInit","inflate","flush","input","output","put","left","_in","_out","from_source","here_bits","here_op","here_val","last_bits","last_op","last_val","len","here","hbuf","opts","n","order","avail_in","next_out","avail_out","next_in","inf_leave","done","text","time","xflags","os","extra_len","name","String","fromCharCode","comment","hcrc","data_type","inflateEnd","inflateGetHeader","inflateSetDictionary","dictionary","dictLength","dictid","inflateInfo","Deflate","deflate","deflateRaw","gzip","Inflate","inflateRaw","ungzip","constants","TYPING_CONSTRUCTS","STR_APPLY_UIA_OK","apply","__","_utf8len","string2buf","str","TextEncoder","prototype","encode","buf","c","c2","m_pos","i","str_len","buf_len","charCodeAt","buf2string","max","TextDecoder","decode","out","utf16buf","c_len","result","buf2binstring","utf8border","pos","lbase","lext","dbase","dext","type","lens_index","codes","table","table_index","incr","fill","low","mask","match","min","root","curr","drop","used","huff","base","count","MAXBITS","offs","test","title","anchor","MAP","class","def","return","with","yield","async","await","try","if","for","while","except","finally","else","elif","break","continue","pass","lambda","global","nonlocal","raise","assert","del","case","and","or","not","is","in","print","range","enumerate","zip","filter","sorted","reversed","sum","abs","round","any","all","open","isinstance","issubclass","getattr","setattr","hasattr","delattr","id","pow","iter","vars","dir","help","eval","exec","compile","hash","hex","oct","bin","ord","chr","ascii","repr","format","divmod","callable","super","staticmethod","classmethod","property","slice","object","bytes","bytearray","memoryview","frozenset","complex","locals","globals","breakpoint","__import__","aiter","anext","int","float","bool","list","dict","tuple","None","True","False","Exception","BaseException","ValueError","TypeError","KeyError","IndexError","StopIteration","ImportError","AttributeError","NameError","RuntimeError","NotImplementedError","FileNotFoundError","PermissionError","strip","lstrip","rstrip","rsplit","replace","find","rfind","index","rindex","startswith","endswith","upper","lower","capitalize","swapcase","casefold","isdigit","isalpha","isalnum","isspace","islower","isupper","istitle","str_format","format_map","center","ljust","rjust","zfill","partition","rpartition","splitlines","expandtabs","translate","maketrans","removeprefix","removesuffix","isascii","isprintable","isidentifier","isnumeric","isdecimal","append","extend","insert","remove","reverse","sort","keys","items","setdefault","update","popitem","fromkeys","add","discard","union","intersection","difference","symmetric_difference","issubset","issuperset","isdisjoint","intersection_update","difference_update","symmetric_difference_update","Generic","TypeVar","Protocol","Union","Optional","List","Dict","Set","Tuple","Callable","Type","ClassVar","Final","Literal","Annotated","Any","NoReturn","overload","IMPORT_INFO","MODULES","sys","math","random","datetime","json","re","urllib","http","pathlib","typing","collections","itertools","functools","operator","pickle","csv","sqlite3","threading","multiprocessing","concurrent","asyncio","subprocess","shutil","glob","tempfile","io","logging","argparse","configparser","xml","html","email","base64","hashlib","hmac","secrets","ssl","socket","select","signal","struct","array","queue","heapq","bisect","weakref","gc","inspect","traceback","warnings","contextlib","abc","numbers","decimal","fractions","statistics","enum","dataclasses","calendar","locale","gettext","string","textwrap","unicodedata","codecs","keyword","token","tokenize","ast","symtable","dis","importlib","pkgutil","modulefinder","runpy","types","platform","errno","ctypes","BUILTIN_KEYWORDS","DATA_TYPES","CONSTANTS","OPERATORS","VERSION_HISTORY","method","METHOD_COMPARISONS","_key","comparison","Object","entries","similar","includes","info","addedIn","deprecatedIn","removedIn","changedIn","change","migrationGuide","differences","whenToUse","METHOD_TO_TYPE_MAP","isKnownMethod","methodName","hasOwnProperty","resolveMethodInfo","document","position","receiverType","methodInfo","documentation","bestType","scoreAndSelectBestType","candidateTypes","scores","lineText","lineAt","line","startLine","Math","endLine","lineCount","contextLines","score","RegExp","bestScore","k","v","ErrorNotifier","getLogger","showError","message","actions","fullMessage","formatMessage","shouldThrottle","recordNotification","showErrorMessage","showWarning","warn","showWarningMessage","showInfo","showInformationMessage","showErrorWithSettings","settingKey","settingToOpen","commands","executeCommand","showWarningWithRetry","onRetry","action","showNetworkError","operation","showConfigError","configName","reason","startsWith","MESSAGE_PREFIX","lastTime","lastNotificationTime","Date","now","MIN_NOTIFICATION_INTERVAL","clearThrottleHistory","setMinNotificationInterval","_intervalMs","constructor","loadConfig","vscodeConfig","getConfiguration","docsVersion","maxSnippetLines","cacheTTL","inventoryDays","snippetHours","enableKeywordDocs","telemetry","customLibraries","experimental","autoDetectLibraries","ui","showParameterTables","showSignatures","showDeprecationWarnings","showReturnTypes","showQuickActions","showSeeAlso","showPerformanceHints","showKeyboardHints","maxContentLength","getConfig","refresh","inventoryCacheDays","snippetCacheHours","telemetryEnabled","autoDetectLibrariesEnabled","getValue","key","defaultValue","s1","s2","zlib_deflate","utils","strings","ZStream","toString","Z_NO_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","options","assign","level","chunkSize","memLevel","strategy","opt","raw","err","ended","chunks","status","deflateInit2","Error","header","deflateSetHeader","call","deflateSetDictionary","_dict_set","deflator","data","flush_mode","_flush_mode","onData","deflateEnd","onEnd","chunk","flattenChunks","URL","zero","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","D_CODES","_dist_code","_length_code","MAX_MATCH","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","s","w","pending_buf","pending","send_bits","value","bi_valid","bi_buf","send_code","tree","bi_reverse","code","res","gen_codes","bl_count","next_code","MAX_BITS","init_block","LITERALS","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","sym_next","matches","bi_windup","smaller","m","depth","_n2","_m2","pqdownheap","heap","j","heap_len","compress_block","ltree","dtree","lc","sx","sym_buf","build_tree","desc","stree","node","heap_max","h","xbits","f","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block","stored_len","_tr_init","LENGTH_CODES","L_CODES","tr_static_init","l_desc","d_desc","bl_desc","_tr_flush_block","opt_lenb","static_lenb","max_blindex","block_mask","detect_data_type","BL_CODES","build_bl_tree","lcodes","dcodes","blcodes","rank","send_all_trees","_tr_tally","sym_end","_tr_align","STATIC_TREES","bi_flush","fetch","nodeFetch","default","InventoryManager","cacheManager","logger","configManager","packageDetector","getAllLibraryConfigs","customLibs","allLibs","THIRD_PARTY_LIBRARIES","validationErrors","customLib","errors","validateCustomLibrary","errorMsg","existingIndex","findIndex","lib","nameValidation","URLValidator","validateName","isValid","forEach","warning","inventoryUrl","trim","invValidation","validateInventoryURL","baseUrl","baseValidation","validateBaseURL","getInventory","cacheKey","maxAge","CacheManager","hoursToMs","cached","isExpired","timestamp","inventory","fetchInventory","inventoryObj","invalidateCache","getThirdPartyInventory","libraryName","pythonPath","versionedConfig","getVersionedLibraryConfig","isExactMatch","fetchVersionedInventory","fetchThirdPartyInventory","controller","AbortController","timeoutId","setTimeout","abort","response","headers","clearTimeout","ok","statusText","buffer","arrayBuffer","parseThirdPartyInventory","DOCS_BASE_URL","parseInventory","compressedData","lines","pako","to","entry","parseInventoryLine","qualifiedName","domain","role","existing","shouldReplaceEntry","entryCount","parseThirdPartyInventoryLine","domainRoleName","priority","parseInt","uriParts","isNaN","newEntry","priorityOrder","existingKey","newKey","existingPriority","indexOf","newPriority","replacementName","resolveSymbol","baseModule","thirdPartyInventory","searchPatterns","pattern","endsWith","candidates","inventoryEntry","builtinEntry","commonTypes","typeEntry","objectEntry","baseMethodName","baseEntry","dataModelEntries","exceptionEntry","selected","selectBestCandidate","isPythonKeyword","createKeywordFallback","createSpecialMethodFallback","mapping","domainRolePriority","pyEntries","stdLabelEntries","a","b","aKey","bKey","aPriority","bPriority","searchSymbols","query","limit","results","lowercaseQuery","aExact","bExact","installedVersion","getPackageVersion","buildVersionedConfig","testInventoryUrl","fallbackConfig","findClosestVersion","major","minor","Number","tryVersions","tryVersion","fallback","getAllSupportedLibraries","builtIn","custom","existingNames","has","localeCompare","getSupportedLibrariesCount","builtInNames","uniqueCustom","SymbolResolver","resolveSymbolAtPosition","wordRange","getWordRangeAtPosition","word","getText","character","commentStart","PYTHON_KEYWORDS","PYTHON_BUILTINS","PYTHON_EXCEPTIONS","stopwords","cursorIndex","rawLine","lastSingleQuote","lastIndexOf","lastDoubleQuote","quotePos","quoteChar","prefixStart","hasF","closingQuote","singleQuoteBefore","doubleQuoteBefore","quoteBefore","maxOpLen","o","winStart","winEnd","sortedOps","op","idx","absIdx","dottedMatch","findDottedAccess","fullPath","baseType","moduleMatch","findModuleContext","isInImportContext","isLikelyClassName","isFollowedByDotOrParen","charAt","isLeftOfDot","dotPos","start","baseStart","baseObject","substring","inferBaseType","libraryAliases","_position","fromImportMatch","moduleName","aliasMatch","alias","prefix","author","outputChannel","createOutputChannel","instance","args","formattedMessage","appendLine","console","log","stack","updateConfig","getOutputChannel","show","dispose","detectPythonVersion","detectPythonVersionInfo","configVersion","getPythonPath","undefined","getFromPythonExtension","getFromProjectFiles","getDefaultVersion","normalizePythonVersion","pythonExt","extensions","getExtension","isActive","activate","versionMatch","pythonApi","settings","activeEnv","getExecutionDetails","execCommand","folder","checkPyprojectToml","checkPipfile","checkRuntimeTxt","workspaceRoot","pyprojectPath","readFile","pythonVersionMatch","extractVersionFromRange","requiresPythonMatch","pipfilePath","runtimePath","versionRange","getSupportedVersions","isVersionSupported","inventoryManager","versionDetector","symbolResolver","documentationFetcher","DocumentationFetcher","contextDetector","ContextDetector","methodResolver","MethodResolver","customDocsLoader","pendingHoverRequests","theme","HoverTheme","debounceTimers","versionCache","getDebounceDelay","getVersionCacheTTL","refreshTheme","reloadCustomDocs","getCachedPythonVersion","getWorkspaceFolder","versionInfo","clearVersionCache","provideHover","isCancellationRequested","requestKey","existingTimer","debouncedPromise","Promise","resolve","timer","delete","provideHoverImpl","_token","pythonVersion","symbols","primarySymbol","customDoc","createCustomDocHover","documentText","importedLibsMap","getImportedLibraries","importedLibsSet","createModuleHover","sourceLibrary","maxLines","fetchDocumentationForSymbol","createRichHover","thirdPartyDoc","getThirdPartyDoc","createThirdPartyHover","baseSymbol","library","detectMethodContext","SPECIAL_METHOD_DESCRIPTIONS","dunderMethodName","dunderInfo","createDunderMethodHover","lookupSymbol","createFStringHover","createOperatorHover","createEnhancedExampleHover","createNetworkErrorHover","md","createMarkdown","appendMarkdown","formatWarning","formatTip","formatDivider","formatActionLinks","command","icon","Hover","_symbolInfo","pythonVersionInfo","MarkdownString","isTrusted","supportHtml","supportThemeIcons","formatCustomDoc","appendVersionFooter","formatHeader","badges","formatBadgeGroup","formatContent","links","badge","libDoc","symbolInfo","displayType","formatSectionHeader","formatCodeBlock","formatNote","encodedDocUrl","encodeURIComponent","symbolName","uiConfig","displayName","deprecation","isDeprecated","formatDeprecation","alternative","docUrl","encodedUrl","formatQuickActions","signature","extractSignature","formatSignatureBox","params","extractParameters","formatParameterTable","returnInfo","extractReturnInfo","formatReturnType","maxLength","summary","extractBestParagraph","readMoreCmd","formatContentWithTruncation","appendExamplesSection","appendVersionInfo","appendMethodComparison","related","findRelatedSymbols","formatSeeAlso","appendRelatedMethodsSection","appendActionLinks","shortcuts","formatKeyboardHint","examplesText","fullUrl","operatorDocumentation","fetchOperatorDocumentation","paragraphs","p","goodParagraphs","totalLength","methodKey","relatedMethods","getRelatedMethodsForMethod","methodsToShow","formatListItem","displayUrl","formatLink","getVersionInfo","formatVersionInfo","getMethodComparison","formatComparison","docContent","paramRegex","required","argsSection","argLines","googleMatch","codeBlockMatch","inlineMatch","sigMatch","deprecatedMatch","altMatch","sphinxMatch","fullText","typeMatch","rtypeMatch","crcTable","Uint32Array","makeTable","crc","execAsync","promisify","CACHE_TTL","hasShownErrorNotification","packageCache","detectPythonEnvironment","envType","detectEnvironmentType","getPythonVersion","detectFromWorkspace","lowerPath","stdout","venvPaths","venvPath","access","getInstalledPackages","packages","timeout","pkg","location","errorMessage","helpMessage","clearCache","getPackagesFromSitePackages","sitePackagesPath","readdir","packageName","metadataPath","isPackageInstalled","getCacheStats","punycode","tr46","specialSchemes","ftp","file","gopher","https","ws","wss","failure","Symbol","countSymbols","ucs2","at","fromCodePoint","isASCIIDigit","isASCIIAlpha","isASCIIHex","isSingleDot","isWindowsDriveLetterString","codePointAt","isSpecialScheme","scheme","isSpecial","percentEncode","toUpperCase","isC0ControlPercentEncode","extraPathPercentEncodeSet","isPathPercentEncode","extraUserinfoPercentEncodeSet","isUserinfoPercentEncode","percentEncodeChar","encodeSetPredicate","cStr","Buffer","utf8PercentEncode","parseIPv4Number","R","parseHost","isSpecialArg","address","pieceIndex","compress","pointer","numbersSeen","ipv4Piece","number","swaps","temp","parseIPv6","search","decoded","parseOpaqueHost","utf8PercentDecode","asciiDomain","toASCII","PROCESSING_OPTIONS","NONTRANSITIONAL","ipv4Host","part","ipv4","counter","parseIPv4","serializeHost","host","floor","serializeIPv4","arr","maxIdx","maxLen","currStart","currLen","findLongestZeroSequence","ignore0","serializeIPv6","shortenPath","includesCredentials","username","password","URLStateMachine","encodingOverride","stateOverride","parseError","port","fragment","cannotBeABaseURL","trimControlChars","trimTabAndNewline","atFlag","arrFlag","passwordTokenSeenFlag","isASCIIAlphanumeric","codePoint","encodedCodePoints","fileOtherwiseCodePoints","cp1","cp2","shift","serializeURL","excludeFragment","serializeURLOrigin","parseURL","e","serializeOrigin","basicURLParse","usm","baseURL","setTheUsername","setThePassword","cannotHaveAUsernamePasswordPort","serializeInteger","integer","TYPE_METHOD_MAP","conversions","sign","x","createNumberConversion","bitLength","typeOpts","unsigned","lowerBound","upperBound","moduloVal","moduloBitLength","moduloBound","V","enforceRange","isFinite","clamp","evenRound","val","treatNullAsEmptyString","S","U","d","Impl","impl","implSymbol","arguments","setup","toJSON","defineProperty","href","enumerable","configurable","origin","protocol","hostname","pathname","obj","implementation","create","constructorArgs","privateData","wrapper","wrapperSymbol","interface","expose","Window","Worker","mappingTable","TRANSITIONAL","normalize","findStatus","mid","target","regexAstralSymbols","combiningMarksRegex","validateLabel","label","processing_option","substr","toUnicode","processing","domain_name","useSTD3","hasError","processed","mapChars","labels","validation","verifyDnsLength","l","importMap","libraryDocs","isKnownLibrary","some","imports","trimmed","importAsMatch","fromMatch","fullModule","importedItems","item","cleanItem","asMatch","simpleImportMatch","numpy","pandas","requests","flask","django","matplotlib","scipy","sklearn","bs4","sqlalchemy","fastapi","pytest","selenium","pydantic","pillow","mixin","source","getOwnPropertyNames","getOwnPropertyDescriptor","wrapperForImpl","implForWrapper","parsedBase","parsedURL","_url","zlib_inflate","GZheader","inflator","last_avail_out","next_out_utf8","tail","utf8str","beg","s_window","lcode","dcode","lmask","dmask","top","dolen","Readable","BUFFER","Blob","blobParts","buffers","element","ArrayBuffer","isView","byteOffset","byteLength","concat","ab","stream","readable","_read","relativeStart","relativeEnd","span","slicedBuffer","blob","FetchError","systemError","captureStackTrace","convert","defineProperties","toStringTag","writable","INTERNALS","PassThrough","Body","body","_this","_ref","_ref$size","_ref$timeout","isURLSearchParams","isBlob","isBuffer","disturbed","on","consumeBody","_this4","reject","alloc","accum","accumBytes","resTimeout","getAll","clone","p1","p2","bodyUsed","getBoundary","pipe","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","then","ct","_this2","textConverted","_this3","charset","convertBody","mixIn","proto","invalidTokenRegex","invalidHeaderCharRegex","validateValue","Headers","init","rawHeaders","headerNames","headerName","iterator","pairs","pair","callback","thisArg","getHeaders","_pairs$i","createHeadersIterator","kind","INTERNAL","HeadersIteratorPrototype","setPrototypeOf","getPrototypeOf","_INTERNAL","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","INTERNALS$1","STATUS_CODES","Response","contentType","redirected","INTERNALS$2","parse_url","format_url","urlStr","streamDestructionSupported","isRequest","Request","inputBody","isAbortSignal","redirect","follow","agent","AbortError","URL$1","PassThrough$1","request","contentLengthValue","totalBytes","getNodeRequestOptions","send","destroyStream","emit","aborted","abortAndFinalize","finalize","req","reqTimeout","removeEventListener","addEventListener","once","errorCallback","hadError","listenerCount","fixResponseChunkedTransferBadEnding","process","addListener","hasDataListener","createHeadersLenient","isRedirect","statusCode","locationURL","requestOpts","destination","original","orig","dest","isDomainOrSubdomain","response_options","statusMessage","codings","zlibOptions","finishFlush","write","writeToStream","destroy","className","methods","DEFAULT_SPECIAL_METHODS","globalStorageUri","cacheDir","ensureCacheDir","mkdir","recursive","getCacheFilePath","shortHash","crypto","createHash","digest","filePath","etag","lastModified","writeFile","maxAgeMs","unlink","files","filesDeleted","success","getStats","totalSize","stat","fileCount","daysToMs","days","hours","Z_PARTIAL_FLUSH","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_UNKNOWN","MIN_LOOKAHEAD","INIT_STATE","BUSY_STATE","FINISH_STATE","errorCode","slide_hash","w_size","hash_size","prev","HASH","hash_shift","hash_mask","flush_pending","pending_out","flush_block_only","block_start","strstart","put_byte","putShortMSB","read_buf","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","window_size","ins_h","deflate_stored","min_block","pending_buf_size","high_water","deflate_fast","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","DeflateState","gzhead","gzindex","last_flush","w_bits","hash_bits","HEAP_SIZE","lit_bufsize","deflateStateCheck","deflateResetKeep","deflateReset","deflateInit","old_flush","level_flags","gzhead_extra","bstate","deflate_huff","deflate_rle","tmpDict","avail","deflateInfo","validateURL","parsedUrl","requireProtocol","requiredProtocol","mustEndWith","shouldContain","missingPatterns","isURLReachable","withoutModule","methodPatterns","TypeDetectionService","detectTypeFromValue","trimmedValue","isStringLiteral","isListComprehension","isDictComprehension","isSetComprehension","isGeneratorExpression","isLambdaExpression","detectConstructorCall","constructorMatch","constructorName","isBuiltinType","typeName","BUILTIN_TYPES","regexCache","getCachedRegex","detectVariableTypeFromContext","variableName","assignmentRegex","assignmentMatch","detectedType","walrusRegex","walrusMatch","annotationRegex","annotationMatch","dotMatch","objectName","fontSize","showEmojis","showColors","showBorders","getSymbolEmoji","getSymbolIcon","symbolType","_icon","formatBadge","language","linkIcon","bullet","bulletMap","formatTypeHint","typeIcon","tipIcon","noteIcon","link","formatParameter","formatSignature","param","returnType","formatPerformance","complexity","note","readMoreCommand","truncated","lastPeriod","lastNewline","breakPoint","buildFullUrlFromInfo","exampleEnricher","ExampleEnricher","hasMapping","getDunderInfo","hasDocumentationMapping","fetchFromDirectMapping","fetchDocumentation","fallbackUrl","fallbackMessage","getDocumentationInfo","FetchWithTimeout","snippet","extractDirectMappingContent","fetchAndExtractSnippet","buildFullUrl","extractRelevantSection","section","extractAnchoredSection","htmlToMarkdown","paraFallback","extractParagraphsAfterAnchor","extracted","extractMainContent","idRegex","escapeRegex","idMatch","startPos","hrefRegex","hrefMatch","searchArea","paraRegex","combined","operatorInfo","anchorRegex","headerSearch","headerMatch","headerEnd","remainingHtml","nextHeaderRegex","nextMatch","sectionEndPos","startIndex","extractDataModelMethod","extractCompoundStatementKeyword","sectionStart","findSectionStart","sectionEnd","findSectionEnd","extractedHtml","anchorPosition","searchStart","searchEnd","dtRegex","dtMatch","methodStart","dtPosition","dtEndPosition","endPatterns","methodEnd","searchAreaForEnd","lastIndex","endMatch","endPosition","headerEndPos","nextNumberedSectionRegex","nextSectionMatch","sectionContent","altHeaderMatch","headerLevel","nextHeaderMatch","relevantContent","syntaxRegex","syntaxMatch","syntaxPos","syntaxArea","syntaxBlockRegex","syntaxBlockMatch","paragraphRegex","paragraphCount","paragraph","paragraphText","combinedContent","_html","_anchor","isCompoundStmt","isDataModel","earliestEnd","searchText","matchPosition","contentSelectors","regex","bodyMatch","_symbolName","_match","resolvedUrl","cleanContent","stripTags","pathParts","relativeParts","baseUrlWithoutFragment","_","repeat","timeoutMs","DEFAULT_TIMEOUT_MS","fetchText","fetchJson","isReachable","Z_ERRNO","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_BINARY","Z_TEXT","_has","sources","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","prop","r","ConfigurationManager","PackageDetector","VersionDetector","hoverProvider","PythonHoverProvider","hoverProviderDisposable","languages","registerHoverProvider","subscriptions","statusBarItem","createStatusBarItem","StatusBarAlignment","Right","updateStatusBar","stats","sizeMB","toFixed","tooltip","statusBarInterval","setInterval","clearInterval","onDidChangeConfiguration","event","affectsConfiguration","environments","onDidChangeActiveEnvironmentPath","disposable","registerCommand","sizeKB","Uri","env","openExternal","clipboard","writeText","editor","activeTextEditor","SnippetString","insertSnippet","sizes","currentSize","currentIndex","newSize","ConfigurationTarget","Global","allLibraries","counts","autoDetectEnabled","dataScience","webFrameworks","testing","database","utilities","categorized","customLibNames","libs","preview","viewColumn","ViewColumn","Beside","catch"],"sourceRoot":""}